,id,language,original,polished,polish_type,model,sem_similarity
0,python_1,Python,"#dt = {} for i in x: dt[i] = dt.get(i,0)+1
import sys;input = sys.stdin.readline
inp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]

import sys
sys.setrecursionlimit(10**6)

def dfs(u):
    global grpah,vis,dp
    vis[u] = 1
    for i in graph[u]:
        if not vis[i]:
            dfs(i)
        dp[u] = max(dp[u],dp[i] + 1)

n,m = ip()
graph = {i:[] for i in range(1,n+1)}
for i in range(m):
    a,b = ip()
    graph[a].append(b)

dp = [0]*(n+1)
vis = [0]*(n+1)
for i in range(1,n+1):
    if not vis[i]:
        dfs(i)
#print(dp)
print(max(dp))","```
import sys
import heapq
input = sys.stdin.readline
inp, ip = lambda: int(input()), lambda: [int(w) for w in input().split()]

sys.setrecursionlimit(10**6)

graph = {}
vis = {}
dp = {}

n, m = ip()
for i in range(1, n + 1):
    graph[i] = []
    vis[i] = 0
    dp[i] = 0

for _ in range(m):
    a, b = ip()
    graph[a].append(b)

def dfs(u):
    global vis, dp
    vis[u] = 1
    for i in graph[u]:
        if not vis[i]:
            dfs(i)
    dp[u] = max(dp[u], max(dp[i] + 1 for i in graph[u]))

max_depth = 0
for i in range(1, n + 1):
    if not vis[i]:
        dfs(i)
    max_depth = max(max_depth, dp[i])

print(max_depth)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8744
1,python_2,Python,"n = int(input())
ans = 'ABC' if n < 1000 else 'ABD'
print(ans)
","```
n = int(input())
ans = 'ABC' if n < 1000 else 'ABD'
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8819
2,python_3,Python,"N,M = list(map(int,input().split()))

X = []

for i in range(N):
    x,y,z = list(map(int,input().split()))
    X.append([x,y,z])

max_score = 0
for i in range(8):
    a = i%2
    j = i//2
    b = j%2
    k = j//2
    c = k%2
    a,b,c = 2*a-1,2*b-1,2*c-1
    Z = []
    for j in range(N):
        Z.append(a*X[j][0]+b*X[j][1]+c*X[j][2])
    Z.sort(reverse=True)
    max_score = max(sum(Z[:M]),max_score)

print(max_score)","```
N, M = list(map(int, input().split()))

X = []

for i in range(N):
    x, y, z = list(map(int, input().split()))
    X.append([x, y, z])

max_score = 0
for i in range(8):
    a = (i % 2) - 1
    j = i // 2
    b = (j % 2) - 1
    k = j // 2
    c = (k % 2) - 1
    Z = []
    for j in range(N):
        Z.append(a * X[j][0] + b * X[j][1] + c * X[j][2])
    Z.sort(reverse=True)
    max_score = max(sum(Z[:M]), max_score)

print(max_score)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9031
3,python_4,Python,"import sys
from collections import Counter
readline = sys.stdin.readline

N = int(readline())
A = list(map(int, readline().split()))
MOD = 1000000007

def calc(A):
    CA = Counter(A)
    if max(CA.values()) > 3:
        return 0
    
    pop = [0]*(N+3)
    pop[-1] = 3
    
    res = 1
    for a in A:
        if pop[a-1] <= 0:
            return 0
        res = (res*pop[a-1]) %MOD
        pop[a-1] -= 1
        pop[a] += 1
        
    
    
        
    return res
        

print(calc(A))","```
import sys
from collections import Counter
readline = sys.stdin.readline

N = int(readline())
A = list(map(int, readline().split()))
MOD = 1000000007

def calc(A):
    CA = Counter(A)
    if max(CA.values()) > 3:
        return 0

    pop = [0] * (N + 3)
    pop[-1] = 3

    res = 1
    for a in A:
        if pop[a - 1] <= 0:
            return 0
        res = (res * pop[a - 1]) % MOD
        pop[a - 1] -= 1
        pop[a] += 1

    return res

print(calc(A))
```",extreme_minor,Meta-Llama-2-7b-chat,0.9059
4,python_5,Python,"N, K = map(int, input().split())
H = list(map(int, input().split()))

a = N-K
if a < 0:
    ans = 0
else:
    h = sorted(H)[:a]
    ans = sum(h)
print(ans)","```
N, K = map(int, input().split())
H = list(map(int, input().split()))

a = N - K
if a < 0:
    ans = 0
else:
    h = sorted(H)[:a]
    ans = sum(h)
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8442
5,python_6,Python,"a,b,c = map(int, input().split())

if (a <= c and c <= b) or (b <= c and c <= a):
    print(""Yes"")
else:
    print(""No"")
","```
a, b, c = map(int, input().split())

if a <= c <= b or b <= c <= a:
    print(""Yes"")
else:
    print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8196
6,python_7,Python,"L = input()

N = len(L)
mod = int(1e9 + 7)

# 桁DP
# a+b <= N 確定
dp1 = [0] * N
# a+b <= N 未確定
dp2 = [0] * N

# L[0] == 1なので、初期値が決まる（はず）
dp1[0] = 1 # (A0,B0) = (0,0)
dp2[0] = 2 # (A0,B0) = (0,1), (1,0)

for i in range(1,N):
  dp1[i] += dp1[i-1] * 3 # (1,1)以外の3パターン
  dp1[i] %= mod
  if L[i] == '1':
    dp1[i] += dp2[i-1] # (0,0)
    dp2[i] += dp2[i-1] * 2 # (1,0),(0,1)
  else:
    # L[i] == '0'
    dp2[i] += dp2[i-1] # (0,0)
  dp1[i] %= mod
  dp2[i] %= mod
  
print((dp1[N-1] + dp2[N-1]) % mod)","```
L = input()

N = len(L)
mod = int(1e9 + 7)

dp1 = [0] * N
dp2 = [0] * N

dp1[0] = 1
dp2[0] = 2

for i in range(1, N):
    dp1[i] = (dp1[i-1] * 3) % mod
    if L[i] == '1':
        dp1[i] = (dp1[i] + dp2[i-1]) % mod
        dp2[i] = (dp2[i-1] * 2) % mod
    else:
        dp2[i] = (dp2[i-1]) % mod
    dp1[i] %= mod
    dp2[i] %= mod

print((dp1[N-1] + dp2[N-1]) % mod)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8748
7,python_8,Python,"n, a, b = [int(_) for _ in input().split()]
m = a + b - n
if m < 0:
    m = 0
print(min(a, b), m)","```
n, a, b = [int(i) for i in input().split()]
m = a + b - n
if m < 0:
    m = 0
print(min(a, b), m)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8548
8,python_9,Python,"from collections import defaultdict

N, K = map(int, input().split())
A = list(map(int, input().split()))

d = defaultdict(list)

p = 1
root = []

#s, e = 0, 0

for i in range(K):
    d[p].append(i)
    root.append(p)
    if len(d[p]) == 2:
        s = d[p][0]
        e = i
        n = (K - s) % (e - s)
        p = root[s + n]
        break
    p = A[p - 1]
#print(s, e)

#print(root)

#n = (K - s) % (e - s)
print(p)","```
from collections import defaultdict

N, K = map(int, input().split())
A = list(map(int, input().split()))

d = defaultdict(list)

p = 1
root = []

for i in range(K):
    d[p].append(i)
    root.append(p)
    if len(d[p]) == 2:
        s = d[p][0]
        e = i
        n = (K - s) % (e - s)
        p = root[s + n]
        break
    p = A[p - 1]

print(p)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8801
9,python_10,Python,"N = int(input())
S1 = input()
S2 = input()
i = 0
T = []
while i < N:
    if S1[i]==S2[i]:
        T.append(""C"")
    else:
        T.append(""R"")
        i += 1
    i += 1
Ans = 3 if T[0]==""C"" else 6
for i in range(1,len(T)):
    if T[i-1] == ""C"":
        if T[i] == ""C"":
            Ans *= 2
        else:
            Ans *= 2
    else:
        if T[i] == ""C"":
            Ans *= 1
        else:
            Ans *= 3
    Ans %= 10**9+7
print(Ans)","```
N = int(input())
S1 = input()
S2 = input()
T = []
for i in range(N):
    if S1[i] == S2[i]:
        T.append(""C"")
    else:
        T.append(""R"")
Ans = 3 if T[0] == ""C"" else 6
for i in range(1, len(T)):
    if T[i-1] == ""C"":
        Ans = Ans * 2 % (10**9 + 7) if T[i] == ""C"" else Ans * 2 % (10**9 + 7)
    else:
        Ans = Ans * 1 % (10**9 + 7) if T[i] == ""C"" else Ans * 3 % (10**9 + 7)
print(Ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8949
10,python_11,Python,"# ABC136A

a, b, c = map(int, input().split())
print(max(0, c-(a-b)))
","```
# ABC136A

a, b, c = map(int, input().split())
print(max(0, c - (a - b)))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8092
11,python_12,Python,"n=int(input())

k=2
while(2*n > k*(k-1)):
    k+=1

if(2*n!=k*(k-1)):
    print(""No"")
else:
    print(""Yes"")
    print(k)
    tmp=0
    result=[[0]*(k-1) for i in range(k)]
    for i in range(k):
        for j in range(i):
            result[i][j]=result[j][i-1]
        for l in range(k-i-1):
            tmp+=1
            result[i][i+l]=tmp
        
    for j in range(k):
        print(""{} "".format(k-1),end="""")
        for i in range(k-2):
            print(""{} "".format(result[j][i]),end="""")
        print(result[j][k-2])","```
n = int(input())

k = 2
while 2 * n > k * (k - 1):
    k += 1

if 2 * n!= k * (k - 1):
    print(""No"")
else:
    print(""Yes"")
    print(k)
    tmp = 0
    result = [[0] * (k - 1) for _ in range(k)]
    for i in range(k):
        for j in range(i):
            result[i][j] = result[j][i - 1]
        for l in range(k - i - 1):
            tmp += 1
            result[i][i + l] = tmp

    for j in range(k):
        print(""{} "".format(k - 1), end="""")
        for i in range(k - 2):
            print(""{} "".format(result[j][i]), end="""")
        print(result[j][k - 2])
```",extreme_minor,Meta-Llama-2-7b-chat,0.9099
12,python_13,Python,"N=int(input())

if N % 1000 == 0:
    print(0)
else:
    print(1000 - N%1000)","```
n = int(input())

if n % 1000 == 0:
    print(0)
else:
    print(1000 - n % 1000)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8129
13,python_14,Python,"N = int(input())
X = list(map(int, input().split()))

sorted_X = sorted(X)

left_med = sorted_X[N//2 -1]
right_mid = sorted_X[N//2]

for i in range(N):
    if X[i] <= left_med:
        print(right_mid)
    else:
        print(left_med)","```
n = int(input())
x = list(map(int, input().split()))

sorted_x = sorted(x)

left_med = sorted_x[n//2 - 1]
right_mid = sorted_x[n//2]

for i in range(n):
    if x[i] <= left_med:
        print(right_mid)
    else:
        print(left_med)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8598
14,python_15,Python,"s = input()

for i in range(97, 97 + 26):
    if chr(i) not in s:
        print(chr(i))
        break

else:
    print(None)
","```
s = input()

for i in range(97, 123):
    if chr(i) not in s:
        print(chr(i))
        break
else:
    print(None)
```",extreme_minor,Meta-Llama-2-7b-chat,0.839
15,python_16,Python,"n, c = map(int, input().split())
r = [[0 for i in range(c)] for j in range(100000)]  # テレビ局の番組表
for dummy in range(n):  # 入力
    s, t, c = map(int, input().split())
    for j in range(s - 1, t):
        r[j][c - 1] = 1  # 放送中なら1
ans = 0
for i in range(100000):
    if sum(r[i]) > ans:
        ans = sum(r[i])  # 同時に放送されている番組の最大数
print(ans)","```
n, c = map(int, input().split())
r = [[0] * c for _ in range(100000)]  # テレビ局の番組表
for _ in range(n):  # 入力
    s, t, c = map(int, input().split())
    for j in range(s - 1, t):
        r[j][c - 1] = 1  # 放送中なら1
ans = 0
for i in range(100000):
    if sum(r[i]) > ans:
        ans = sum(r[i])  # 同時に放送されている番組の最大数
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9108
16,python_17,Python,"C1 = input()
C2 = input()

if C2 == C1[::-1]:
    print('YES')
else:
    print('NO')","```
C1 = input()
C2 = input()

if C2 == C1[::-1]:
    print('YES')
else:
    print('NO')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8298
17,python_18,Python,"A, B = map(int, input().split())
a = 0
for i in range(A, B+1):
    i = str(i)
    if i == i[::-1]:
        a += 1
print(a)","```
A, B = map(int, input().split())
a = 0
for i in range(A, B + 1):
    i = str(i)
    if i == i[::-1]:
        a += 1
print(a)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8414
18,python_19,Python,"import sys
from math import gcd
from functools import reduce

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines
sys.setrecursionlimit(10 ** 9)
INF = 1 << 60
MOD = 1000000007


def main():
    N, *A = map(int, read().split())

    print(reduce(gcd, A))
    return


if __name__ == '__main__':
    main()
","```
import sys
from math import gcd
from functools import reduce

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines
sys.setrecursionlimit(10**9)
INF = 1 << 60
MOD = 1000000007

def main():
    N, *A = map(int, read().split())
    print(reduce(gcd, A))

if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8769
19,python_20,Python,"n = int(input())
v_list = map(int, input().split())
c_list = map(int, input().split())
sum = 0

for v, c in zip(v_list, c_list):
    if v - c > 0:
        sum += v - c

print(sum)
","```
n = int(input())
v_list = list(map(int, input().split()))
c_list = list(map(int, input().split()))
total = 0

for value, cost in zip(v_list, c_list):
    if value - cost > 0:
        total += value - cost

print(total)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7844
20,python_21,Python,"# 色の塗り方は全部で何通りか。O(C^3)で、C^3 = 27000通り。
# 各塗り方に対していちいち計算していると最大25000マスで、これだと間に合わない。
# 3つに別れた各部分を各色に変えるコスト合計を前計算しておけば良い。O(C^3 + N^2 C)。
# 一ひねりした全探索。

n, c = list(map(int, input().split()))
change_cost = [list(map(int, input().split())) for _ in range(c)]
init_color = [list(map(int, input().split())) for _ in range(n)]

cost = [[0 for _ in range(c)] for _ in range(3)]

for row in range(n):
    for col in range(n):
        before = init_color[row][col] - 1
        for after in range(c):
            idx = (row + col) % 3
            cost[idx][after] += change_cost[before][after]

ans = 1000 * 500 * 500 * 10
for ci in range(c):
    for cj in range(c):
        for ck in range(c):
            if (ci != cj != ck != ci):
                ans = min(ans, cost[0][ci] + cost[1][cj] + cost[2][ck])

print(ans)
","```
# Color's painting methods are all how many times. O(C^3) for, C^3 = 27000 times.
# Each painting method against, calculate individually, then it won't be finished even at maximum 25000 cells.
# 3 parts separated, each part to each color, total cost to pre-calculate, O(C^3 + N^2 C).
# Whole search with a twist.

n, c = map(int, input().split())
change_cost = [list(map(int, input().split())) for _ in range(c)]
init_color = [list(map(int, input().split())) for _ in range(n)]

cost = [[0] * c for _ in range(3)]

for row in range(n):
    for col in range(n):
        before = init_color[row][col] - 1
        for after in range(c):
            idx = (row + col) % 3
            cost[idx][after] += change_cost[before][after]

ans = 1000 * 500 * 500 * 10
for ci in range(c):
    for cj in range(c):
        for ck in range(c):
            if ci!= cj!= ck!= ci:
                ans = min(ans, cost[0][ci] + cost[1][cj] + cost[2][ck])

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8337
21,python_22,Python,"N = int(input())
e = [0] * (N+1)
for i in range(2, N+1):
  cur = i
  for j in range(2, i+1):
    while cur % j == 0:
      e[j] += 1
      cur //= j

def num(m):
  return len(list(filter(lambda x: x >= m-1, e)))

print(num(75)+num(25)*(num(3)-1)+num(15)*(num(5)-1)+num(5)*(num(5)-1)*(num(3)-2)//2)","```
N = int(input())
e = [0] * (N + 1)
for i in range(2, N + 1):
    cur = i
    for j in range(2, i + 1):
        while cur % j == 0:
            e[j] += 1
            cur //= j

def num(m):
    return len(list(filter(lambda x: x >= m - 1, e)))

print(num(75) + num(25) * (num(3) - 1) + num(15) * (num(5) - 1) + num(5) * (num(5) - 1) * (num(3) - 2) // 2)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9047
22,python_23,Python,"a,b,c=map(int,input().split())
if ((b-a)==(c-b)):
    print (""YES"")
else:
    print(""NO"")","```
a, b, c = map(int, input().split())
if (b - a) == (c - b):
    print(""YES"")
else:
    print(""NO"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8108
23,python_24,Python,"x = [int(i) for i in input().split()]
print(x.index(0) + 1)","```
x = [int(i) for i in input().split()]
print(x.index(0) + 1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8628
24,python_25,Python,"a, v = map(int, input().split())
b, w = map(int, input().split())
t = int(input())
 
position_diff = abs(a-b)
pace_diff = v-w
 
if pace_diff <= 0:
    print('NO')
elif pace_diff > 0:
    if pace_diff * t >= position_diff:
        print('YES')
    else:
        print('NO')","```
a, v = map(int, input().split())
b, w = map(int, input().split())
t = int(input())

position_diff = abs(a - b)
pace_diff = v - w

if pace_diff <= 0:
    print('NO')
elif pace_diff > 0:
    if pace_diff * t >= position_diff:
        print('YES')
    else:
        print('NO')
```",extreme_minor,Meta-Llama-2-7b-chat,0.7958
25,python_26,Python,"n = int(input())
*A, = map(int, input().split())

from itertools import product

ans = 0
for P in product(range(3), repeat=n):
    even = 0
    for i in range(n):
        b = A[i] + P[i] - 1
        even |= (b % 2) == 0
    if even:
        ans += 1
print(ans)","```
n = int(input())
*A, = map(int, input().split())

from itertools import product

ans = 0
for P in product(range(3), repeat=n):
    even = sum((A[i] + P[i] - 1) % 2 == 0 for i in range(n))
    if even:
        ans += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8738
26,python_27,Python,"n = int(input())
H = list(map(int, input().split()))

# シミュレーションで求められる
# 目標地点からさかのぼる

ans = 0
for _ in range(max(H)):
    flg = False
    for i in range(n):
        if H[i] > 0:
            H[i] -= 1
            if not flg:
                ans += 1
                flg = True
        elif H[i] == 0:
            flg = False

print(ans)","```
n = int(input())
H = list(map(int, input().split()))

ans = 0
for _ in range(max(H)):
    flag = False
    for i in range(n):
        if H[i] > 0:
            H[i] -= 1
            if not flag:
                ans += 1
                flag = True
        elif H[i] == 0:
            flag = False

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8258
27,python_28,Python,"S = input().replace('BC', 'D')

tmp = 0
ans = 0
for s in S:
    if s == 'A':
        tmp += 1
    elif s == 'D':
        ans += tmp
    else:
        tmp = 0
print(ans)","```
S = input().replace('BC', 'D')

tmp = 0
ans = 0
for s in S:
    if s == 'A':
        tmp += 1
    elif s == 'D':
        ans += tmp
        tmp = 0
    else:
        tmp = 0
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8478
28,python_29,Python,"n = int(input())
a = list(map(int, input().split()))
c = [0]*(10**6 + 1)

for i in a:
    c[i] += 1

cnt = 0

for i in range(2, 10**6 + 1):
    s = sum(c[i::i])
    if s == n:
        print(""not coprime"")
        exit()
    elif s > 1:
        cnt += 1

if cnt > 0:
    print(""setwise coprime"")
else:
    print(""pairwise coprime"")","```
n = int(input())
a = list(map(int, input().split()))
c = [0] * (10**6 + 1)

for i in a:
    c[i] += 1

cnt = 0

for i in range(2, 10**6 + 1):
    s = sum(c[j] for j in range(i, 10**6 + 1, i))
    if s == n:
        print(""not coprime"")
        exit()
    elif s > 1:
        cnt += 1

if cnt > 0:
    print(""setwise coprime"")
else:
    print(""pairwise coprime"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8909
29,python_30,Python,"n,m = map(int,input().split())

ans = 0

ans += m * 1900
ans += (n-m) * 100

print(ans * 2 ** m)
","```
n, m = map(int, input().split())

ans = 0

ans += m * 1900
ans += (n - m) * 100

print(ans * 2 ** m)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8526
30,python_31,Python,"A, B = map(int, input().split())

if A % 2 == 1 and B % 2 == 1:
  print('Yes')
else:
  print('No')","```
a, b = map(int, input().split())

if a % 2 == 1 and b % 2 == 1:
    print('Yes')
else:
    print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8375
31,python_32,Python,"from operator import mul
from functools import reduce
 
 
def cmb(n, r):
    if r > n:
        return 0
    r = min(n-r, r)
    if r == 0:
        return 1
    over = reduce(mul, range(n, n - r, -1))
    under = reduce(mul, range(1, r + 1))
    return over // under
  
N,K= map(int, input().split())
red = N - K
for i in range(K):
    bluesc = cmb(K - 1 , i)
    redsc = cmb(red + 1 , i + 1) 
    ans = (redsc * bluesc) % (10**9+7)
    print(ans)","```
from operator import mul
from functools import reduce

def cmb(n, r):
    if r > n:
        return 0
    r = min(n - r, r)
    if r == 0:
        return 1
    over = reduce(mul, range(n, n - r, -1), 1)
    under = reduce(mul, range(1, r + 1), 1)
    return over // under

N, K = map(int, input().split())
red = N - K
for i in range(K):
    bluesc = cmb(K - 1, i)
    redsc = cmb(red + 1, i + 1)
    ans = (redsc * bluesc) % (10**9 + 7)
    print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.901
32,python_33,Python,"# -*- coding: utf-8 -*-
""""""
Created on Sat May 25 20:54:22 2019

@author: Yamazaki Kenichi
""""""

N,M = map(int,input().split())
A = list(map(int,input().split()))
B = [list(map(int,input().split())) for i in range(M)]

A.sort()
B.sort(reverse=True, key=lambda x: x[1])

tmp = 0
for i in range(N):
    if B[tmp][1] > A[i]:
        A[i] = B[tmp][1]
        B[tmp][0] -= 1
        if B[tmp][0] == 0:
            tmp += 1
        if tmp >= M:
            break
    else:
        break
print(sum(A))
    ","```
# -*- coding: utf-8 -*-
""""""
Created on Sat May 25 20:54:22 2019

@author: Yamazaki Kenichi
""""""

N, M = map(int, input().split())
A = list(map(int, input().split()))
B = [list(map(int, input().split())) for _ in range(M)]

A.sort()
B.sort(reverse=True, key=lambda x: x[1])

tmp = 0
for i in range(N):
    if B[tmp][1] > A[i]:
        A[i] = B[tmp][1]
        B[tmp][0] -= 1
        if B[tmp][0] == 0:
            tmp += 1
        if tmp >= M:
            break
    else:
        break
print(sum(A))
```",extreme_minor,Meta-Llama-2-7b-chat,0.9004
33,python_34,Python,"c = input()
sum = 0;
cc = c[0]
if len(c)!=1:
    for i in range(1,len(c)):
        if (c[i]==cc[i-1]):
            sum+=1
            if (c[i]=='1'):
                cc+='0'
            else:
                cc+='1'
        else:
            cc+=c[i]
print(sum)","```
c = input()
sum = 0
cc = c[0]
if len(c)!= 1:
    for i in range(1, len(c)):
        if c[i] == cc[i - 1]:
            sum += 1
            if c[i] == '1':
                cc += '0'
            else:
                cc += '1'
        else:
            cc += c[i]
print(sum)
```",extreme_minor,Meta-Llama-2-7b-chat,0.868
34,python_35,Python,"N,K = list(map(int,input().strip().split()))
ans = int(10e10)

hlist = [int(input()) for i in range(N)] 

hlist.sort()

for i in range(N-K+1):
    low = hlist[i]
    high = hlist[i+K-1]
    ans = min(ans,(high-low))

print(ans)","```
N, K = map(int, input().strip().split())
ans = 10**10

hlist = [int(input()) for _ in range(N)]
hlist.sort()

for i in range(N - K + 1):
    low, high = hlist[i], hlist[i + K - 1]
    ans = min(ans, high - low)

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8461
35,python_36,Python,"a,b,c =input().split()
total = int(a) + int(b) + int(c)
if total >= 22:
    print('bust')
else:
    print('win')","```
a, b, c = input().split()
total = int(a) + int(b) + int(c)
if total >= 22:
    print('bust')
else:
    print('win')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8426
36,python_37,Python,"n, k = map(int, input().split())
r, s, p = map(int, input().split())
t = input()

d = {""s"":r, ""p"":s, ""r"":p}
score = 0
for idx in range(k):
    List = []
    for i in range(n):
        if idx+i*k > n-1:
            break
        else:
           List.append(t[idx+i*k])
    not_liset = True
    tmp = List[0]
    score += d[tmp]
    for i in range(1, len(List)):
        if tmp == List[i] and not_liset:
            not_liset = False
        else:
            score += d[List[i]]
            not_liset = True
        tmp = List[i]
print(score)","```
n, k = map(int, input().split())
r, s, p = map(int, input().split())
t = input()

d = {""s"": r, ""p"": s, ""r"": p}
score = 0
for idx in range(k):
    list_ = []
    for i in range(n):
        if idx + i * k > n - 1:
            break
        else:
            list_.append(t[idx + i * k])
    not_list_ = True
    tmp = list_[0]
    score += d[tmp]
    for i in range(1, len(list_)):
        if tmp == list_[i] and not_list_:
            not_list_ = False
        else:
            score += d[list_[i]]
            not_list_ = True
        tmp = list_[i]
print(score)
```",extreme_minor,Meta-Llama-2-7b-chat,0.892
37,python_38,Python,"from _collections import deque
h,w,k=map(int,input().split())
S=[input() for _ in range(h)]
A=deque([])
cnt=1

def func(X):
    global cnt
    ANS=[]
    c=X.count('#')
    a=0
    for x in X:
        ANS.append(cnt)
        if x=='#':
            cnt+=1
            a+=1
            if a==c:
                for _ in range(w-len(ANS)):
                    ANS.append(cnt-1)
                break
    A.append(ANS)



for i in range(h):
    if S[i].count('#')==0 and i!=0 and len(A)!=0:
        A.append(A[-1])
    elif S[i].count('#')!=0:
        func(S[i])

if len(A)!=h:
    for _ in range(h-len(A)):
        A.appendleft(A[0])

for ans in A:
    print(*ans)","```
from collections import deque
h, w, k = map(int, input().split())
S = [input() for _ in range(h)]
A = deque([])
cnt = 1

def func(X):
    global cnt
    ANS = []
    c = X.count('#')
    a = 0
    for x in X:
        ANS.append(cnt)
        if x == '#':
            cnt += 1
            a += 1
            if a == c:
                for _ in range(w - len(ANS)):
                    ANS.append(cnt - 1)
                break
    A.append(ANS)

for i in range(h):
    if S[i].count('#') == 0 and i!= 0 and len(A)!= 0:
        A.append(A[-1])
    elif S[i].count('#')!= 0:
        func(S[i])

if len(A)!= h:
    for _ in range(h - len(A)):
        A.appendleft(A[0])

for ans in A:
    print(*ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9126
38,python_39,Python,"K = int(input())
print(""ACL""*K)","```
k = int(input())
print(""ACL"" * k)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8516
39,python_40,Python,"#Nの最大値が100なのでbit-DPでは間に合わない

N = int(input())

s = []
total = 0
for _ in range(N):
    a = int(input())
    s += [a]
    total += a

s.sort()
if total % 10 != 0:
    print (total)
    exit()
else:
    for i in range(N):
        if s[i]%10 != 0:
            print (total - s[i])
            exit()
print (0)
","```
N = int(input())

s = []
total = 0
for _ in range(N):
    a = int(input())
    s.append(a)
    total += a

s.sort()
if total % 10!= 0:
    print(total)
    exit()
else:
    for i in range(N):
        if s[i] % 10!= 0:
            print(total - s[i])
            exit()
print(0)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8487
40,python_41,Python,"a, b = map(int, input().split())

if (a+b) % 2 == 0:
    print((a+b)//2)
else:
    print('IMPOSSIBLE') ","```
a, b = map(int, input().split())

if (a + b) % 2 == 0:
    print((a + b) // 2)
else:
    print('IMPOSSIBLE')",extreme_minor,Meta-Llama-2-7b-chat,0.948
41,python_42,Python,"from fractions import gcd

a, b, c, d = map(int, input().split())
a-=1

def lcm(x, y):
    return (x * y) // gcd(x, y)


l = lcm(c, d)
la = a // l
lb = b // l
aa = a // c + a // d - la
bb = b // c + b // d - lb


print((b - a) - (bb - aa))
","```
from fractions import gcd

a, b, c, d = map(int, input().split())
a -= 1

def lcm(x, y):
    return (x * y) // gcd(x, y)

l = lcm(c, d)
la = a // l
lb = b // l
aa = a // c + a // d - la
bb = b // c + b // d - lb

print((b - a) - (bb - aa))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8038
42,python_43,Python,"R = float(input())
print(R*2*3.141592)","```
R = float(input())
print(R * 2 * 3.141592)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8188
43,python_44,Python,"H, W = map(int, input().split())
c = [list(map(int, input().split())) for _ in range(10)]
for k in range(10):
    for i in range(10):
        for j in range(10):
            c[i][j] = min(c[i][j], c[i][k] + c[k][j])
d = {i: 0 for i in range(-1, 10)}
for _ in range(H):
    A = map(int, input().split())
    for i in A:
        d[i] += 1
ans = 0
for i in range(10):
    if i == 1:
        continue
    ans += c[i][1] * d[i]
print(ans)
","```
H, W = map(int, input().split())
c = [[*map(int, input().split())] for _ in range(10)]
for k in range(10):
    for i in range(10):
        for j in range(10):
            c[i][j] = min(c[i][j], c[i][k] + c[k][j])
d = {i: 0 for i in range(-1, 10)}
for _ in range(H):
    A = list(map(int, input().split()))
    for i in A:
        d[i] += 1
ans = 0
for i in range(10):
    if i == 1:
        continue
    ans += c[i][1] * d[i]
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9108
44,python_45,Python,"
def s0():return input()
def s1():return input().split()
def s2(n):return [input() for x in range(n)]
def s3(n):return [input().split() for _ in range(n)]
def s4(n):return [[x for x in s] for s in s2(n)]
def n0():return int(input())
def n1():return [int(x) for x in input().split()]
def n2(n):return [int(input()) for _ in range(n)]
def n3(n):return [[int(x) for x in input().split()] for _ in range(n)]
def t3(n):return [tuple(int(x) for x in input().split()) for _ in range(n)]
def p0(b,yes=""Yes"",no=""No""): print(yes if b else no)
# from sys import setrecursionlimit
# setrecursionlimit(1000000)
# from collections import Counter,deque,defaultdict
# import itertools
# import math
# import networkx as nx
# from bisect import bisect_left,bisect_right
# from heapq import heapify,heappush,heappop
n,a,b=n1()

def comb(n,k):
    nCk = 1
    MOD = 10**9+7

    for i in range(n-k+1, n+1):
        nCk *= i
        nCk %= MOD

    for i in range(1,k+1):
        nCk *= pow(i,MOD-2,MOD)
        nCk %= MOD
    return nCk

MOD = 10**9+7
a1=comb(n, a)
b1=comb(n, b)
ans=pow(2,n,MOD)-a1-b1-1
print(ans%MOD)","```

def s0(): return input()
def s1(): return input().split()
def s2(n): return [input() for _ in range(n)]
def s3(n): return [input().split() for _ in range(n)]
def s4(n): return [[x for x in s] for s in s2(n)]
def n0(): return int(input())
def n1(): return [int(x) for x in input().split()]
def n2(n): return [int(input()) for _ in range(n)]
def n3(n): return [[int(x) for x in input().split()] for _ in range(n)]
def t3(n): return [tuple(int(x) for x in input().split()) for _ in range(n)]
def p0(b, yes=""Yes"", no=""No""): print(yes if b else no)
n, a, b = n1()
def comb(n, k):
    nCk = 1
    MOD = 10**9 + 7
    for i in range(n - k + 1, n + 1):
        nCk *= i
        nCk %= MOD
    for i in range(1, k + 1):
        nCk *= pow(i, MOD - 2, MOD)
        nCk %= MOD
    return nCk
MOD = 10**9 + 7
a1 = comb(n, a)
b1 = comb(n, b)
ans = pow(2, n, MOD) - a1 - b1 - 1
print(ans % MOD)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8661
45,python_46,Python,"import math
from bisect import bisect_left, bisect_right

Q = int(input())
LR = [list(map(int, input().split())) for _ in range(Q)]

is_prime = [False for _ in range(100001)]
is_prime[3] = True
primes = [3]
for n in range(5, 100001, 2):
    prime = True
    i = 2
    while i < int(math.sqrt(n)) + 1:
        if n % i == 0:
            prime = False
            break
        i += 1
    if prime:
        primes.append(n)
        is_prime[n] = True

like = []
for p in primes:
    if p == 3:
        like.append(p)
        continue
    q = (p+1)//2
    if is_prime[q]:
        like.append(p)

for l, r in LR:
    ans = bisect_right(like, r) - bisect_left(like, l)
    print(ans)","```
import math
from bisect import bisect_left, bisect_right

Q = int(input())
LR = [list(map(int, input().split())) for _ in range(Q)]

is_prime = [False] * 100001
is_prime[3] = True
primes = [3]
for n in range(5, 100001, 2):
    prime = True
    i = 2
    while i < math.isqrt(n) + 1:
        if n % i == 0:
            prime = False
            break
        i += 1
    if prime:
        primes.append(n)
        is_prime[n] = True

like = []
for p in primes:
    if p == 3:
        like.append(p)
        continue
    q = (p + 1) // 2
    if is_prime[q]:
        like.append(p)

for l, r in LR:
    ans = bisect_right(like, r) - bisect_left(like, l)
    print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9083
46,python_47,Python,"N=int(input())
count=0.0
for i in range(1,N+1):
    if(i%2!=0):
        count+=1

print(count/N)","```
n = int(input())
count = 0.0
for i in range(1, n + 1):
    if i % 2!= 0:
        count += 1
print(count / n)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8441
47,python_48,Python,"s=input()

if s.count(""N"")==0 and s.count(""S"")==0:
    if s.count(""W"")>=1 and s.count(""E"")>=1:
        print(""Yes"")
        exit()

if s.count(""W"")==0 and s.count(""E"")==0:
    if s.count(""N"")>=1 and s.count(""S"")>=1:
        print(""Yes"")
        exit()

if s.count(""W"")>=1 and s.count(""E"")>=1 and s.count(""N"")>=1 and s.count(""S"")>=1:
    print(""Yes"")
    exit()

print(""No"")","```
s = input()

if s.count(""N"") == 0 and s.count(""S"") == 0:
    if s.count(""W"") >= 1 and s.count(""E"") >= 1:
        print(""Yes"")
        exit()

if s.count(""W"") == 0 and s.count(""E"") == 0:
    if s.count(""N"") >= 1 and s.count(""S"") >= 1:
        print(""Yes"")
        exit()

if s.count(""W"") >= 1 and s.count(""E"") >= 1 and s.count(""N"") >= 1 and s.count(""S"") >= 1:
    print(""Yes"")
    exit()

print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8877
48,python_49,Python,"a,b,c =map(str, input().split())
A = int(a)
C = int(c)
res = 0
if b == ""+"":
  res = A+C
else:
  res = A-C
print(res)","```
a, b, c = map(str, input().split())
A, C = int(a), int(c)
res = 0
if b == ""+"":
    res = A + C
else:
    res = A - C
print(res)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8068
49,python_50,Python,"import sys
stdin = sys.stdin

sys.setrecursionlimit(10 ** 7)

def li(): return map(int, stdin.readline().split())
def li_(): return map(lambda x: int(x) - 1, stdin.readline().split())
def lf(): return map(float, stdin.readline().split())
def ls(): return stdin.readline().split()
def ns(): return stdin.readline().rstrip()
def lc(): return list(ns())
def ni(): return int(stdin.readline())
def nf(): return float(stdin.readline())


n = ni()
edges = [tuple(li_()) for _ in range(n-1)]
c = list(li())
c.sort()

visited = [False]*n

graph = [[] for _ in range(n)]
for l, r in edges:
    graph[l].append(r)
    graph[r].append(l)

cnt = 0
num = [0]*n

def dfs(node, graph):
    global cnt
    visited[node] = True
    for nei in graph[node]:
        if not visited[nei]:
            dfs(nei, graph)

    num[node] = c[cnt]
    cnt += 1

dfs(0, graph)

ans = 0
for l, r in edges:
    ans += min(num[l], num[r])

print(ans)
print(*num)","```
import sys
stdin = sys.stdin

sys.setrecursionlimit(10**7)

def li(): return map(int, stdin.readline().split())
def li_(): return map(lambda x: int(x) - 1, stdin.readline().split())
def lf(): return map(float, stdin.readline().split())
def ls(): return stdin.readline().split()
def ns(): return stdin.readline().rstrip()
def lc(): return list(ns())
def ni(): return int(stdin.readline())
def nf(): return float(stdin.readline())

n = ni()
edges = tuple(map(lambda x: tuple(map(lambda y: int(y) - 1, x.split())), [ns() for _ in range(n-1)]))
c = sorted(map(int, ns().split()))
visited = [False]*n
graph = [[] for _ in range(n)]
for l, r in edges:
    graph[l].append(r)
    graph[r].append(l)

cnt = 0
num = [0]*n

def dfs(node, graph):
    global cnt
    visited[node] = True
    for nei in graph[node]:
        if not visited[nei]:
            dfs(nei, graph)
    num[node] = c[cnt]
    cnt += 1

dfs(0, graph)

ans = sum(min(num[l], num[r]) for l, r in edges)
print(ans)
print(*num)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8855
50,python_51,Python,"S = input()
T = input()


cnt = 0
for i in range(3):
    if S[i] == T[i]:
        cnt += 1

print(cnt)","```
S = input()
T = input()

cnt = 0
for i in range(len(S)):
    if S[i] == T[i]:
        cnt += 1

print(cnt)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8211
51,python_52,Python,"import sys

input = sys.stdin.readline

t1, t2 = list(map(int,input().split()))
a1, a2 = list(map(int,input().split()))
b1, b2 = list(map(int,input().split()))

da1 = a1*t1
da2 = da1 + a2*t2
db1 = b1*t1
db2 = db1 + b2*t2

if da2==db2:
	ans = 'infinity'
else:
	if (da1-db1)*(da2-db2)>0:
		ans = 0
	else:
		fdif = abs(da1-db1)
		sdif = abs(da2-db2)
		iteration = fdif//sdif
		mod = fdif%sdif
		if mod==0:
			ans = iteration*2
		else:
			ans = iteration*2+1

print(ans)","```
import sys

input = sys.stdin.readline

t1, t2 = list(map(int, input().split()))
a1, a2 = list(map(int, input().split()))
b1, b2 = list(map(int, input().split()))

da1 = a1 * t1
da2 = da1 + a2 * t2
db1 = b1 * t1
db2 = db1 + b2 * t2

if da2 == db2:
    ans = 'infinity'
else:
    if (da1 - db1) * (da2 - db2) > 0:
        ans = 0
    else:
        fdif = abs(da1 - db1)
        sdif = abs(da2 - db2)
        iteration = fdif // sdif
        mod = fdif % sdif
        if mod == 0:
            ans = iteration * 2
        else:
            ans = iteration * 2 + 1

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8662
52,python_53,Python,"N, K = map(int, input().split())
ans = """"
while(N >= K):
  ans = ans + str(N % K)
  N = N // K
ans = ans + str(N)
print(len(ans))","```
N, K = map(int, input().split())
ans = """"
while N >= K:
    ans = str(N % K) + ans
    N = N // K
ans = str(N) + ans
print(len(ans))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8215
53,python_54,Python,"s = input()
w = int(input())
ans = [s[i] for i in range(len(s)) if i % w == 0]
print(''.join(ans))","```
s = input()
w = int(input())
ans = [s[i] for i in range(len(s)) if i % w == 0]
print(''.join(ans))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8848
54,python_55,Python,"s=input()
k=int(input())

n=len(s)
ss=s+s
nn=len(ss)
sss=ss+s
nnn=len(sss)

tmps=1
cnts=0
tmpss=1
cntss=0
tmpsss=1
cntsss=0

for i in range(n-1):
    if s[i]==s[i+1]:
        tmps+=1
    else:
        cnts+=(tmps//2)
        tmps=1
cnts+=(tmps//2)

for i in range(nn-1):
    if ss[i]==ss[i+1]:
        tmpss+=1
    else:
        cntss+=(tmpss//2)
        tmpss=1
cntss+=(tmpss//2)

for i in range(nnn-1):
    if sss[i]==sss[i+1]:
        tmpsss+=1
    else:
        cntsss+=(tmpsss//2)
        tmpsss=1
cntsss+=(tmpsss//2)

if n==1:
    if k%2==0:
        print(k//2)
    else:
        print((k-1)//2)

elif (cntsss-cntss)!=(cntss-cnts):
    print((cntsss-cntss)*((k+1)//2)+(cntss-cnts)*(k//2))

else:
    print((cntsss-cntss)*(k-1)+cnts)
","```
s = input()
k = int(input())

n = len(s)
ss = s + s
nn = len(ss)
sss = ss + s
nnn = len(sss)

tmps = 1
cnts = 0
tmpss = 1
cntss = 0
tmpsss = 1
cntsss = 0

for i in range(n - 1):
    if s[i] == s[i + 1]:
        tmps += 1
    else:
        cnts += tmps // 2
        tmps = 1
cnts += tmps // 2

for i in range(nn - 1):
    if ss[i] == ss[i + 1]:
        tmpss += 1
    else:
        cntss += tmpss // 2
        tmpss = 1
cntss += tmpss // 2

for i in range(nnn - 1):
    if sss[i] == sss[i + 1]:
        tmpsss += 1
    else:
        cntsss += tmpsss // 2
        tmpsss = 1
cntsss += tmpsss // 2

if n == 1:
    if k % 2 == 0:
        print(k // 2)
    else:
        print((k - 1) // 2)
elif cntsss - cntss!= cntss - cnts:
    print((cntsss - cntss) * ((k + 1) // 2) + (cntss - cnts) * (k // 2))
else:
    print((cntsss - cntss) * (k - 1) + cnts)",extreme_minor,Meta-Llama-2-7b-chat,0.9799
55,python_56,Python,"N=int(input())
A=[int(input()) for i in range(N)]
from bisect import bisect_left
from collections import deque
l=deque()
for a in A:
    i=bisect_left(l,a)
    if i==0:
        l.appendleft(a)
    else:
        l[i-1]=a
print(len(l))","```
n = int(input())
a = [int(input()) for _ in range(n)]
from bisect import bisect_left
from collections import deque
l = deque()
for a in a:
    i = bisect_left(l, a)
    if i == 0:
        l.appendleft(a)
    else:
        l[i - 1] = a
print(len(l))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8765
56,python_57,Python,"N = str(input())

if N[-1] in ('2', '4', '5', '7', '9'):
    print('hon')
elif N[-1] in ('0', '1', '6', '8'):
    print('pon')
elif N[-1] in ('3'):
    print('bon')","```
n = str(input())

if n[-1] in ('2', '4', '5', '7', '9'):
    print('hon')
elif n[-1] in ('0', '1', '6', '8'):
    print('pon')
elif n[-1] == '3':
    print('bon')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8295
57,python_58,Python,"N, K = map(int, input().split())
Xn = list(map(int, input().split()))

Ln = [0] * N
for i in range(N-1):
    Ln[i+1] = abs(Xn[i+1] - Xn[i]) + Ln[i]

Rn = [0] * N
for i in range(1, N)[::-1]:
    Rn[i-1] = abs(Xn[i] - Xn[i-1]) + Rn[i]

ans = float(""inf"")
for i in range(N-K+1):
    ans = min(ans, abs(Xn[i]) + Ln[i+K-1] - Ln[i])

for i in range(K-1, N)[::-1]:
    ans = min(ans, abs(Xn[i]) + Rn[i-K+1] - Rn[i])

print(ans)
","```
N, K = map(int, input().split())
Xn = list(map(int, input().split()))

Ln = [0] * N
for i in range(N - 1):
    Ln[i + 1] = abs(Xn[i + 1] - Xn[i]) + Ln[i]

Rn = [0] * N
for i in range(1, N)[::-1]:
    Rn[i - 1] = abs(Xn[i] - Xn[i - 1]) + Rn[i]

ans = float('inf')
for i in range(N - K + 1):
    ans = min(ans, abs(Xn[i]) + Ln[i + K - 1] - Ln[i])

for i in range(K - 1, N)[::-1]:
    ans = min(ans, abs(Xn[i]) + Rn[i - K + 1] - Rn[i])

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.918
58,python_59,Python,"import collections

S = input()
Slist = collections.Counter(S)

if Slist.most_common()[0][1] == 2 and Slist.most_common()[1][1] == 2:
    print('Yes')
else:
    print('No')","```
import collections

S = input()
S_list = collections.Counter(S)

if S_list.most_common()[0][1] == 2 and S_list.most_common()[1][1] == 2:
    print('Yes')
else:
    print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8112
59,python_60,Python,"N, K = map(int, input().split())
if K > (N - 1) * (N - 2) // 2:
    print(-1)
else:
    c = 0
    lst = []
    for i in range(2, N+1):
        c+=1
        lst.append([1, i])
    cnt = 0
    f = 0
    for i in range(2, N+1):
        for j in range(i+1, N+1):
            if cnt == (N-1)*(N-2)//2-K:
                f=1
                break
            c+=1
            cnt+=1
            lst.append([i, j])
        if f:
            break
    print(c)
    for l in lst:
        print(*l)","```
N, K = map(int, input().split())
if K > (N - 1) * (N - 2) // 2:
    print(-1)
else:
    c = 0
    lst = []
    for i in range(2, N + 1):
        c += 1
        lst.append([1, i])
    cnt = 0
    for i in range(2, N + 1):
        for j in range(i + 1, N + 1):
            if cnt == (N - 1) * (N - 2) // 2 - K:
                break
            c += 1
            cnt += 1
            lst.append([i, j])
    print(c)
    for pair in lst:
        print(*pair)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9065
60,python_61,Python,"import sys
def input():
    return sys.stdin.readline()[:-1]
A,B,M=map(int,input().split())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
m=min(a)+min(b)
for i in range(M):
    x,y,c=map(int,input().split())
    t=a[x-1]+b[y-1]-c
    if m>t:
        m=t
print(m)","```
import sys

def input():
    return sys.stdin.readline().strip()

A, B, M = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
m = min(a) + min(b)
for i in range(M):
    x, y, c = map(int, input().split())
    t = a[x-1] + b[y-1] - c
    if m > t:
        m = t
print(m)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8207
61,python_62,Python,"import math

n, k = map(int, input().split())

dic = {} #ここに結果を保存していく。
ans = 0
moddo = 10**9+7

for i in range(k):
    t = k - i #これで大きいほうから順にとる。
    if t > k/2: #tがk/2より大きいときはすべてtじゃないと最大公約数はtにならない。
        dic[t] = 1
        ans += t
    else:
        temp = pow(k//t,n,moddo)
        #print(temp)
        fac = 2
        while fac*t <= k:
            temp -= dic[fac*t]
            fac += 1
        dic[t] = temp%moddo
        ans = (ans+((temp*t)%moddo))%moddo

print(ans)","```
import math

n, k = map(int, input().split())

dic = {}  # ここに結果を保存していく。
ans = 0
moddo = 10**9 + 7

for i in range(k):
    t = k - i  # これで大きいほうから順にとる。
    if t > k / 2:  # tがk/2より大きいときはすべてtじゃないと最大公約数はtにならない。
        dic[t] = 1
        ans += t
    else:
        temp = pow(k // t, n, moddo)
        fac = 2
        while fac * t <= k:
            temp -= dic.get(fac * t, 0)
            fac += 1
        dic[t] = temp % moddo
        ans = (ans + (temp * t % moddo)) % moddo

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9246
62,python_63,Python,"# #!/usr/bin/env python3
# # -*- coding: utf-8 -*-
# # 問題：https://atcoder.jp/contests/abc126/tasks/abc126_f
# # 解説動画を見ながら実装

import sys

m, k = map(int, input().strip().split())
max_num = 2**m
if k >= max_num:
    print(-1)
    sys.exit()

# if m == 0:
#     print(0)
#     sys.exit()

if m == 1:
    if k == 0:
        print('0 0 1 1')
    else:
        print('-1')
    sys.exit()

res = []
for i in range(max_num):
    if i == k:
        continue
    res.append(i)
res.append(k)
for i in range(max_num):
    j = max_num - i - 1
    if j == k:
        continue
    res.append(j)
res.append(k)
for i in range(2**(m+1)):
    print(res[i], end=' ')
","```
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# 問題：https://atcoder.jp/contests/abc126/tasks/abc126_f
# 解説動画を見ながら実装

import sys

m, k = map(int, input().strip().split())
max_num = 2 ** m
if k >= max_num:
    print(-1)
    sys.exit()

if m == 1:
    if k == 0:
        print('0 0 1 1')
    else:
        print('-1')
    sys.exit()

res = []
for i in range(max_num):
    if i == k:
        continue
    res.append(i)
res.append(k)
for i in range(max_num):
    j = max_num - i - 1
    if j == k:
        continue
    res.append(j)
res.append(k)

for i in range(2 ** (m + 1)):
    print(res[i], end=' ')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8974
63,python_64,Python,"import sys, re
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd
from itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heappush, heappop
from functools import reduce
def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
def ZIP(n): return zip(*(MAP() for _ in range(n)))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7 
#mod = 998244353
from decimal import *
#import numpy as np
#decimal.getcontext().prec = 10


		
#階乗#
lim = 10**5   #必要そうな階乗の限界を入力
fact = [1] * (lim+1)
for n in range(1, lim+1):
	fact[n] = n * fact[n-1] % mod

#階乗の逆元#
fact_inv = [1]*(lim+1)
fact_inv[lim] = pow(fact[lim], mod-2, mod)
for n in range(lim, 0, -1):
	fact_inv[n-1] = n*fact_inv[n]%mod

def C(n, r):
	if n < r:
		return 0
	else:
		return (fact[n]*fact_inv[r]%mod)*fact_inv[n-r]%mod

N, K = MAP()
A = LIST()
A.sort()

max_sum = 0
for i in range(K-1, N):
	max_sum = (max_sum + A[i]*C(i, K-1)%mod)%mod

A = A[::-1]
min_sum = 0
for i in range(K-1, N):
	min_sum = (min_sum + A[i]*C(i, K-1)%mod)%mod

print((max_sum - min_sum)%mod)","```
import sys
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd
from itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heappush, heappop
from functools import reduce
def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
def ZIP(n): return zip(*(MAP() for _ in range(n)))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7 
lim = 10**5
fact = [1] * (lim+1)
for n in range(1, lim+1):
    fact[n] = n * fact[n-1] % mod
fact_inv = [1]*(lim+1)
fact_inv[lim] = pow(fact[lim], mod-2, mod)
for n in range(lim, 0, -1):
    fact_inv[n-1] = n*fact_inv[n]%mod

def C(n, r):
    if n < r:
        return 0
    else:
        return (fact[n]*fact_inv[r]%mod)*fact_inv[n-r]%mod

N, K = MAP()
A = sorted(LIST())

max_sum = 0
for i in range(K-1, N):
    max_sum = (max_sum + A[i]*C(i, K-1)%mod)%mod

A = A[::-1]
min_sum = 0
for i in range(K-1, N):
    min_sum = (min_sum + A[i]*C(i, K-1)%mod)%mod

print((max_sum - min_sum)%mod)",extreme_minor,Meta-Llama-2-7b-chat,0.9591
64,python_65,Python,"NM= list(map(int,input().split()))

if 1 in NM:
    if (max(NM)-2) >= 0:
        print(max(NM)-2)
    else:
        print(1)
elif 2 in NM:
    print(0)
else:
    print(NM[0]*NM[1]-(2*NM[0]+2*NM[1]-4))","```
nm = list(map(int, input().split()))

if 1 in nm:
    if max(nm) - 2 >= 0:
        print(max(nm) - 2)
    else:
        print(1)
elif 2 in nm:
    print(0)
else:
    print(nm[0] * nm[1] - (2 * nm[0] + 2 * nm[1] - 4))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8049
65,python_66,Python,"# -*- coding: utf-8 -*-

a,b = map(int, input().split())

n = b-a
B = 0
for i in range(1,n+1):
    B = B + i
print(B-b)","```
# -*- coding: utf-8 -*-

a, b = map(int, input().split())

n = b - a
b = 0
for i in range(1, n + 1):
    b += i
print(b)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8479
66,python_67,Python,"import collections
N=int(input())
l = []
for _ in range(N):
    l.append(input())
c = collections.Counter(l)
print(len(c))","```
import collections

N = int(input())
l = []
for _ in range(N):
    l.append(input())
c = collections.Counter(l)
print(len(c))
```",extreme_minor,Meta-Llama-2-7b-chat,0.7795
67,python_68,Python,"import sys
sys.setrecursionlimit(10000000)
H, W = map(int, input().split())
S = [input() for _ in range(H)]
seen = [[0]*W for _ in range(H)]


def rec(h,w,seen):
	if S[h][w] == '.':
		res = [1, 0]
	else:
		res = [0, 1]
	dh = [-1, 1, 0, 0]
	dw = [0, 0, -1, 1] 
	seen[h][w] = 1
	for i in range(4):
		nh = h+dh[i]
		nw = w+dw[i]
		if 0 <= nh <= H-1 and 0 <= nw <= W-1:
			if seen[nh][nw] == 0 and S[nh][nw] != S[h][w]:
				r0, r1 = rec(nh, nw, seen)
				res[0] += r0
				res[1] += r1
					
	return res

ans = 0
for h in range(H):
	for w in range(W):
		if seen[h][w] != 1:
			t0, t1 = rec(h, w, seen)
			ans += t0 * t1
print(ans)
","```
import sys
sys.setrecursionlimit(10000000)
H, W = map(int, input().split())
S = [input() for _ in range(H)]
seen = [[0]*W for _ in range(H)]

def rec(h, w, seen):
    if S[h][w] == '.':
        return [1, 0]
    else:
        return [0, 1]

    dh = [-1, 1, 0, 0]
    dw = [0, 0, -1, 1]
    seen[h][w] = 1
    res = [0, 0]
    for i in range(4):
        nh = h + dh[i]
        nw = w + dw[i]
        if 0 <= nh <= H - 1 and 0 <= nw <= W - 1:
            if seen[nh][nw] == 0 and S[nh][nw]!= S[h][w]:
                r0, r1 = rec(nh, nw, seen)
                res[0] += r0
                res[1] += r1
    return res

ans = 0
for h in range(H):
    for w in range(W):
        if seen[h][w] == 0:
            t0, t1 = rec(h, w, seen)
            ans += t0 * t1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7737
68,python_69,Python,"import copy

N, Ma, Mb = [int(n) for n in input().split()]
pd = {(0,0):0}
for i in range(N):
    a, b, c = [int(n) for n in input().split()]
    pdcopy = copy.deepcopy(pd)
    for k, v in pdcopy.items():
        nk = (k[0]+a, k[1]+b)
        if nk in pd:
            if pd[nk] > v + c :
                pd[nk] = v + c
        else:
            pd[nk] = v + c

mp = 1000000
for i in range(1,401):
    if (Ma*i, Mb*i) in pd:
        mp = min(pd[(Ma*i, Mb*i)], mp)

if mp == 1000000:
    print(-1)
else:
    print(mp)
","```
import copy

N, Ma, Mb = [int(n) for n in input().split()]
pd = {(0,0):0}
for i in range(N):
    a, b, c = [int(n) for n in input().split()]
    pdcopy = copy.deepcopy(pd)
    for k, v in pdcopy.items():
        nk = (k[0] + a, k[1] + b)
        if nk in pd:
            if pd[nk] > v + c:
                pd[nk] = v + c
        else:
            pd[nk] = v + c

mp = 1000000
for i in range(1, 401):
    if (Ma * i, Mb * i) in pd:
        mp = min(pd[(Ma * i, Mb * i)], mp)

if mp == 1000000:
    print(-1)
else:
    print(mp)
```",extreme_minor,Meta-Llama-2-7b-chat,0.904
69,python_70,Python,"S = input()
K = int(input())

cnt_one = 0
for i in S:
    if i == '1':
        cnt_one += 1
    else:
        break

if cnt_one >= K:
    print(1)
else:
    print(S[cnt_one+1-1])","```
S = input()
K = int(input())

cnt_one = 0
for i in S:
    if i == '1':
        cnt_one += 1
    else:
        break

if cnt_one >= K:
    print(1)
else:
    print(S[cnt_one])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8457
70,python_71,Python,"
N = int(input())
B= [0] * N

for i in range(0, N):
	bb = int(input())
	B[bb-1] = i

m = 1
mx = 1
for i in range(1, N):
	if B[i] > B[i-1]:
		m = m + 1
		mx = max(mx, m)
	else:
		m = 1

print(N - mx)
","```
N = int(input())
B = [0] * N

for i in range(N):
    bb = int(input())
    B[bb - 1] = i

m = 1
mx = 1
for i in range(1, N):
    if B[i] > B[i - 1]:
        m += 1
        mx = max(mx, m)
    else:
        m = 1

print(N - mx)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8562
71,python_72,Python,"def main():
    S = input()
    print(S.count('+') - S.count('-'))
    
if __name__ == '__main__':
    main()","```
def main():
    S = input()
    print(S.count('+') - S.count('-'))

if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.845
72,python_73,Python,"N,M = map(int,input().split())
L = [list(map(int,input().split())) for i in range(M)]
L.sort()
ans = 1
l = L[0][0]
r = L[0][1]
for a,b in L:
    if r <= a or l >= b:
        ans += 1
        l = a
        r = b
    else:
        l = a
        r = min(r,b)
print(ans)
","```
N, M = map(int, input().split())
L = [list(map(int, input().split())) for _ in range(M)]
L.sort()
ans = 1
l, r = L[0][0], L[0][1]
for a, b in L:
    if r <= a or l >= b:
        ans += 1
        l, r = a, b
    else:
        l, r = a, min(r, b)
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.896
73,python_74,Python,"n, m = map(int, input().split())
x = list(map(int, input().split()))
y = list(map(int, input().split()))
mod = int(1e9) + 7
S = 0
for i in range(n):
  S += (2*i+1-n)*x[i]
  S %= mod
T = 0
for j in range(m):
  T += (2*j+1-m)*y[j]
  T %= mod
print(S*T%mod)","```
n, m = map(int, input().split())
x = list(map(int, input().split()))
y = list(map(int, input().split()))
mod = int(1e9) + 7
s = 0
for i in range(n):
    s += (2*i+1-n)*x[i]
    s %= mod
t = 0
for j in range(m):
    t += (2*j+1-m)*y[j]
    t %= mod
print((s*t)%mod)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8172
74,python_75,Python,"# coding: utf-8
# Your code here!
K=int(input())


alpha=K//50
beta=K%50
#print(alpha,beta)

N=50
A=[49+alpha-beta]*N
for i in range(beta):
    A[i]+=51

print(N)
print(*A)

""""""
count=0
for i in range(50):
    if A[i]<50:
        continue
    count+=1
    for j in range(50):
        if i==j:
            A[j]-=N
        else:
            A[j]+=1

print(A)
print(count)
""""""","```
# coding: utf-8

K = int(input())

alpha = K // 50
beta = K % 50

N = 50
A = [49 + alpha - beta] * N
for i in range(beta):
    A[i] += 51

print(N)
print(*A)

count = 0
for i in range(50):
    if A[i] < 50:
        continue
    count += 1
    for j in range(50):
        if i == j:
            A[j] -= N
        else:
            A[j] += 1

print(A)
print(count)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7249
75,python_76,Python,"import math
n=int(input())

x=n**0.5

if x-x//1!=0:
    x=int(x//1)
else:
    x=int(x//1)-1
y=0

for i in range(1,x+1):
    if (n-i)/i-(n-i)//i==0:
        if int((n-i)//i)!=i:
            y+=int((n-i)//i)

print(y)
        

     

    

     

    
","```
import math
n = int(input())

x = n ** 0.5

if x - x // 1!= 0:
    x = int(x // 1)
else:
    x = int(x // 1) - 1

y = 0

for i in range(1, x + 1):
    if (n - i) / i - (n - i) // i == 0:
        if int((n - i) // i)!= i:
            y += int((n - i) // i)

print(y)",extreme_minor,Meta-Llama-2-7b-chat,0.9431
76,python_77,Python,"from collections import Counter

N = int(input())
a = list(map(int, input().split()))

num_removal = 0
for digit, count in Counter(a).items():
    if digit > count:
        num_removal += count
    else:
        num_removal += (count - digit)
print(num_removal)
","```
from collections import Counter

N = int(input())
a = list(map(int, input().split()))

num_removal = 0
for digit, count in Counter(a).items():
    if digit > count:
        num_removal += count
    else:
        num_removal += count - digit
print(num_removal)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7971
77,python_78,Python,"D,N = map(int,input().split())

if N < 100:
    X = (100 ** D) * N
else:
    X = (100 ** D) * (N+1)

print(X)
","```
D, N = map(int, input().split())

if N < 100:
    X = (100 ** D) * N
else:
    X = (100 ** D) * (N + 1)

print(X)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8754
78,python_79,Python,"N,A,B = map(int,input().split())
S = input()

cnt = A + B

for i in range(N):
    if cnt == 0:
        print('No')
    elif cnt > 0 and B == 0 and S[i] == 'b':
        print('No')
    elif S[i] == 'a':
        print('Yes')
        cnt -= 1
    elif S[i] == 'b':
        print('Yes')
        cnt -= 1
        B -= 1
    else:
        print('No')","```
N, A, B = map(int, input().split())
S = input()

cnt = A + B

for i in range(N):
    if cnt == 0:
        print('No')
    elif cnt > 0 and B == 0 and S[i] == 'b':
        print('No')
    elif S[i] == 'a':
        print('Yes')
        cnt -= 1
    elif S[i] == 'b':
        print('Yes')
        cnt -= 1
        B -= 1
    else:
        print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.873
79,python_80,Python,"from collections import Counter,defaultdict,deque
from bisect import bisect_left
import sys,math,itertools,pprint,fractions,time
sys.setrecursionlimit(10**8)
mod = 10**9+7
INF = float('inf')
def inp(): return int(sys.stdin.readline())
def inpl(): return list(map(int, sys.stdin.readline().split()))

st = time.time()
n = inp()
a = []
for i in range(n):
    b = inpl()
    a.append(deque(b))
zan = n*(n-1)//2
res = 0
while True:
    res += 1
    now = zan
    s = set()
    for i in range(n):
        if i in s or a[i] == deque([]): continue
        end = True
        chk = a[i][0] - 1
        if not chk in s and a[chk][0] == i+1:
            zan -= 1
            if not zan: 
                print(res); quit()
            a[i].popleft(); a[chk].popleft()
            s.add(i); s.add(chk)
        # print(res,i,chk,a)
        nnn = time.time()
    if now == zan:
        print(-1)
        quit()
    if nnn - st > 1.7:
        print(n*(n-1)//2)
        quit()

            
","```
from collections import Counter, defaultdict, deque
from bisect import bisect_left
import sys, math, itertools, pprint, fractions, time
sys.setrecursionlimit(10**8)
mod = 10**9 + 7
INF = float('inf')

def inp(): return int(sys.stdin.readline())
def inpl(): return list(map(int, sys.stdin.readline().split()))

st = time.time()
n = inp()
a = []
for i in range(n):
    b = inpl()
    a.append(deque(b))

zan = n * (n - 1) // 2
res = 0
while True:
    res += 1
    now = zan
    s = set()
    for i in range(n):
        if i in s or not a[i]: continue
        end = True
        chk = a[i][0] - 1
        if chk not in s and a[chk][0] == i + 1:
            zan -= 1
            if not zan:
                print(res)
                quit()
            a[i].popleft()
            a[chk].popleft()
            s.add(i)
            s.add(chk)
        # print(res, i, chk, a)
    if now == zan:
        print(-1)
        quit()
    if time.time() - st > 1.7:
        print(zan)
        quit()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8754
80,python_81,Python,"n = int(input())
a = list(map(int, input().split()))

print(sum(a)-n)","```
n = int(input())
a = list(map(int, input().split()))

print(sum(a) - n)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7793
81,python_82,Python,"from collections import Counter
N,A,B = map(int, input().split())
v = list(map(int, input().split()))
v.sort(reverse=True)

c = Counter(v)
ans_num = sum(v[:A]) / A
ans_cnt = 0

from operator import mul
from functools import reduce

def cmb(n,r):
    r = min(n-r,r)
    if r == 0: return 1
    over = reduce(mul, range(n, n - r, -1))
    under = reduce(mul, range(1,r + 1))
    return over // under

num = v[A-1]
num_all = c[num]
cc = Counter(v[:A])
tmp = cc[num]

for i in range(A-1, B):
    last = v[i]
    if i != A-1:
        if last != v[0]:
            break
    ans_cnt += cmb(num_all, (i+1)-(A-tmp))


print(ans_num)
print(ans_cnt)
","```
from collections import Counter
N, A, B = map(int, input().split())
v = sorted(map(int, input().split()), reverse=True)

c = Counter(v)
ans_num = sum(v[:A]) / A
ans_cnt = 0

from operator import mul
from functools import reduce

def cmb(n, r):
    r = min(n - r, r)
    if r == 0:
        return 1
    over = reduce(mul, range(n, n - r, -1), 1)
    under = reduce(mul, range(1, r + 1), 1)
    return over // under

num = v[A - 1]
num_all = c[num]
cc = Counter(v[:A])
tmp = cc[num]

for i in range(A - 1, B):
    last = v[i]
    if i!= A - 1:
        if last!= v[0]:
            break
    ans_cnt += cmb(num_all, i + 1 - (A - tmp))

print(ans_num)
print(ans_cnt)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8657
82,python_83,Python,"import collections
A = input()
cnt = collections.defaultdict(int)
ans = 1
for i, a in enumerate(A):
    ans += i - cnt[a]
    cnt[a] += 1
print(ans)
","```
import collections

A = input()
cnt = collections.defaultdict(int)
ans = 1
for i, a in enumerate(A):
    ans += i - cnt[a]
    cnt[a] += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8396
83,python_84,Python,"s = input()
#print(s[-7:])
if s[0:7] == ""keyence"":
  print(""YES"")
elif s[-7:] == ""keyence"":
  print(""YES"")
elif s[0:1]==""k"" and s[-6:] == ""eyence"":
  print(""YES"")
elif s[0:2] ==""ke"" and s[-5:] == ""yence"":
  print(""YES"")
elif s[0:3] == ""key"" and s[-4:] == ""ence"":
  print(""YES"")
elif s[0:4] == ""keye"" and s[-3:] == ""nce"":
  print(""YES"")
elif s[0:5] == ""keyen"" and s[-2:] ==""ce"":
  print(""YES"")
elif s[0:6] == ""keyenc"" and s[-1:] == ""e"":
  print(""YES"")
else:
  print(""NO"")","```
s = input()
#print(s[-7:])
if s[:7] == ""keyence"":
  print(""YES"")
elif s[-7:] == ""keyence"":
  print(""YES"")
elif s[0] == ""k"" and s[-6:] == ""eyence"":
  print(""YES"")
elif s[:2] == ""ke"" and s[-5:] == ""yence"":
  print(""YES"")
elif s[:3] == ""key"" and s[-4:] == ""ence"":
  print(""YES"")
elif s[:4] == ""keye"" and s[-3:] == ""nce"":
  print(""YES"")
elif s[:5] == ""keyen"" and s[-2:] == ""ce"":
  print(""YES"")
elif s[:6] == ""keyenc"" and s[-1:] == ""e"":
  print(""YES"")
else:
  print(""NO"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.9187
84,python_85,Python,"s =input()
t = input()

minmin = len(t)
for i in range( 0, ( len(s) - len(t)) +1 ):
    tigamoji = 0
    for j in range( len(t)  ):
        if s[j+i] != t[j]:
            tigamoji += 1
    if tigamoji < minmin:
        minmin = tigamoji
print(minmin)","```
s = input()
t = input()

min_min = len(t)
for i in range(len(s) - len(t) + 1):
    tigamoji = 0
    for j in range(len(t)):
        if s[j + i]!= t[j]:
            tigamoji += 1
    if tigamoji < min_min:
        min_min = tigamoji
print(min_min)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7993
85,python_86,Python,"S = input()
A = S[0:len(S)//2]
B = S[len(A):len(S)]
B = B[::-1]
count = 0
for i,j in zip(A,B):
    if i != j:
        count+=1
print(count)","```
S = input()
A = S[:len(S)//2]
B = S[len(S)//2:][::-1]
count = 0
for i, j in zip(A, B):
    if i!= j:
        count += 1
print(count)
```",extreme_minor,Meta-Llama-2-7b-chat,0.811
86,python_87,Python,"class UnionFind():
  def __init__(self,n):
    self.n=n
    self.root=[-1]*(n+1)
    self.rank=[0]*(n+1)
  def FindRoot(self,x):
    if self.root[x]<0:
      return x
    else:
      self.root[x]=self.FindRoot(self.root[x])
      return self.root[x]
  def Unite(self,x,y):
    x=self.FindRoot(x)
    y=self.FindRoot(y)
    if x==y:
      return
    else:
      if self.rank[x]>self.rank[y]:
        self.root[x]+=self.root[y]
        self.root[y]=x
      elif self.rank[x]<=self.rank[y]:
        self.root[y]+=self.root[x]
        self.root[x]=y
        if self.rank[x]==self.rank[y]:
          self.rank[y]+=1
  def isSameGroup(self,x,y):
    return self.FindRoot(x)==self.FindRoot(y)
  def Count(self,x):
    return -self.root[self.FindRoot(x)]

n,m=map(int,input().split())
arr=list(map(int,input().split()))
t=UnionFind(n+1)
for _ in range(m):
  a,b=map(int,input().split())
  t.Unite(a,b)
ans=0
for i in range(n):
  if arr[i]==(i+1):
    ans+=1
  else:
    if t.isSameGroup((i+1),arr[i]):
      ans+=1
print(ans)","```
class UnionFind:
  def __init__(self, n):
    self.n = n
    self.root = [-1] * (n + 1)
    self.rank = [0] * (n + 1)

  def find_root(self, x):
    if self.root[x] < 0:
      return x
    else:
      self.root[x] = self.find_root(self.root[x])
      return self.root[x]

  def unite(self, x, y):
    x = self.find_root(x)
    y = self.find_root(y)
    if x == y:
      return
    else:
      if self.rank[x] > self.rank[y]:
        self.root[x] += self.root[y]
        self.root[y] = x
      elif self.rank[x] <= self.rank[y]:
        self.root[y] += self.root[x]
        self.root[x] = y
        if self.rank[x] == self.rank[y]:
          self.rank[y] += 1

  def is_same_group(self, x, y):
    return self.find_root(x) == self.find_root(y)

  def count(self, x):
    return -self.root[self.find_root(x)]

n, m = map(int, input().split())
arr = list(map(int, input().split()))
t = UnionFind(n + 1)
for _ in range(m):
  a, b = map(int, input().split())
  t.unite(a, b)
ans = 0
for i in range(n):
  if arr[i] == (i + 1):
    ans += 1
  else:
    if t.is_same_group((i + 1), arr[i]):
      ans += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8881
87,python_88,Python,"import collections
N =int(input())
A = [int(input()) for _ in range(N)]
A_col = collections.Counter(A)
ans = 0
#valueが奇数なら追加
for v in A_col.values():
    if v % 2 == 1:
      ans += 1
print(ans)      ","```
import collections

N = int(input())
A = [int(input()) for _ in range(N)]
A_col = collections.Counter(A)
ans = 0

for v in A_col.values():
    if v % 2 == 1:
        ans += 1

print(ans)",extreme_minor,Meta-Llama-2-7b-chat,0.928
88,python_89,Python,"x = int(input())
if x == 7 or x == 5 or x == 3:
    print('YES')
else:
    print('NO')","```
x = int(input())
if x in (3, 5, 7):
    print('YES')
else:
    print('NO')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8694
89,python_90,Python,"def max2(x,y):
    return x if x > y else y

def divisors(n):
    i = 1
    table = set()
    while i * i <= n:
        if not n % i:
            table.add(i)
            table.add(n//i)
        i += 1
    table = list(table)
    return table

import sys
input = sys.stdin.readline

N, K = map(int, input().split())
A = list(map(int, input().split()))
S = sum(A)
D = divisors(S)
D.sort()
res = 0
for k in D:
    B = []
    for a in A:
        B.append(a%k)
    B.sort()
    cnt = sum(B)//k
    if k*cnt - sum(B[-cnt:]) <= K:
        res = max2(res, k)

print(res)","```
def max2(x, y):
    return x if x > y else y

def divisors(n):
    i = 1
    table = set()
    while i * i <= n:
        if n % i == 0:
            table.add(i)
            table.add(n // i)
        i += 1
    table = list(table)
    return table

import sys
input = sys.stdin.readline

N, K = map(int, input().split())
A = list(map(int, input().split()))
S = sum(A)
D = divisors(S)
D.sort()
res = 0
for k in D:
    B = [a % k for a in A]
    B.sort()
    cnt = sum(B) // k
    if k * cnt - sum(B[-cnt:]) <= K:
        res = max2(res, k)

print(res)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9249
90,python_91,Python,"N = int(input())

for x in range(N+10):
    if (x*(x+1))//2 >= N:
        break

ans = list(range(1, x+1))
rem = (x*(x+1))//2 - N
for a in ans:
    if a != rem:
        print(a)","```
N = int(input())

for x in range(N + 10):
    if (x * (x + 1)) // 2 >= N:
        break

ans = list(range(1, x + 1))
rem = (x * (x + 1)) // 2 - N
for a in ans:
    if a!= rem:
        print(a)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8622
91,python_92,Python,"h,w,k = map(int,input().split())
dp = [[0]*w for i in range(h+1)]
mod = 1000000007
dp[0][k-1] = 1
a = [1,1,2,3,5,8,13,21]
for i in range(h):
  for j in range(w):
    if j != 0:
      if j == w-1 or j == 1:
        dp[i+1][j] += dp[i][j-1]*(a[w-2])%mod
      else:
        dp[i+1][j] += dp[i][j-1]*(a[j-1]*a[w-1-j])%mod
    if j != w-1:
      if j == 0 or j == w-2:
        dp[i+1][j] += dp[i][j+1]*(a[w-2])%mod
      else:
        dp[i+1][j] += dp[i][j+1]*(a[j]*a[w-2-j])%mod
    if j == 0 or j == w-1:
      dp[i+1][j] += dp[i][j]*(a[w-1])%mod
    else:
      dp[i+1][j] += dp[i][j]*(a[j]*a[w-1-j])%mod
print(dp[h][0]%mod)","```
h, w, k = map(int, input().split())
dp = [[0] * w for _ in range(h + 1)]
mod = 1000000007
dp[0][k - 1] = 1
a = [1, 1, 2, 3, 5, 8, 13, 21]
for i in range(h):
    for j in range(w):
        if j!= 0:
            if j == w - 1 or j == 1:
                dp[i + 1][j] += dp[i][j - 1] * a[w - 2] % mod
            else:
                dp[i + 1][j] += dp[i][j - 1] * (a[j - 1] * a[w - 1 - j]) % mod
        if j!= w - 1:
            if j == 0 or j == w - 2:
                dp[i + 1][j] += dp[i][j + 1] * a[w - 2] % mod
            else:
                dp[i + 1][j] += dp[i][j + 1] * (a[j] * a[w - 2 - j]) % mod
        if j == 0 or j == w - 1:
            dp[i + 1][j] += dp[i][j] * a[w - 1] % mod
        else:
            dp[i + 1][j] += dp[i][j] * (a[j] * a[w - 1 - j]) % mod
print(dp[h][0] % mod)",extreme_minor,Meta-Llama-2-7b-chat,0.9876
92,python_93,Python,"from collections import deque

N = int(input())
Monsters = deque(map(int, input().split()))
Fighters = deque(map(int, input().split()))

Knockouts = 0
prev_ftr = 0

while len(Monsters) > 0:
  mon = Monsters.popleft()
  ko1 = min(mon, prev_ftr)
  #print(mon, prev_ftr, ko1)
  Knockouts += ko1
  mon -= ko1

  if len(Fighters) > 0:
    ftr = Fighters.popleft()
    ko2 = min(mon, ftr)
    #print(mon, ftr, ko2)
    Knockouts += ko2
    mon -= ko2
    prev_ftr = ftr - ko2

print(Knockouts)","```
from collections import deque

N = int(input())
Monsters = deque(map(int, input().split()))
Fighters = deque(map(int, input().split()))

Knockouts = 0
prev_ftr = 0

while Monsters:
    mon = Monsters.popleft()
    ko1 = min(mon, prev_ftr)
    Knockouts += ko1
    mon -= ko1

    if Fighters:
        ftr = Fighters.popleft()
        ko2 = min(mon, ftr)
        Knockouts += ko2
        mon -= ko2
        prev_ftr = ftr - ko2

print(Knockouts)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8476
93,python_94,Python,"N, S = map(int, input().split())
A = [int(i) for i in input().split()]

mod = 998244353

dp = [0] * (S + 1)
dp[0] = 1
for a in A :
  for i in range(S, -1, -1) :
    if i >= a :
      dp[i] = dp[i] * 2 + dp[i - a]
    else :
      dp[i] = dp[i] * 2
    dp[i] %= mod
print(dp[-1])","```
N, S = map(int, input().split())
A = [int(i) for i in input().split()]

mod = 998244353

dp = [0] * (S + 1)
dp[0] = 1

for a in A:
    for i in range(S, a - 1, -1):
        dp[i] = (dp[i] * 2 + dp[i - a]) % mod
print(dp[-1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.7974
94,python_95,Python,"import re


s = str(input())

pattern = r""A.*Z""

X = re.search(pattern, s)

print(len(X.group()))
","```
import re

s = str(input())

pattern = r""A.*Z""
X = re.search(pattern, s)

if X:
    print(len(X.group()))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8491
95,python_96,Python,"M = int(input())

print(24+(24-M))
","```
M = int(input())

print(24 + (24 - M))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8107
96,python_97,Python,"N = int(input())
*A, = map(int, input().split())
max_A, min_A = max(A), min(A)
max_idx, min_idx = A.index(max_A), A.index(min_A)
mode = None
if min_A >= 0: mode = 2
elif max_A <= 0: mode = 3
elif max_A >= abs(min_A): mode = 0
else: mode = 1
actions = []
if mode == 0:
    for i in range(N):
        if i != max_idx:
            A[i] += A[max_idx]; actions.append((max_idx+1, i+1))
    mode += 2
elif mode == 1:
    for i in range(N):
        if i != min_idx:
            A[i] += A[min_idx]; actions.append((min_idx+1, i+1))
    mode += 2
if mode == 2:
    for i in range(N-1):
        A[i+1] += A[i]; actions.append((i+1, i+2))
elif mode == 3:
    for i in range(N-1, 0, -1):
        A[i-1] += A[i]; actions.append((i+1, i))
print(len(actions))
for a in actions: print(*a)","```
N = int(input())
A = list(map(int, input().split()))
max_A, min_A = max(A), min(A)
max_idx, min_idx = A.index(max_A), A.index(min_A)
mode = None
if min_A >= 0: mode = 2
elif max_A <= 0: mode = 3
elif max_A >= abs(min_A): mode = 0
else: mode = 1
actions = []
if mode == 0:
    for i in range(N):
        if i!= max_idx:
            A[i] += A[max_idx]
            actions.append((max_idx + 1, i + 1))
    mode += 2
elif mode == 1:
    for i in range(N):
        if i!= min_idx:
            A[i] += A[min_idx]
            actions.append((min_idx + 1, i + 1))
    mode += 2
if mode == 2:
    for i in range(N - 1):
        A[i + 1] += A[i]
        actions.append((i + 1, i + 2))
elif mode == 3:
    for i in range(N - 1, 0, -1):
        A[i - 1] += A[i]
        actions.append((i + 1, i))
print(len(actions))
for a in actions:
    print(*a)",extreme_minor,Meta-Llama-2-7b-chat,0.9784
97,python_98,Python,"n = int(input())
a_n = list(map(int,input().split("" "")))
k = 0
t = 0
while True:
  for i in range(len(a_n)):
    if a_n[i] % 2 == 0:
      a_n[i] = a_n[i] / 2
    else:
      t = -1
      break
  if t == -1:
    break
  k += 1
print(k)","```
n = int(input())
a_n = list(map(int, input().split()))
k = 0
t = 0
while True:
    for i in range(len(a_n)):
        if a_n[i] % 2 == 0:
            a_n[i] /= 2
        else:
            t = -1
            break
    if t == -1:
        break
    k += 1
print(k)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8658
98,python_99,Python,"n = input().split()

if '1' in n and '7' in n and '9' in n and '4' in n :
    print('YES')
else:
    print('NO')","```
n = input().split()

if '1' in n and '7' in n and '9' in n and '4' in n:
    print('YES')
else:
    print('NO')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8862
99,python_100,Python,"n = int(input())
lst = [input().split() for i in range(n)]
# print(lst)

# float型に変換
for i in range(0, len(lst)):
    lst[i][0] = float(lst[i][0])

ans_sum = 0
for i in range(0, len(lst)):
    if lst[i][1] == 'JPY':
        ans_sum += lst[i][0]
    else:
        ans_sum += lst[i][0]*380000

print(ans_sum)","```
n = int(input())
lst = [input().split() for _ in range(n)]

for i in range(len(lst)):
    lst[i][0] = float(lst[i][0])

ans_sum = 0
for i in range(len(lst)):
    if lst[i][1] == 'JPY':
        ans_sum += lst[i][0]
    else:
        ans_sum += lst[i][0] * 380000

print(ans_sum)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8553
100,python_101,Python,"# ABC056C - Go Home (ARC070C)
x = int(input())
for i in range(1, x + 1):
    if i * (i + 1) * 0.5 >= x:
        print(i)
        break","```
x = int(input())
for i in range(1, x + 1):
    if i * (i + 1) / 2 >= x:
        print(i)
        break
```",extreme_minor,Meta-Llama-2-7b-chat,0.8831
101,python_102,Python,"x,a,b = list(map(int, input().split()))
if abs(x-a) > abs(x-b):
    print(""B"")
else:
    print(""A"")","```
x, a, b = list(map(int, input().split()))
if abs(x - a) > abs(x - b):
    print(""B"")
else:
    print(""A"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8276
102,python_103,Python,"n = int(input())
d = list(map(int, input().split()))

cnt = 0
for i in range(len(d)):
    #print(d[i],d[i+1:])
    cnt += d[i] * (sum(d[i+1:]))
print(cnt)","```
n = int(input())
d = list(map(int, input().split()))

cnt = 0
for i in range(len(d)):
    cnt += d[i] * sum(d[i+1:])
print(cnt)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8272
103,python_104,Python,"t=""abcdefghijklmnopqrstuvwxyz""
h,w=map(int,input().split())
a=[list(input())for _ in range(h)]
b=[0]*26
for i in a:
  for j in i:b[t.index(j)]+=1
x,y,z=(h//2)*(w//2),(h%2)*(w//2)+(h//2)*(w%2),(h%2)*(w%2)
for i in b:
  j=i
  while x and j>3:
    x-=1
    j-=4
  while y and j>1:
    y-=1
    j-=2
  z-=j
if not(x==y==z==0):print(""No"")
else:print(""Yes"")
""""""#一例出力、問題誤読して実装した
c=[w*[0]for _ in range(h)]
fi=ti=0
for i in range(27):
  while b[i]:
    if b[i]>=4:
      j,k=fi//(w//2),fi%(w//2)
      c[j][k]=c[j][w-k-1]=c[h-j-1][k]=c[h-j-1][w-k-1]=t[i]
      fi+=1
      b[i]-=4
    if b[i]==2:
      if ti<h//2 and w%2:c[ti][w//2]=c[h-ti-1][w//2]=t[i]
      else:c[h//2][ti]=c[h//2][w-1-ti]=t[i]
      ti+=1
      b[i]-=2
    if b[i]==1:
      c[h//2][w//2]=t[i]
      b[i]-=1
for i in c:print("""".join(i))
""""""","```
t = ""abcdefghijklmnopqrstuvwxyz""
h, w = map(int, input().split())
a = [list(input()) for _ in range(h)]
b = [0] * 26
for i in a:
    for j in i:
        b[t.index(j)] += 1
x, y, z = (h // 2) * (w // 2), (h % 2) * (w // 2) + (h // 2) * (w % 2), (h % 2) * (w % 2)
for i in b:
    j = i
    while x and j > 3:
        x -= 1
        j -= 4
    while y and j > 1:
        y -= 1
        j -= 2
    z -= j
if not (x == y == z == 0):
    print(""No"")
else:
    print(""Yes"")

c = [[0] * w for _ in range(h)]
fi, ti = 0, 0
for i in range(26):
    while b[i]:
        if b[i] >= 4:
            j, k = fi // (w // 2), fi % (w // 2)
            c[j][k] = c[j][w - k - 1] = c[h - j - 1][k] = c[h - j - 1][w - k - 1] = t[i]
            fi += 1
            b[i] -= 4
        if b[i] == 2:
            if ti < h // 2 and w % 2:
                c[ti][w // 2] = c[h - ti - 1][w // 2] = t[i]
            else:
                c[h // 2][ti] = c[h // 2][w - 1 - ti] = t[i]
            ti += 1
            b[i] -= 2
        if b[i] == 1:
            c[h // 2][w // 2] = t[i]
            b[i] -= 1
for i in c:
    print("""".join(i))
```",extreme_minor,Meta-Llama-2-7b-chat,0.868
104,python_105,Python,"MOD = 10 ** 9 + 7
n, m, k = [int(item) for item in input().split()]


ans = 1
for i in range(2, k):
    ans = (ans * (n * m - i)) % MOD

for i in range(1, k - 2 + 1):
    ans = (ans * pow(i, MOD - 2, MOD)) % MOD

print((ans * (m ** 2 * n * (n ** 2 - 1) // 6 + n * (n - 1) * m
              * (m ** 2 - 1) // 6 + n * m * (m ** 2 - 1) // 6)) % MOD)


# pairs = []
# for i in range(1, n + 1):
#     for j in range(1, m + 1):
#         pairs.append((i, j))
#
# pairs.sort()
# print(pairs)
#
# brute = 0
# for i in range(len(pairs)):
#     for j in range(i + 1, len(pairs)):
#         brute += abs(pairs[i][0] - pairs[j][0]) + \
#                      abs(pairs[i][1] - pairs[j][1])
#
# print(ans * brute)
","```
MOD = 10**9 + 7
n, m, k = [int(item) for item in input().split()]

ans = 1
for i in range(2, k):
    ans = (ans * (n * m - i)) % MOD

for i in range(1, k - 2 + 1):
    ans = (ans * pow(i, MOD - 2, MOD)) % MOD

print((ans * ((m ** 2 * n * (n ** 2 - 1)) // 6 + (n * (n - 1) * m * (m ** 2 - 1)) // 6 + (n * m * (m ** 2 - 1)) // 6)) % MOD)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9006
105,python_106,Python,"X, Y = map(int, input().split())
ans = 0
if X == 3:
    ans += 100000
elif X == 2:
    ans += 200000
elif X == 1:
    ans += 300000

if Y == 3:
    ans += 100000
elif Y == 2:
    ans += 200000
elif Y == 1:
    ans += 300000

if X == 1 and Y == 1:
    ans += 400000

print(ans)
","```
X, Y = map(int, input().split())
ans = 0
if X == 3:
    ans += 100000
elif X == 2:
    ans += 200000
elif X == 1:
    ans += 300000
if Y == 3:
    ans += 100000
elif Y == 2:
    ans += 200000
elif Y == 1:
    ans += 300000
if X == 1 and Y == 1:
    ans += 400000
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8636
106,python_107,Python,"from itertools import combinations, permutations

n = int(input())
balls = []
cost = n
for _ in range(n):
    x, y = map(int, input().split())
    balls.append((x, y))

for b1, b2 in combinations(balls, 2):
    p, q = b1[0] - b2[0], b1[1] - b2[1]
    if p != 0 or q != 0:
        sub = 0
        for b3, b4 in permutations(balls, 2):
            dx, dy = b3[0] - b4[0], b3[1] - b4[1]
            if dx == p and dy == q:
                sub += 1
        cost = min(cost, n - sub)

print(max(cost, 1))
","```
from itertools import combinations, permutations

n = int(input())
balls = []
cost = n
for _ in range(n):
    x, y = map(int, input().split())
    balls.append((x, y))

for b1, b2 in combinations(balls, 2):
    p, q = b1[0] - b2[0], b1[1] - b2[1]
    if p!= 0 or q!= 0:
        sub = 0
        for b3, b4 in permutations(balls, 2):
            dx, dy = b3[0] - b4[0], b3[1] - b4[1]
            if dx == p and dy == q:
                sub += 1
        cost = min(cost, n - sub)

print(max(cost, 1))
```",extreme_minor,Meta-Llama-2-7b-chat,0.9112
107,python_108,Python,"a, b = input().split()

if a < b:
  print(a * int(b))
else:
  print(b * int(a))","```
a, b = input().split()

if int(a) < int(b):
    print(int(a) * int(b))
else:
    print(int(b) * int(a))
```",extreme_minor,Meta-Llama-2-7b-chat,0.7985
108,python_109,Python,"N, K = map(int, input().split())
ab = [[int(_) for _ in input().split()] for _ in range(N)]
ab = sorted(ab, key=lambda x: x[0])
tmp = 0

for i in ab:
    tmp += i[1]
    if tmp >= K:
        ans = i[0]
        break
print(ans)","```
N, K = map(int, input().split())
ab = [[int(_) for _ in input().split()] for _ in range(N)]
ab = sorted(ab, key=lambda x: x[0])
tmp = 0

for i in ab:
    tmp += i[1]
    if tmp >= K:
        ans = i[0]
        break
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8728
109,python_110,Python,"# coding: utf-8
X,Y=map(int,input().split())

if X%Y==0:
    print(-1)
else:
    print(X)

","```
# coding: utf-8

X, Y = map(int, input().split())

if X % Y == 0:
    print(-1)
else:
    print(X)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8559
110,python_111,Python,"N = int(input())
A = [int(_) for _ in input().split()]
s = 0
for a in A:
    if a == s + 1:
        s = a
if s == 0:
    print(-1)
else:
    print(N-s)
","```
N = int(input())
A = [int(x) for x in input().split()]
s = 0
for a in A:
    if a == s + 1:
        s = a
if s == 0:
    print(-1)
else:
    print(N - s)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8388
111,python_112,Python,"n=input()
a = list(map(int,input().split()))
suma = sum(a)
r = 0

for i in range(0, len(a) - 1):
  suma -= a[i]
  r += a[i] * suma
print(r % (10 ** 9 + 7))","```
n = int(input())
a = list(map(int, input().split()))
suma = sum(a)
r = 0

for i in range(len(a) - 1):
    suma -= a[i]
    r += a[i] * suma
print(r % (10**9 + 7))
```",extreme_minor,Meta-Llama-2-7b-chat,0.829
112,python_113,Python,"N, X, M = map(int, input().split())
cnt = [0] * M
cnt[X] = 1
start = -1
seq = [X]
for i in range(1, N):
    X = X * X % M
    if cnt[X] > 0:
        start = X
        break
    seq.append(X)
    cnt[X] += 1

if start < 0:
    print(sum(seq))
    exit()

cycle_start_idx = seq.index(start)
header = seq[:cycle_start_idx]
cycle = seq[cycle_start_idx:]
in_cycle_N = N - len(header)
q, r = divmod(in_cycle_N, len(cycle))
ans = sum(header) + sum(cycle) * q + sum(cycle[:r])
print(ans)
","```
N, X, M = map(int, input().split())
cnt = [0] * M
cnt[X] = 1
start = -1
seq = [X]
for i in range(1, N):
    X = (X * X) % M
    if cnt[X] > 0:
        start = X
        break
    seq.append(X)
    cnt[X] += 1

if start < 0:
    print(sum(seq))
    exit()

cycle_start_idx = seq.index(start)
header = seq[:cycle_start_idx]
cycle = seq[cycle_start_idx:]
in_cycle_N = N - len(header)
q, r = divmod(in_cycle_N, len(cycle))
ans = sum(header) + sum(cycle[:r]) + (len(cycle) - r) * sum(cycle)
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9132
113,python_114,Python,"S=int(input())
x1 = y1 = 0
x2 = 10**9
y2 = 1
y3 = -(-S // (10**9))
x3 = y3 * 10**9 - S
print(x1,y1,x2,y2,x3,y3)","```
s = int(input())
x1, y1, x2, y2, x3, y3 = 0, 0, 10**9, 1, s // 10**9, (s // 10**9) * 10**9 - s
print(x1, y1, x2, y2, x3, y3)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8033
114,python_115,Python,"N = int(input())
a = list(map(int, input().split()))

cnt = 0

for i in range(N):
    x = 1
    while True:
        if a[i] % 2**x:
            cnt += x - 1
            break
        x += 1

print(cnt)","```
N = int(input())
a = list(map(int, input().split()))

cnt = 0

for i in range(N):
    x = 1
    while True:
        if a[i] % (2 ** x):
            cnt += x - 1
            break
        x += 1

print(cnt)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8775
115,python_116,Python,"#119  Still TBD

S = input()

if int(S[5]+S[6]) >= 5:
    print(""TBD"")
else:
    print(""Heisei"")","```
#119  Still TBD

S = input()

if int(S[5:7]) >= 5:
    print(""TBD"")
else:
    print(""Heisei"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.855
116,python_117,Python,"N = int(input())
A = list(map(int,input().split()))
L = [0]
R = [0]
import fractions
def GCD(a,b):
    if a*b != 0:
        return fractions.gcd(a,b)
    else:
        return max(a,b)
for i in range(N-1):
    x = A[i]
    y = A[-i-1]
    L.append(GCD(L[i],x))
    R.append(GCD(R[i],y))
ans = 0
for i in range(N):
    x = L[i]
    y = R[-i-1]
    ans = max(GCD(x,y),ans)
print(ans)","```
N = int(input())
A = list(map(int, input().split()))
L = [0]
R = [0]
import fractions
def gcd(a, b):
    if a * b!= 0:
        return fractions.gcd(a, b)
    else:
        return max(a, b)

for i in range(N - 1):
    x = A[i]
    y = A[N - i - 1]
    L.append(gcd(L[i], x))
    R.append(gcd(R[i], y))

ans = 0
for i in range(N):
    x = L[i]
    y = R[N - i - 1]
    ans = max(gcd(x, y), ans)

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9348
117,python_118,Python,"n = int(input())
disadd = []
disminus = []
for i in range(n):
    x, y = map(int, input().split())
    disadd.append(x+y)
    disminus.append(x-y)

print(max(max(disadd)-min(disadd), max(disminus) - min(disminus)))","```
n = int(input())
dis_add = []
dis_minus = []
for i in range(n):
    x, y = map(int, input().split())
    dis_add.append(x + y)
    dis_minus.append(x - y)

print(max(max(dis_add) - min(dis_add), max(dis_minus) - min(dis_minus)))
```",extreme_minor,Meta-Llama-2-7b-chat,0.7668
118,python_119,Python,"import sys
input = lambda : sys.stdin.readline().rstrip()
sys.setrecursionlimit(max(1000, 10**9))
write = lambda x: sys.stdout.write(x+""\n"")


n = int(input())
a = list(map(int, input().split()))
val = 0
for num in a:
    val = val ^ num
ans = [None]*n
for i,num in enumerate(a):
    ans[i] = val^num
write("" "".join(map(str, ans)))","```
import sys
input = lambda: sys.stdin.readline().rstrip()
sys.setrecursionlimit(max(1000, 10**9))
write = lambda x: sys.stdout.write(str(x) + '\n')

n = int(input())
a = list(map(int, input().split()))
val = 0
for num in a:
    val ^= num
ans = [None] * n
for i, num in enumerate(a):
    ans[i] = val ^ num
write(' '.join(map(str, ans)))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8868
119,python_120,Python,"H, W = map(int, input().split())
a = [0 for i in range(H)]
for i in range(H):
    a[i] = list(map(int, input().split()))
result = []
for i in range(H):
    for j in range(W):
        if i == H-1 and j == W-1:
            continue
        if j == W-1 and a[i][j] % 2 == 1 and i < H-1:
            a[i][j] -= 1
            a[i+1][j] += 1
            result.append([i+1, j+1, i+2, j+1])

        elif a[i][j] % 2 == 1:
            a[i][j] -= 1
            a[i][j+1] += 1
            result.append([i+1, j+1,i+1, j+2])
#print(a)
print(len(result))
for i in range(len(result)):
    print('%d %d %d %d' % (result[i][0],result[i][1],result[i][2],result[i][3]))
","```
H, W = map(int, input().split())
a = [list(map(int, input().split())) for _ in range(H)]
result = []
for i in range(H):
    for j in range(W):
        if i == H - 1 and j == W - 1:
            continue
        if j == W - 1 and a[i][j] % 2 == 1 and i < H - 1:
            a[i][j] -= 1
            a[i + 1][j] += 1
            result.append([i + 1, j + 1, i + 2, j + 1])
        elif a[i][j] % 2 == 1:
            a[i][j] -= 1
            a[i][j + 1] += 1
            result.append([i + 1, j + 1, i + 1, j + 2])
print(len(result))
for i in range(len(result)):
    print('%d %d %d %d' % (result[i][0], result[i][1], result[i][2], result[i][3]))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8864
120,python_121,Python,"import sys
S = input()
K = int(input())

letter_set = sorted(set(S))

ans_list = []

for letter in letter_set:
    letters = letter
    while letters in S:
        ans_list.append(letters)
        if len(ans_list) == K:
            print(ans_list[K - 1])
            sys.exit()
        for i in range(len(letter_set)):
            if letters + letter_set[i] in S:
                letters = letters + letter_set[i]
                break
        else:
            break
print(ans_list[K - 1])
","```
import sys
S = input()
K = int(input())

letter_set = sorted(set(S))

ans_list = []

for letter in letter_set:
    letters = letter
    while letters in S:
        ans_list.append(letters)
        if len(ans_list) == K:
            print(ans_list[-1])
            sys.exit()
        for i in range(len(letter_set)):
            if letters + letter_set[i] in S:
                letters += letter_set[i]
                break
        else:
            break
print(ans_list[-1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8786
121,python_122,Python,"import bisect
n = int(input())
a = list(map(int, input().split()))
a = sorted(a)
if n == 2:
    print(max(a),min(a))
    exit()
ans_n = a[n-1]
bestr = ans_n//2
kouho = bisect.bisect_left(a,bestr)
if abs(bestr-a[kouho-1]) < abs(bestr-a[kouho]) and abs(bestr-a[kouho-1]) < abs(bestr-a[kouho+1]):
    ans_r = a[kouho-1]
elif abs(bestr-a[kouho]) < abs(bestr-a[kouho+1]):
    ans_r = a[kouho]
else:
    ans_r = a[kouho+1]
print(ans_n, ans_r)
","```
import bisect
n = int(input())
a = list(map(int, input().split()))
a = sorted(a)
if n == 2:
    print(max(a), min(a))
    exit()
ans_n = a[n - 1]
bestr = ans_n // 2
kouho = bisect.bisect_left(a, bestr)
if abs(bestr - a[kouho - 1]) < abs(bestr - a[kouho]) and abs(bestr - a[kouho - 1]) < abs(bestr - a[kouho + 1]):
    ans_r = a[kouho - 1]
elif abs(bestr - a[kouho]) < abs(bestr - a[kouho + 1]):
    ans_r = a[kouho]
else:
    ans_r = a[kouho + 1]
print(ans_n, ans_r)",extreme_minor,Meta-Llama-2-7b-chat,0.9807
122,python_123,Python,"x,y = map(int,input().split())
if x*y == 0:
    if x<0:
        print(-x)
    elif x>0:
        print(1+x)
    else:
        if y >= 0:
            print(y)
        else:
            print(1-y)
elif x*y >0:
    if x>y:
        print(2+abs(x-y))
    else:
        print(abs(y-x))
else:
    print(1+abs(x+y))","```
x, y = map(int, input().split())
if x * y == 0:
    if x < 0:
        print(-x)
    elif x > 0:
        print(1 + x)
    else:
        if y >= 0:
            print(y)
        else:
            print(1 - y)
elif x * y > 0:
    if x > y:
        print(2 + abs(x - y))
    else:
        print(abs(y - x))
else:
    print(1 + abs(x + y))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8064
123,python_124,Python,"N = int(input())
A = [int(input()) for i in range(N)]

if A[0] != 0:
    print(-1)
    exit()

for i in range(N - 1):
    if A[i] < A[i + 1] and A[i + 1] - A[i] != 1:
        print(-1)
        exit()
    if A[i] > i + 1:
        print(-1)
        exit()

ans = 0
i = 1
old = 0
while i != N:
    if A[i] <= old:
        ans += old
    old = A[i]
    i += 1

print(ans + A[-1])
","```
N = int(input())
A = [int(input()) for _ in range(N)]

if A[0]!= 0:
    print(-1)
    exit()

for i in range(N - 1):
    if A[i] < A[i + 1] and A[i + 1] - A[i]!= 1:
        print(-1)
        exit()
    if A[i] > i + 1:
        print(-1)
        exit()

ans = 0
i = 1
old = A[0]
while i!= N:
    if A[i] <= old:
        ans += old
    old = A[i]
    i += 1

print(ans + A[-1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.9073
124,python_125,Python,"n = int(input())
a = list(map(int,input().split()))
b = [0]*n

for i in range(n-1):
    b[a[i]-1] += 1

for i in range(n):
    print(b[i])
","```
n = int(input())
a = list(map(int, input().split()))
b = [0] * n

for i in range(n - 1):
    b[a[i] - 1] += 1

for i in range(n):
    print(b[i])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8394
125,python_126,Python,"import sys


inint = lambda: int(sys.stdin.readline())
inintm = lambda: map(int, sys.stdin.readline().split())
inintl = lambda: list(inintm())
instrm = lambda: map(str, sys.stdin.readline().split())
instrl = lambda: list(instrm())

n, k, s = inintm()

ans = [str(s)]*k

if s != 10**9:
    for i in range(n-k):
        ans.append(str(s+1))
else:
    for i in range(n-k):
        ans.append(str(s-1))

print("" "".join(ans))","```
import sys

inint = lambda: int(sys.stdin.readline())
inintm = lambda: map(int, sys.stdin.readline().split())
inintl = lambda: list(inintm())
instrm = lambda: map(str, sys.stdin.readline().split())
instrl = lambda: list(instrm())

n, k, s = inintm()

ans = [str(s)] * k

if s!= 10**9:
    for i in range(n - k):
        ans.append(str(s + 1))
else:
    for i in range(n - k):
        ans.append(str(s - 1))

print("" "".join(ans))
```",extreme_minor,Meta-Llama-2-7b-chat,0.9091
126,python_127,Python,"N, T = map(int, input().split())
M = 10000
for n in range(N):
    c, t = map(int, input().split())
    if T >= t:
        M = min(M, c)
if M == 10000:
    print(""TLE"")
else:
    print(M)
","```
N, T = map(int, input().split())
M = 10000
for n in range(N):
    c, t = map(int, input().split())
    if T >= t:
        M = min(M, c)
if M == 10000:
    print(""TLE"")
else:
    print(M)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8281
127,python_128,Python,"n = int(input())
s = input()

res = 1 << 40
num_black = 0
num_white = s.count('.')
for i in range(n):
    res = min(res, num_black + num_white)
    if s[i] == '.':
        num_white -= 1
    else:
        num_black += 1
        
res = min(res, num_black + num_white)
print(res)","```
n = int(input())
s = input()

res = 1 << 40
num_black = 0
num_white = s.count('.')

res = min(res, num_black + num_white)
for i in range(n):
    if s[i] == '.':
        num_white -= 1
    else:
        num_black += 1
    res = min(res, num_black + num_white)

print(res)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8242
128,python_129,Python,"n = int(input())
A = [int(x) for x in input().split()]
A_ = sorted([a - i for i, a in enumerate(A, 1)])
i = len(A) // 2
b = A_[i]
ans = sum([abs(a - b) for a in A_])
print(ans)
","```
n = int(input())
A = [int(x) for x in input().split()]
A_ = sorted([a - i for i, a in enumerate(A, 1)])
i = len(A) // 2
b = A_[i]
ans = sum(abs(a - b) for a in A_)
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8626
129,python_130,Python,"#F
import math
N = int(input())

m = int(math.sqrt(N-1))
Myaku = []
for i in range(1,m+1):
    if (N-1)%i == 0:
        if i != 1:
            Myaku.append(i)
        if (N-1)//i != i:
            Myaku.append((N-1)//i)
            
ans = len(Myaku)

n = int(math.sqrt(N))
Nyaku = []
for i in range(1,n+1):
    if N%i == 0:
        if i != 1:
            Nyaku.append(i)
        if N//i != i:
            Nyaku.append(N//i)
            
for ny in Nyaku:
    X = N
    while X%ny == 0:
        X //= ny
    if X%ny == 1:
        ans+=1
        
print(ans)
#print(Myaku,Nyaku)


","```
#F
import math
N = int(input())

m = int(math.sqrt(N-1))
Myaku = []
for i in range(1, m + 1):
    if (N-1) % i == 0:
        if i!= 1:
            Myaku.append(i)
        if (N-1) // i!= i:
            Myaku.append((N-1) // i)

ans = len(Myaku)

n = int(math.sqrt(N))
Nyaku = []
for i in range(1, n + 1):
    if N % i == 0:
        if i!= 1:
            Nyaku.append(i)
        if N // i!= i:
            Nyaku.append(N // i)

for ny in Nyaku:
    X = N
    while X % ny == 0:
        X //= ny
    if X % ny == 1:
        ans += 1

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9327
130,python_131,Python,"n = input()
ans = n.replace(""1"", ""t"").replace(""9"", ""1"").replace(""t"", ""9"")
print(ans)","```
n = input()
ans = n.replace(""1"", ""t"").replace(""9"", ""1"").replace(""t"", ""9"")
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8456
131,python_132,Python,"x = int(input())

if x >= 30:
    print(""Yes"")
else:
    print(""No"")","```
x = int(input())

if x >= 30:
    print(""Yes"")
else:
    print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8497
132,python_133,Python,"# https://codeforces.com/blog/entry/71482
# https://atcoder.jp/contests/abc145/submissions/8473167

import numpy
n, t = map(int, input().split())
time = []
for i in range(n):
    x, y = map(int, input().split())
    time.append((x, y))


dp = numpy.zeros(t, dtype=int)
time.sort()
ans = 0
for a, b in time:
    ans = max(ans, dp[-1]+b)
    dp[a:] = numpy.maximum(dp[a:], dp[:-a]+b)

print(ans)","```
# https://codeforces.com/blog/entry/71482
# https://atcoder.jp/contests/abc145/submissions/8473167

import numpy

n, t = map(int, input().split())
time = []
for i in range(n):
    x, y = map(int, input().split())
    time.append((x, y))

time.sort()

dp = numpy.zeros(t, dtype=int)
ans = 0
for a, b in time:
    ans = max(ans, dp[-1] + b)
    dp[a:] = numpy.maximum(dp[a:], dp[:-a] + b)

print(ans)",extreme_minor,Meta-Llama-2-7b-chat,0.9907
133,python_134,Python,"H, W, D = map(int, input().split())
A_where = [0] * (H*W+1)
A_where[0] = (-1, -1)
for p in range(H):
    A = list(map(int, input().split()))
    for q in range(W):
        A_where[A[q]] = (p, q)

Q = int(input())

DP = [0] * (H*W+1)

for i in range(D+1, H*W+1):
    y1, x1 = A_where[i]
    y2, x2 = A_where[i-D]

    DP[i] = DP[i-D] + abs(y1-y2) + abs(x1-x2)

for i in range(Q):
    l, r = map(int, input().split())
    print(DP[r] - DP[l])
","```
H, W, D = map(int, input().split())
A_where = [0] * (H*W + 1)
A_where[0] = (-1, -1)
for p in range(H):
    A = list(map(int, input().split()))
    for q in range(W):
        A_where[A[q]] = (p, q)

Q = int(input())

DP = [0] * (H*W + 1)

for i in range(D + 1, H*W + 1):
    y1, x1 = A_where[i]
    y2, x2 = A_where[i - D]

    DP[i] = DP[i - D] + abs(y1 - y2) + abs(x1 - x2)

for i in range(Q):
    l, r = map(int, input().split())
    print(DP[r] - DP[l])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8936
134,python_135,Python,"N = int(input())
# 愚直に求めるならば
# f(n) = n(n-2)(n-4)...(n%2+4)(n%2+2)f(n%2)

if N % 2:
    print(0)
    exit()
# n が奇数ならば0を出力すればよい

# nが偶数ならば
# f(n) = n(n-2)(n-4)...(n%2+4)(n%2+2)

# 小問題
# n , n-2, n-4, ... , n%2+4, n%2+2
# の中に含まれるNの倍数の数を求めよ
def a(n,N):
    n -= n % (2 * N)
    return n // N // 2

s = 0
result = 1
NN = 5
while result:
    result = a(N,NN)
    s += result
    NN *= 5

print(s)","```
N = int(input())
if N % 2:
    print(0)
    exit()

def a(n, N):
    n -= n % (2 * N)
    return n // N // 2

s = 0
result = 1
NN = 5
while result:
    result = a(N, NN)
    s += result
    NN *= 5

print(s)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7505
135,python_136,Python,"n = int(input())
G = [[] for _ in range(n)]
for _ in range(n-1):
    a, b = tuple(map(lambda x: int(x)-1, input().split()))
    G[a].append(b)
    G[b].append(a)

color = [0] * n
color[0] = 1
color[n-1] = -1
from collections import deque
q = deque([])
q.append(0)
q.append(n-1)
while q:
    node = q.popleft()
    c = color[node]
    for to in G[node]:
        if color[to] == 0:
            color[to] = c
            q.append(to)

cb = color.count(1)
cw = color.count(-1)

if cb > cw:
    print('Fennec')
else:
    print('Snuke')
","```
n = int(input())
G = [[] for _ in range(n)]
for _ in range(n - 1):
    a, b = tuple(map(lambda x: int(x) - 1, input().split()))
    G[a].append(b)
    G[b].append(a)

color = [0] * n
color[0] = 1
color[n - 1] = -1

from collections import deque
q = deque()
q.append(0)
q.append(n - 1)

while q:
    node = q.popleft()
    c = color[node]
    for to in G[node]:
        if color[to] == 0:
            color[to] = c
            q.append(to)

cb = color.count(1)
cw = color.count(-1)

if cb > cw:
    print('Fennec')
else:
    print('Snuke')
```",extreme_minor,Meta-Llama-2-7b-chat,0.9155
136,python_137,Python,"n = input()
print('ABC' + n)","```
n = input()
print('ABC' + n)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8793
137,python_138,Python,"# AtCoder Beginner Contest 146
# E - Rem of Sum is Num
# https://atcoder.jp/contests/abc146/tasks/abc146_e
from collections import defaultdict
N, K = map(int, input().split())
*A, = map(int, input().split())

A = [0]+A
d = []
c = defaultdict(int)
x = 0
ans = 0
for i, a in enumerate(A):
    x += a - 1
    x %= K

    d.append(x)
    if i-K >= 0:
        c[d[i-K]] -= 1
    ans += c[x]
    c[x] += 1

print(ans)","```
# AtCoder Beginner Contest 146
# E - Rem of Sum is Num
# https://atcoder.jp/contests/abc146/tasks/abc146_e
from collections import defaultdict

N, K = map(int, input().split())
*A, = map(int, input().split())

A = [0] + A
d = []
c = defaultdict(int)
x = 0
ans = 0

for i, a in enumerate(A):
    x += a - 1
    x %= K

    d.append(x)
    if i - K >= 0:
        c[d[i - K]] -= 1
    ans += c[x]
    c[x] += 1

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9112
138,python_139,Python,"n = int(raw_input())
a = map(int, raw_input().split())
b = map(int, raw_input().split())
c = [a[i] - b[i] for i in xrange(n)]
f = -sum(c)
if f < 0:
    print 'No'
    quit()
t = f
for i in xrange(n):
    if c[i] < 0:
        k = (-c[i] + 1) / 2
        t -= k
        c[i] += k * 2
if t < 0:
    print 'No'
    quit()
s = f
for i in xrange(n):
    s -= c[i]
if s < 0:
    print 'No'
    quit()
if t * 2 == s:
    print 'Yes'
else:
    print 'No'
","```
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
c = [a[i] - b[i] for i in range(n)]
f = -sum(c)
if f < 0:
    print('No')
    quit()
t = f
for i in range(n):
    if c[i] < 0:
        k = (-c[i] + 1) // 2
        t -= k
        c[i] += k * 2
if t < 0:
    print('No')
    quit()
s = f
for i in range(n):
    s -= c[i]
if s < 0:
    print('No')
    quit()
if t * 2 == s:
    print('Yes')
else:
    print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.9161
139,python_140,Python,"n=int(input())
a=list(map(int,input().split()))
a.sort()
temp=[a[0]]
for i in range(n-1): temp.append(temp[i]+a[i+1])
a.sort(reverse=True)
temp.reverse()
flag=1
for i in range(n-1):
    if a[i]>2*a[i+1] and a[i]>2*temp[i+1]:
        flag=0
        print(i+1)
        break
if flag: print(n)","```
n = int(input())
a = list(map(int, input().split()))
a.sort()
temp = [a[0]]
for i in range(n - 1):
    temp.append(temp[i] + a[i + 1])
a.sort(reverse=True)
temp.reverse()
flag = 1
for i in range(n - 1):
    if a[i] > 2 * a[i + 1] and a[i] > 2 * temp[i + 1]:
        flag = 0
        print(i + 1)
        break
if flag:
    print(n)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8815
140,python_141,Python,"s = input().replace(""?"", ""D"")
print(s)","```
s = input().replace(""?"", ""D"")
print(s)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8554
141,python_142,Python,"import sys
input = sys.stdin.readline
from operator import itemgetter
sys.setrecursionlimit(10000000)

a = []
f = []
n = 0

def rec(l, r, k):
    if l+1 < r:
        mid = (l + r) // 2
        s = 0
        for i in range(n):
            s += max(a[i] - mid // f[i], 0)
        if s <= k:
            return rec(l, mid, k)
        else:
            return rec(mid, r, k)
    else:
        return r

def main():
    global a, f, n
    n, k = map(int, input().strip().split())
    a = list(map(int, input().strip().split()))
    f = list(map(int, input().strip().split()))
    a = sorted(a)
    f = sorted(f, reverse=True)
    print(rec(-1, 10**12, k))

if __name__ == '__main__':
    main()
","```
import sys
input = sys.stdin.readline
from operator import itemgetter
sys.setrecursionlimit(10000000)

a = []
f = []
n = 0

def rec(l, r, k):
    if l + 1 < r:
        mid = (l + r) // 2
        s = sum(max(a[i] - mid // f[i], 0) for i in range(n))
        if s <= k:
            return rec(l, mid, k)
        else:
            return rec(mid, r, k)
    else:
        return r

def main():
    global a, f, n
    n, k = map(int, input().strip().split())
    a = sorted(map(int, input().strip().split()))
    f = sorted(map(int, input().split()), reverse=True)
    print(rec(-1, 10**12, k))

if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.9056
142,python_143,Python,"n = int(input())
print (n*(n+1))/2","```
n = int(input())
print((n*(n+1))/2)
```",extreme_minor,Meta-Llama-2-7b-chat,0.785
143,python_144,Python,"S,T = map(str,input().split())
A,B = map(int,input().split())
U = str(input())
if S == U:
    print(A-1,B)
else:
    print(A,B-1)
","```
S, T = map(str, input().split())
A, B = map(int, input().split())
U = str(input())
if S == U:
    print(A - 1, B)
else:
    print(A, B - 1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8169
144,python_145,Python,"N = int(input())
A = list(map(int, input().split()))
 
money = 1000
stock = 0
 
for i in range(N):
    if i == N - 1:
        money += stock * A[i]
        break
    if A[i] < A[i + 1]:
        buy_stock = money // A[i]
        money -= A[i] * buy_stock
        stock += buy_stock
    elif A[i] > A[i + 1]:
        money += A[i] * stock
        stock = 0
 
print(money)","```
N = int(input())
A = list(map(int, input().split()))

money = 1000
stock = 0

for i in range(N):
    if i == N - 1:
        money += stock * A[i]
        break
    if A[i] < A[i + 1]:
        buy_stock = money // A[i]
        money -= A[i] * buy_stock
        stock += buy_stock
    elif A[i] > A[i + 1]:
        money += A[i] * stock
        stock = 0

print(money)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8611
145,python_146,Python,"def make_burger(i, x):
    if i == 0:
        return 1 if x > 0 else 0
    mid = (b[i] + 1) // 2
    if mid > x:
        return make_burger(i - 1, x - 1)
    elif mid == x:
        return p[i - 1] + 1
    else:
        return p[i - 1] + 1 + make_burger(i - 1, x - mid)
    

n, x = map(int, input().split())
p = [1]
b = [1]

for _ in range(n):
    p.append(p[-1] * 2 + 1)
    b.append(b[-1] * 2 + 3)

print(make_burger(n, x))","```
def make_burger(i, x):
    if i == 0:
        return 1 if x > 0 else 0
    mid = (b[i] + 1) // 2
    if mid > x:
        return make_burger(i - 1, x - 1)
    elif mid == x:
        return p[i - 1] + 1
    else:
        return p[i - 1] + 1 + make_burger(i - 1, x - mid)

n, x = map(int, input().split())
p = [1]
b = [1]

for _ in range(n):
    p.append(p[-1] * 2 + 1)
    b.append(b[-1] * 2 + 3)

print(make_burger(n, x))
```",extreme_minor,Meta-Llama-2-7b-chat,0.9281
146,python_147,Python,"from bisect import bisect_left
N=int(input())
S=input()
li=[[] for i in range(10)]
for i in range(N):
    n=int(S[i])
    li[n].append(i)
ans=0
for i in range(10**3):
    a=i//100
    b=(i-100*a)//10
    c=i-100*a-10*b
    tmpn=[0 for i in range(10)]
    if not li[a]:
        continue
    tmpi=li[a][0]
    #print(tmpi)
    tmpn[a]+=1
    if tmpn[b]>len(li[b])-1:
        continue
    indin=bisect_left(li[b],tmpi,tmpn[b],len(li[b]))
    if indin==len(li[b]):
        continue
    tmpi=li[b][indin]
    #print(tmpi)
    #tmpn[b]+=1
    tmpn[b]=indin+1
    #print(tmpn)
    if tmpn[c]>len(li[c])-1:
        continue
    indin=bisect_left(li[c],tmpi,tmpn[c],len(li[c]))
    #print(""indin"",indin)
    if indin!=len(li[c]):
        ans+=1
        #print(i)
print(ans)
","```
from bisect import bisect_left
N = int(input())
S = input()
li = [[] for _ in range(10)]
for i in range(N):
    n = int(S[i])
    li[n].append(i)
ans = 0
for i in range(10**3):
    a = i // 100
    b = (i - 100 * a) // 10
    c = i - 100 * a - 10 * b
    tmpn = [0] * 10
    if not li[a]:
        continue
    tmpi = li[a][0]
    tmpn[a] += 1
    if tmpn[b] > len(li[b]) - 1:
        continue
    indin = bisect_left(li[b], tmpi, tmpn[b], len(li[b]))
    if indin == len(li[b]):
        continue
    tmpi = li[b][indin]
    tmpn[b] = indin + 1
    if tmpn[c] > len(li[c]) - 1:
        continue
    indin = bisect_left(li[c], tmpi, tmpn[c], len(li[c]))
    if indin!= len(li[c]):
        ans += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7583
147,python_148,Python,"A,B,C = map(int,input().split())
if A==B:
  print(C)
elif A==C:
  print(B)
else:
  print(A)","```
A, B, C = map(int, input().split())
if A == B:
    print(C)
elif A == C:
    print(B)
else:
    print(A)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8183
148,python_149,Python,"n = int(input())
a,b = map(int,input().split())
p = list(map(int,input().split()))
cnt1 = 0
cnt2 = 0
cnt3 =0

for i in range(n):
    if p[i] <= a:
        cnt1 +=1
    elif a < p[i] <= b:
        cnt2+=1
    else:
        cnt3+=1
ans = min(cnt1,cnt2,cnt3)
print(ans)
","```
n = int(input())
a, b = map(int, input().split())
p = list(map(int, input().split()))
cnt1, cnt2, cnt3 = 0, 0, 0

for i in range(n):
    if p[i] <= a:
        cnt1 += 1
    elif a < p[i] <= b:
        cnt2 += 1
    else:
        cnt3 += 1
ans = min(cnt1, cnt2, cnt3)
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8021
149,python_150,Python,"num = int(input())
check_list = [0] * num * num

def make_bridge(island1, island2):
    if(island1 < island2):
        check_list[(island1-1)*num + (island2-1)]=1;
    else:
        check_list[(island2-1)*num + (island1-1)]=1;

if num%2==0:
    sum_pair = num+1
else:
    sum_pair = num

for i in range(num):
    for j in range(i):
        if (i+1 + j+1 != sum_pair):
            check_list[j*num + i]=1;

bridge_num=0;

for i in range(num*num):
    if(check_list[i]==1):
        bridge_num+=1;

print(bridge_num);

for i in range(num*num):
    if(check_list[i]==1):
        left = i // num
        right = i % num
        print(str(left+1)+"" ""+str(right+1));
","```
num = int(input())
check_list = [0] * (num * num)

def make_bridge(island1, island2):
    if island1 < island2:
        check_list[(island1 - 1) * num + (island2 - 1)] = 1
    else:
        check_list[(island2 - 1) * num + (island1 - 1)] = 1

if num % 2 == 0:
    sum_pair = num + 1
else:
    sum_pair = num

for i in range(num):
    for j in range(i):
        if i + 1 + j + 1!= sum_pair:
            check_list[j * num + i] = 1

bridge_num = 0

for i in range(num * num):
    if check_list[i] == 1:
        bridge_num += 1

print(bridge_num)

for i in range(num * num):
    if check_list[i] == 1:
        left = i // num
        right = i % num
        print(str(left + 1) + "" "" + str(right + 1))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8471
150,python_151,Python,"import math
x = int(input())

tmp = 100

for i in range(3761):
    if tmp < x:
        tmp = math.floor(tmp * 1.01)
    else:
        print(i)
        break","```
import math
x = int(input())

tmp = 100

for i in range(3761):
    if tmp < x:
        tmp = math.floor(tmp * 1.01)
    else:
        print(i)
        break
```",extreme_minor,Meta-Llama-2-7b-chat,0.8697
151,python_152,Python,"data = int(input())
array = list(map(int, input().split()))
counter = 0
l = sum(array)
r = []
for a in array[:-1]:
  counter += a
  k = abs(l - 2*counter)
  r.append(k)
r.sort()
print(r[0])","```
data = int(input())
array = list(map(int, input().split()))
counter = 0
l = sum(array)
r = []
for a in array[:-1]:
    counter += a
    k = abs(l - 2 * counter)
    r.append(k)
r.sort()
print(r[0])
```",extreme_minor,Meta-Llama-2-7b-chat,0.7997
152,python_153,Python,"x = int(input())
def ans(x):
    for a in range(0, 1000)[::-1]:
        for b in range(-1000, 1000)[::-1]:
            if a**5 - b**5 == x:
                return a, b
a,b = ans(x)
print(a,b)","```
x = int(input())
def ans(x):
    for a in range(999, -1, -1):
        for b in range(-999, 1000):
            if a**5 - b**5 == x:
                return a, b
a, b = ans(x)
print(a, b)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8321
153,python_154,Python,"# -*- coding: utf-8 -*-

def dfs(s, mx, N):
    if len(s) == N:
        print(s)
    else:
        for i in range(97, ord(mx) + 1):
            dfs(s + chr(i), chr(max(i + 1, ord(mx))), N)

N = int(input())

dfs('', 'a', N)","```
# -*- coding: utf-8 -*-

def dfs(s, mx, N):
    if len(s) == N:
        print(s)
    else:
        for i in range(ord('a'), ord(mx) + 1):
            dfs(s + chr(i), chr(max(i + 1, ord('z'))), N)

N = int(input())

dfs('', 'a', N)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8601
154,python_155,Python,"s = ''.join(list(map(lambda x: x[0].upper(),input().split())))
print(s)
","```
s = ''.join(list(map(lambda x: x[0].upper(), input().split())))
print(s)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9054
155,python_156,Python,"s = input().split()
A=int(s[0])
B=int(s[1])

def factorization(n):
    p=[]
    arr = []
    temp = n
    for i in range(2, int(-(-n**0.5//1))+1):
        if temp%i==0:
            cnt=0
            while temp%i==0:
                cnt+=1
                temp //= i
            arr.append([i, cnt])
            p.append(i)

    if temp!=1:
        arr.append([temp, 1])
        p.append(temp)

    if arr==[]:
        arr.append([n, 1])
        p.append(n)

    return p
A_fact=[]
B_fact=[]
answer=[]
count=0

A_fact=factorization(A)
B_fact=factorization(B)

for p in A_fact:
    if p in B_fact:
            answer.append(p)
            count+=1
if A==1 and B==1:
    print(count)
else:
    print(count+1)
","```
s = input().split()
A = int(s[0])
B = int(s[1])

def factorization(n):
    p = []
    arr = []
    temp = n
    for i in range(2, int(-(-n**0.5)//1) + 1):
        if temp % i == 0:
            cnt = 0
            while temp % i == 0:
                cnt += 1
                temp //= i
            arr.append([i, cnt])
            p.append(i)
    if temp!= 1:
        arr.append([temp, 1])
        p.append(temp)
    if arr == []:
        arr.append([n, 1])
        p.append(n)
    return p

A_fact = []
B_fact = []
answer = []
count = 0

A_fact = factorization(A)
B_fact = factorization(B)

for p in A_fact:
    if p in B_fact:
        answer.append(p)
        count += 1
if A == 1 and B == 1:
    print(count)
else:
    print(count + 1)",extreme_minor,Meta-Llama-2-7b-chat,0.994
156,python_157,Python,"MOD = 10**9 + 7
N = int(input())

ATCG = ""ATCG""

memo = {}
def dfs(i, last):
    if i == N:
        return 1
    key = (i, last)
    if key in memo:
        return memo[key]
    p = None
    l2 = last[-2:]
    if l2 == ""AC"":
        p = ""G""
    elif l2 == ""AG"":
        p = ""C""
    elif l2 == ""GA"":
        p = ""C""
    elif last == ""AGG"" or last == ""ATG"" or last == ""AGT"":
        p = ""C""
    res = 0
    for c in ATCG:
        if c == p:
            continue
        res += dfs(i+1, last[1:] + c)
    memo[key] = res = res % MOD
    return res
print(dfs(0, ""***""))","```
MOD = 10**9 + 7
N = int(input())

ATCG = ""ATCG""

memo = {}
def dfs(i, last):
    if i == N:
        return 1
    key = (i, last)
    if key in memo:
        return memo[key]
    p = None
    l2 = last[-2:]
    if l2 in [""AC"", ""AG""]:
        p = ""G""
    elif l2 == ""GA"":
        p = ""C""
    elif last in [""AGG"", ""ATG"", ""AGT""]:
        p = ""C""
    res = 0
    for c in ATCG:
        if c == p:
            continue
        res += dfs(i+1, last[1:] + c)
    memo[key] = res %= MOD
    return res
print(dfs(0, ""***""))
```",extreme_minor,Meta-Llama-2-7b-chat,0.9291
157,python_158,Python,"N, M = map(int, input().split())
KA = [list(map(int, input().split())) for _ in range(N)]

res = [0] * 31
for i in range(N):
    for a in KA[i][1:]:
        res[a] += 1
ans = 0
for r in res:
    if r == N:
        ans += 1
print(ans)
","```
N, M = map(int, input().split())
KA = [list(map(int, input().split())) for _ in range(N)]

res = [0] * 31
for i in range(N):
    for a in KA[i][1:]:
        res[a] += 1
ans = 0
for r in res:
    if r == N:
        ans += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8551
158,python_159,Python,"import io, os
input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline
import sys

# sys.stdout.write(str(n)+""\n"")
MODULO = 1000000007
# INF = 1e18+10

def gcd(a, b):
	while b != 0:
		a, b = b, a % b
	return a

n = int(input())

a_b = [() for i in range(n)]
m_b_a = [() for i in range(n)]

# a_b_value_indices = {}
# m_b_a_value_indices = {}

a_b_value_count = {}
m_b_a_value_count = {}

a_b_value_rep = {}
m_b_a_value_rep = {}

used = [False for _ in range(n)]
zeroes = 0
is_zero = [False for _ in range(n)]

for i in range(n):
	a, b = map(int, input().split())

	if a == 0 and b == 0:
		zeroes += 1
		used[i] = True
		is_zero[i] = True
	else:
		if a == 0:
			a_b[i] = (0, 1)
			m_b_a[i] = (1, 0)
		elif b == 0:
			a_b[i] = (1, 0)
			m_b_a[i] = (0, 1)
		else:
			neg = False
			if a*b < 0:
				neg = True
			d = gcd(abs(a), abs(b))
			a = abs(a) // d
			b = abs(b) // d

			if neg:
				a_b[i] = (-a, b)
				m_b_a[i] = (b, a)
			else:
				a_b[i] = (a, b)
				m_b_a[i] = (-b, a)

		a_b_value_count[a_b[i]] = a_b_value_count.get(a_b[i], 0) + 1
		# a_b_value_indices[a_b[i]] = a_b_value_indices.get(a_b[i], []) + [i]
 
		m_b_a_value_count[m_b_a[i]] = m_b_a_value_count.get(m_b_a[i], 0) + 1
		# m_b_a_value_indices[m_b_a[i]] = m_b_a_value_indices.get(m_b_a[i], []) + [i]
		if a_b[i] not in a_b_value_rep:
			a_b_value_rep[a_b[i]] = i
		if m_b_a[i] not in m_b_a_value_rep:
			m_b_a_value_rep[m_b_a[i]] = i

ans = 1
for i in range(n):
	if not is_zero[i] and not used[a_b_value_rep[a_b[i]]]:
		# if not connected
		if a_b[i] not in m_b_a_value_count:
			ans *= pow(2, a_b_value_count[a_b[i]], MODULO)
			ans %= MODULO
			used[a_b_value_rep[a_b[i]]] = True
			# for j in a_b_value_indices[a_b[i]]:
			# 	used[j] = True
		else:
			s = a_b_value_count[a_b[i]]
			t = m_b_a_value_count[a_b[i]]
			ans *= ((1*pow(2, s, MODULO) + 1*pow(2, t, MODULO) -1) % MODULO)
			ans %= MODULO

			used[a_b_value_rep[a_b[i]]] = True
			used[m_b_a_value_rep[a_b[i]]] = True
			# for j in m_b_a_value_indices[a_b[i]]:
			# 	used[j] = True
 
			# used_a_b_keys.add(a_b_key)
			# used_a_b_keys.add(-1/a_b_key)
 
 
# -1 is for empty
print((ans-1+zeroes) % MODULO)","```
import io, os
input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline
import sys

MODULO = 1000000007

def gcd(a, b):
    while b!= 0:
        a, b = b, a % b
    return a

n = int(input())

a_b = [(0, 0) for _ in range(n)]
m_b_a = [(0, 0) for _ in range(n)]

a_b_value_count = {}
m_b_a_value_count = {}

a_b_value_rep = {}
m_b_a_value_rep = {}

used = [False] * n
zeroes = 0
is_zero = [False] * n

for i in range(n):
    a, b = map(int, input().split())

    if a == 0 and b == 0:
        zeroes += 1
        used[i] = True
        is_zero[i] = True
    else:
        if a == 0:
            a_b[i] = (0, 1)
            m_b_a[i] = (1, 0)
        elif b == 0:
            a_b[i] = (1, 0)
            m_b_a[i] = (0, 1)
        else:
            neg = False
            if a * b < 0:
                neg = True
            d = gcd(abs(a), abs(b))
            a = abs(a) // d
            b = abs(b) // d

            if neg:
                a_b[i] = (-a, b)
                m_b_a[i] = (b, a)
            else:
                a_b[i] = (a, b)
                m_b_a[i] = (-b, a)

        a_b_value_count[a_b[i]] = a_b_value_count.get(a_b[i], 0) + 1
        m_b_a_value_count[m_b_a[i]] = m_b_a_value_count.get(m_b_a[i], 0) + 1
        if a_b[i] not in a_b_value_rep:
            a_b_value_rep[a_b[i]] = i
        if m_b_a[i] not in m_b_a_value_rep:
            m_b_a_value_rep[m_b_a[i]] = i

ans = 1
for i in range(n):
    if not is_zero[i] and not used[a_b_value_rep[a_b[i]]]:
        if a_b[i] not in m_b_a_value_count:
            ans *= pow(2, a_b_value_count[a_b[i]], MODULO)
            ans %= MODULO
            used[a_b_value_rep[a_b[i]]] = True
        else:
            s = a_b_value_count[a_b[i]]
            t = m_b_a_value_count[a_b[i]]
            ans *= ((1 * pow(2, s, MODULO) + 1 * pow(2, t, MODULO) - 1) % MODULO)
            ans %= MODULO

            used[a_b_value_rep[a_b[i]]] = True
            used[m_b_a_value_rep[a_b[i]]] = True

print((ans - 1 + zeroes) % MODULO)",extreme_minor,Meta-Llama-2-7b-chat,0.9841
159,python_160,Python,"# -*- coding: utf-8 -*-
import sys
sys.setrecursionlimit(10**9)
INF=10**18
MOD=10**9+7
input=lambda: sys.stdin.readline().rstrip()
YesNo=lambda b: bool([print('Yes')] if b else print('No'))
YESNO=lambda b: bool([print('YES')] if b else print('NO'))
int1=lambda x:int(x)-1

R,C,K=map(int,input().split())
V=[[0]*C for _ in range(R)]
for i in range(K):
    r,c,v=map(int,input().split())
    r-=1
    c-=1
    V[r][c]=v
dp=[[0]*C for _ in range(4)]
for y in range(R):
    for x in range(C):
        for i in range(2,-1,-1):
            dp[i+1][x]=max(dp[i+1][x],dp[i][x]+V[y][x])
        if x<C-1:
            for i in range(3,-1,-1):
                dp[i][x+1]=max(dp[i][x+1],dp[i][x])
    if y+1<R:
        MAX=0
        for x in range(C):
            for i in range(4):
                MAX=max(MAX,dp[i][x])
                dp[i][x]=0
            dp[0][x]=MAX
print(max(dp[0][-1],dp[1][-1],dp[2][-1],dp[3][-1]))","```
# -*- coding: utf-8 -*-
import sys
sys.setrecursionlimit(10**9)
INF = 10**18
MOD = 10**9 + 7
input = lambda: sys.stdin.readline().rstrip()
YesNo = lambda b: print('Yes') if b else print('No')
YESNO = lambda b: print('YES') if b else print('NO')
int1 = lambda x: int(x) - 1

R, C, K = map(int, input().split())
V = [[0] * C for _ in range(R)]
for i in range(K):
    r, c, v = map(int, input().split())
    r -= 1
    c -= 1
    V[r][c] = v

dp = [[0] * C for _ in range(4)]
for y in range(R):
    for x in range(C):
        for i in range(2, -1, -1):
            dp[i + 1][x] = max(dp[i + 1][x], dp[i][x] + V[y][x])
        if x < C - 1:
            for i in range(3, -1, -1):
                dp[i][x + 1] = max(dp[i][x + 1], dp[i][x])
    if y + 1 < R:
        MAX = 0
        for x in range(C):
            for i in range(4):
                MAX = max(MAX, dp[i][x])
                dp[i][x] = 0
        for x in range(C):
            dp[0][x] = MAX
print(max(dp[0][-1], dp[1][-1], dp[2][-1], dp[3][-1]))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8903
160,python_161,Python,"N = int(input())
for i in range(1,50001):
    if int(i * 1.08) == N:
        print(i)
        exit()
print("":("")","```
n = int(input())
for i in range(1, 50001):
    if int(i * 1.08) == n:
        print(i)
        exit()
print(':(')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8366
161,python_162,Python,"s = input()
exitLower = list(set(list(s)))
m = len(s)

for alp in exitLower:
    SL = list(s)
    cnt = 0
    while len(set(SL)) > 1:
        for i in range(len(SL)-1):
            if SL[i+1] == alp:
                SL[i] = alp
        SL.pop()
        cnt += 1
    m = min(m,cnt)

print(m)

","```
s = input()
exit_lower = list(set(s))
m = len(s)

for alp in exit_lower:
    sl = list(s)
    cnt = 0
    while len(set(sl)) > 1:
        for i in range(len(sl) - 1):
            if sl[i + 1] == alp:
                sl[i] = alp
        sl.pop()
        cnt += 1
    m = min(m, cnt)

print(m)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8307
162,python_163,Python,"n = int(input())

c, s, f = [], [], []
for _ in range(n - 1):
    temp = [int(_) for _ in input().split()]
    c.append(temp[0])
    s.append(temp[1])
    f.append(temp[2])

for i in range(n):
    answer = 0
    for j in range(i, n - 1):
        if answer < s[j]:
            answer = s[j] + c[j]
        else:
            answer = ((answer - 1) // f[j] + 1) * f[j] + c[j]
    print(answer)
","```
n = int(input())

c, s, f = [], [], []
for _ in range(n - 1):
    temp = [int(x) for x in input().split()]
    c.append(temp[0])
    s.append(temp[1])
    f.append(temp[2])

for i in range(n):
    answer = 0
    for j in range(i, n - 1):
        if answer < s[j]:
            answer = s[j] + c[j]
        else:
            answer = ((answer - 1) // f[j] + 1) * f[j] + c[j]
    print(answer)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8976
163,python_164,Python,"n,k=map(int,input().split())
a=list(map(int,input().split()))
a.sort()
for i in range(1,31):
    if 2**i>=a[-1]+1:
        num=i
        break
ans=2**(num-1)
num1=2**(num-1)
l1=[]
for i in range(num+1):
    cnt=0
    for j in range(n):
        cnt+=-(a[j]//-ans)-1
    num1=num1//2
    if cnt>k:
        ans=min(a[-1],ans+num1)
    else:
        l1.append(ans)
        ans=max(1,ans-num1)
print(min(l1))
","```
n, k = map(int, input().split())
a = list(map(int, input().split()))
a.sort()
for i in range(1, 31):
    if 2 ** i >= a[-1] + 1:
        num = i
        break
ans = 2 ** (num - 1)
num1 = 2 ** (num - 1)
l1 = []
for i in range(num + 1):
    cnt = 0
    for j in range(n):
        cnt += -(a[j] // ans) - 1
    num1 //= 2
    if cnt > k:
        ans = min(a[-1], ans + num1)
    else:
        l1.append(ans)
        ans = max(1, ans - num1)
print(min(l1))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8984
164,python_165,Python,"import sys
N, M = list(map(int, input().split()))
S = set()
B = [False] * (N + 1)
for i in range(M):
    a, b = list(map(int, input().split()))
    if a == 1:
        S.add(b)
    elif b == N:
        B[a] = True
for s in S:
    if B[s]:
        print('POSSIBLE')
        sys.exit()
print('IMPOSSIBLE')
","```
import sys

N, M = list(map(int, input().split()))
S = set()
B = [False] * (N + 1)

for i in range(M):
    a, b = map(int, input().split())
    if a == 1:
        S.add(b)
    elif b == N:
        B[a] = True

for s in S:
    if B[s]:
        print('POSSIBLE')
        sys.exit()

print('IMPOSSIBLE')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8603
165,python_166,Python,"n = int(input())
s = list(input())


v = []


stock = 0

for i in s:
    if i==""("":
        stock+=1
        v.append(""("")
    else:
        if stock ==0:
            v.insert(0,""("")
            v.append("")"")
        else:
            stock -= 1
            v.append("")"")

for i in range(stock):
    v.append("")"")

print(*v,sep='')
","```
n = int(input())
s = list(input())

v = []
stock = 0

for i in s:
    if i == ""("":
        stock += 1
        v.append(""("")
    else:
        if stock == 0:
            v.insert(0, ""("")
            v.append("")"")
        else:
            stock -= 1
            v.append("")"")

for _ in range(stock):
    v.append("")"")

print(*v, sep="""")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8695
166,python_167,Python,"N = int(input())
A = list(map(int, input().split()))

L, R = 0, 0
S = A[0]
T = A[0]

answer = 0
while L < N and R < N:
  
  if S == T:
    answer += R - L + 1
    R += 1
    if R > N - 1:
      break
    S += A[R]
    T ^= A[R]
  else:
    S -= A[L]
    T ^= A[L]
    L += 1
  #print(L, R, answer)
print(answer)","```
N = int(input())
A = list(map(int, input().split()))

L, R = 0, 0
S, T = A[0], A[0]

answer = 0
while L < N and R < N:
    if S == T:
        answer += R - L + 1
        R += 1
        if R >= N:
            break
        S += A[R]
        T ^= A[R]
    else:
        S -= A[L]
        T ^= A[L]
        L += 1
print(answer)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8815
167,python_168,Python,"import sys
import os
import math

ii = lambda: int(sys.stdin.buffer.readline().rstrip())
il = lambda: list(map(int, sys.stdin.buffer.readline().split()))
fl = lambda: list(map(float, sys.stdin.buffer.readline().split()))
iln = lambda n: [int(sys.stdin.buffer.readline().rstrip()) for _ in range(n)]

iss = lambda: sys.stdin.buffer.readline().decode().rstrip()
sl = lambda: list(map(str, sys.stdin.buffer.readline().decode().split()))
isn = lambda n: [sys.stdin.buffer.readline().decode().rstrip() for _ in range(n)]

MOD = 10 ** 9 + 7


def main():
    if os.getenv(""LOCAL""):
        sys.stdin = open(""input.txt"", ""r"")

    N = ii()
    S = iss()
    mx = S.count('R') * S.count('G') * S.count('B')
    for i in range(N):
        for j in range(i + 1, N):
            k = j + j - i
            if k < N:
                if S[i] != S[j] and S[i] != S[k] and S[j] != S[k]:
                    mx -= 1

    print(mx)


if __name__ == '__main__':
    main()
","```
import sys
import os
import math

ii = lambda: int(sys.stdin.buffer.readline().rstrip())
il = lambda: list(map(int, sys.stdin.buffer.readline().split()))
fl = lambda: list(map(float, sys.stdin.buffer.readline().split()))
iln = lambda n: [int(sys.stdin.buffer.readline().rstrip()) for _ in range(n)]

iss = lambda: sys.stdin.buffer.readline().decode().rstrip()
sl = lambda: list(map(str, sys.stdin.buffer.readline().decode().split()))
isn = lambda n: [sys.stdin.buffer.readline().decode().rstrip() for _ in range(n)]

MOD = 10**9 + 7

def main():
    if os.getenv(""LOCAL""):
        sys.stdin = open(""input.txt"", ""r"")

    N = ii()
    S = iss()
    mx = S.count('R') * S.count('G') * S.count('B')
    for i in range(N):
        for j in range(i+1, N):
            k = j+j-i
            if k < N:
                if S[i]!= S[j] and S[i]!= S[k] and S[j]!= S[k]:
                    mx -= 1

    print(mx)

if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8826
168,python_169,Python,"import numpy as np


N, M, C   = [int(i) for i in input().split()]

B = [int(i) for i in input().split()]


A = []
for i in range(N):
    A.append([int(i) for i in input().split()])

#print([N, M, C])

B = np.array(B)
#print(B)

A = np.array(A)
#print(A)


print(np.sum((np.sum(A * B, axis=1) + C) > np.array(0)))

","```
import numpy as np

N, M, C = [int(i) for i in input().split()]

B = [int(i) for i in input().split()]

A = []
for i in range(N):
    A.append([int(i) for i in input().split()])

B = np.array(B)
A = np.array(A)

print(np.sum((np.sum(A * B, axis=1) + C) > 0))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8643
169,python_170,Python,"# B - Ordinary Number

n = int(input())
p = list(int(x) for x in input().split())

ans = 0
for i in range(1, n-1):
    if (p[i-1]<p[i] and p[i]<p[i+1]) or (p[i+1]<p[i] and p[i]<p[i-1]):
        ans += 1

print(ans)","```
# B - Ordinary Number

n = int(input())
p = [int(x) for x in input().split()]

ans = 0
for i in range(1, n - 1):
    if p[i - 1] < p[i] and p[i] < p[i + 1] or p[i + 1] < p[i] and p[i] < p[i - 1]:
        ans += 1

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8543
170,python_171,Python,"X, A, B = list(map(int, input().split()))

if B-A <= 0:
    print('delicious')
elif B-A <= X:
    print('safe')
else:
    print('dangerous')","```
X, A, B = list(map(int, input().split()))

if B - A <= 0:
    print('delicious')
elif B - A <= X:
    print('safe')
else:
    print('dangerous')
```",extreme_minor,Meta-Llama-2-7b-chat,0.868
171,python_172,Python,"n = int(input())

cnt_a = 0   # Bで始まらないがAで終わる
cnt_b = 0   # Bで始まるがAで終わらない
cnt_ba = 0  # Bで始まりAで終わる

ans = 0
for _ in range(n):
    s = input()
    ans += s.count('AB')
    if s.endswith('A') and s.startswith('B'):
        cnt_ba += 1
    else:
        if s.endswith('A'):
            cnt_a += 1
        if s.startswith('B'):
            cnt_b += 1

if cnt_ba == 0:
    ans += min(cnt_a, cnt_b)
else:
    ans += cnt_ba-1
    if cnt_a > 0:
        cnt_a -= 1
        ans += 1
    if cnt_b > 0:
        cnt_b -= 1
        ans += 1
    # 残ったxxAとBxxを組み合わせてABを作る
    ans += min(cnt_a, cnt_b)

print(ans)","```
n = int(input())

cnt_a = 0   # Bで始まらないがAで終わる
cnt_b = 0   # Bで始まるがAで終わらない
cnt_ba = 0  # Bで始まりAで終わる

ans = 0
for _ in range(n):
    s = input()
    ans += s.count('AB')
    if s.endswith('A') and s.startswith('B'):
        cnt_ba += 1
    elif s.endswith('A'):
        cnt_a += 1
    elif s.startswith('B'):
        cnt_b += 1

if cnt_ba == 0:
    ans += min(cnt_a, cnt_b)
else:
    ans += cnt_ba - 1
    if cnt_a > 0:
        cnt_a -= 1
        ans += 1
    if cnt_b > 0:
        cnt_b -= 1
        ans += 1
    ans += min(cnt_a, cnt_b)

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8488
172,python_173,Python,"INF = float(""inf"")

def bellman_ford(edges, n, s):
    d = [0] + [INF] * (n-1)
    for i in range(n):
        for f, t, c in edges:
            if d[f] == INF: continue
            if d[t] > d[f] + c:
                if i == n-1: d[t] = -INF
                else: d[t] = d[f] + c
    for i in range(n):
        for f, t, c in edges:
            if d[f] == INF: continue
            d[t] = min(d[t], d[f] + c)
    return d

n, m, p = map(int, input().split())
es = [None] * m
for i in range(m):
    f, t, c = map(int, input().split())
    es[i] = (f-1, t-1, -(c-p))

d = bellman_ford(es, n, 0)
print(-1 if d[n-1] == -INF else max(0, -d[n-1]))
","```
INF = float(""inf"")

def bellman_ford(edges, n, s):
    d = [0] + [INF] * (n - 1)
    for i in range(n):
        for f, t, c in edges:
            if d[f] == INF:
                continue
            if d[t] > d[f] + c:
                if i == n - 1:
                    d[t] = -INF
                else:
                    d[t] = d[f] + c
    for i in range(n):
        for f, t, c in edges:
            if d[f] == INF:
                continue
            d[t] = min(d[t], d[f] + c)
    return d

n, m, p = map(int, input().split())
es = [None] * m
for i in range(m):
    f, t, c = map(int, input().split())
    es[i] = (f - 1, t - 1, -(c - p))

d = bellman_ford(es, n, 0)
print(-1 if d[n - 1] == -INF else max(0, -d[n - 1]))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8911
173,python_174,Python,"S = list(input())
l = len(S)

ans = 0

for bit in range(1 << (l-1)):
    # print(bit)
    f = S[0]
    for i in range(l-1):
        if bit & (1 << i):
            f += ""+""
        f += S[i+1]

    ans += sum(map(int, f.split(""+"")))
print(ans)
","```
S = list(input())
l = len(S)

ans = 0

for bit in range(1 << (l - 1)):
    f = S[0]
    for i in range(l - 1):
        if bit & (1 << i):
            f += '+'
        f += S[i + 1]

    ans += sum(map(int, f.split('+')))
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8677
174,python_175,Python,"def main():
    MOD = 10 ** 9 + 7
    N, M = list(map(int, input().split(' ')))
    S = list(map(int, input().split(' ')))
    T = list(map(int, input().split(' ')))
    dp = [[0 for _ in range(M + 1)] for _ in range(N + 1)]
    sdp = [[0 for _ in range(M + 1)] for _ in range(N + 1)]
    for n, s in enumerate(S):
        for m, t in enumerate(T):
            sdp_val = sdp[n][m]
            new_dp_val = (sdp_val + 1) if s == t else 0
            dp[n + 1][m + 1] = new_dp_val % MOD
            sdp[n + 1][m + 1] = (sdp[n][m + 1] + sdp[n + 1][m] - sdp_val + new_dp_val) % MOD
    print((sdp[N][M] + 1) % MOD)  # 1: an empty sequence


if __name__ == '__main__':
    main()","```
def main():
    MOD = 10**9 + 7
    N, M = map(int, input().split())
    S = list(map(int, input().split()))
    T = list(map(int, input().split()))
    dp = [[0] * (M + 1) for _ in range(N + 1)]
    sdp = [[0] * (M + 1) for _ in range(N + 1)]
    for n, s in enumerate(S):
        for m, t in enumerate(T):
            sdp_val = sdp[n][m]
            new_dp_val = (sdp_val + 1) if s == t else 0
            dp[n + 1][m + 1] = new_dp_val % MOD
            sdp[n + 1][m + 1] = (sdp[n][m + 1] + sdp[n + 1][m] - sdp_val + new_dp_val) % MOD
    print((sdp[N][M] + 1) % MOD)  # 1: an empty sequence

if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8614
175,python_176,Python,"n = int(input())

a = list(map(int,input().split()))
a.sort()
d = {}
for i in range(n):
    if(a[i] not in d):d[a[i]] = 1
    else:d[a[i]] += 1
if(len(d) == 1):
    if(a[0] == 0):
        print('Yes')
        exit()
elif(n%3 == 0):
    if(len(d) == 2):
        if(0 in d):
            if(d[0] == n // 3):
                print('Yes')
                exit()
    elif(len(d) == 3):
        k = list(d.keys())
        if(k[0]^k[1]^k[2] == 0):
            if(d[k[0]] == n // 3 and d[k[1]] == n // 3 and d[k[2]] == n // 3):
                print('Yes')
                exit()
print('No')","```
n = int(input())

a = list(map(int, input().split()))
a.sort()

d = {}
for i in range(n):
    if a[i] not in d:
        d[a[i]] = 1
    else:
        d[a[i]] += 1

if len(d) == 1:
    if a[0] == 0:
        print('Yes')
        exit()
elif n % 3 == 0:
    if len(d) == 2:
        if 0 in d:
            if d[0] == n // 3:
                print('Yes')
                exit()
    elif len(d) == 3:
        k = list(d.keys())
        if k[0] ^ k[1] ^ k[2] == 0:
            if d[k[0]] == n // 3 and d[k[1]] == n // 3 and d[k[2]] == n // 3:
                print('Yes')
                exit()
print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.9142
176,python_177,Python,"# ABC077b
import sys
import math
input = sys.stdin.readline
sys.setrecursionlimit(10**6)

n = int(input())
print(math.floor(math.sqrt(n))**2)
","```
# ABC077b
import sys
import math

input = sys.stdin.readline
sys.setrecursionlimit(10**6)

n = int(input())
print(math.floor(math.sqrt(n)) ** 2)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8667
177,python_178,Python,"a = int(input())
v = {}
v[a] = True
ans = 1
while True:
    ans += 1
    if a % 2 == 1:
        a = (a * 3) + 1
    else:
        a = (a//2)
    if v.get(a): 
        break
    else:
        v[a] = True
 
print(ans)
","```
a = int(input())
v = {}
v[a] = True
ans = 1
while True:
    ans += 1
    a = a % 2 and (a * 3) + 1 or a // 2
    if a in v:
        break
    else:
        v[a] = True
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8796
178,python_179,Python,"X = int(input())

if 400 <= X <= 599:
    print(8)
elif X <= 799:
    print(7)
elif X <= 999:
    print(6)
elif X <= 1199:
    print(5)
elif X <= 1399:
    print(4)
elif X <= 1599:
    print(3)
elif X <= 1799:
    print(2)
elif X <= 1999:
    print(1)
","```
x = int(input())

if 400 <= x <= 599:
    print(8)
elif 0 <= x <= 799:
    print(7)
elif 0 <= x <= 999:
    print(6)
elif 0 <= x <= 1199:
    print(5)
elif 0 <= x <= 1399:
    print(4)
elif 0 <= x <= 1599:
    print(3)
elif 0 <= x <= 1799:
    print(2)
elif 0 <= x <= 1999:
    print(1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8764
179,python_180,Python,"n,*cc = map(int, open(0).read().split())
MOD = 10**9+7

from collections import defaultdict
d = {}
dp = defaultdict(lambda: 1)

for i,c in enumerate(cc):
    dp[i] = dp[i-1]
    if c in d:
        j = d[c]
        if i - j > 1:
            dp[i] += dp[j]
            dp[i] %= MOD
    d[c] = i

print(dp[n-1])","```
n, *cc = map(int, open(0).read().split())
MOD = 10**9 + 7

from collections import defaultdict
d = {}
dp = defaultdict(lambda: 1)

for i, c in enumerate(cc):
    dp[i] = dp[i - 1]
    if c in d:
        j = d[c]
        if i - j > 1:
            dp[i] += dp[j]
            dp[i] %= MOD
    d[c] = i

print(dp[n - 1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8632
180,python_181,Python,"n, l = map(int, input().split())
s_l = [ str(input()) for _ in range(n)  ]
s_l = sorted(s_l)
print(''.join(s_l))","```
n, l = map(int, input().split())
s_l = [str(input()) for _ in range(n)]
s_l = sorted(s_l)
print(''.join(s_l))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8564
181,python_182,Python,"N, M = map(int, input().split())
S = input()

steps = [[] for i in range(N+1)]
steps[0] = [0]
num_steps = 0
root = [0] + [-1]*N
pos = 1

while pos <= N:
  starts = steps[num_steps]
  if not starts:
    break
  for start in starts:
    end = min(start+M+1, N+1)
    for i in range(pos, end):
      if S[i] == '0':
        steps[num_steps+1].append(i)
        root[i] = start
    
    pos = end
  
  num_steps += 1


if root[N] == -1:
  ans = -1
else:
  pos = N
  ans = []
  while pos > 0:
    pre_pos = root[pos]
    ans.append(str(pos - pre_pos))
    pos = pre_pos
  
  ans = ans[::-1]
  ans = ' '.join(ans)


print(ans)","```
N, M = map(int, input().split())
S = input()

steps = [[] for _ in range(N + 1)]
steps[0] = [0]
num_steps = 0
root = [0] + [-1] * N
pos = 1

while pos <= N:
    starts = steps[num_steps]
    if not starts:
        break
    for start in starts:
        end = min(start + M + 1, N + 1)
        for i in range(pos, end):
            if S[i] == '0':
                steps[num_steps + 1].append(i)
                root[i] = start
        pos = end
    num_steps += 1

if root[N] == -1:
    ans = -1
else:
    pos = N
    ans = []
    while pos > 0:
        pre_pos = root[pos]
        ans.append(str(pos - pre_pos))
        pos = pre_pos
    ans = ans[::-1]
    ans =''.join(ans)

print(ans)",extreme_minor,Meta-Llama-2-7b-chat,0.9907
182,python_183,Python,"N,K =map(int, input().split())
V=list(map(int, input().split()))
res=0
for l in range(K+1):
    for r in range(K+1-l):
        if l+r>N: continue
        t=V[:l]+V[N-r:]
        t.sort()
        S=sum(t)
        for c in range(min(K-l-r,l+r)):
            if t[c]<0:
                S-=t[c]
        res=max(res,S)
print(res)","```
N, K = map(int, input().split())
V = list(map(int, input().split()))
res = 0
for l in range(K + 1):
    for r in range(K + 1 - l):
        if l + r > N:
            continue
        t = V[:l] + V[N - r:]
        t.sort()
        S = sum(t)
        for c in range(min(K - l - r, l + r)):
            if t[c] < 0:
                S -= t[c]
        res = max(res, S)
print(res)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8098
183,python_184,Python,"a, b, x = map(int, input().split())

print(b // x - (a-1)// x)","```
a, b, x = map(int, input().split())

print((b // x) - ((a-1) // x))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8029
184,python_185,Python,"def main(a,b):
  if (a*b) % 2 == 0:
    print('Even')
  else:
    print('Odd')

a,b = map(int, input().split())
main(a,b)","```
def main(a, b):
  if (a * b) % 2 == 0:
    print('Even')
  else:
    print('Odd')

a, b = map(int, input().split())
main(a, b)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8532
185,python_186,Python,"n, r = map(int, input().split())
if n < 10:
  r += 100*(10-n)
print(r)","```
n, r = map(int, input().split())
if n < 10:
    r += 100 * (10 - n)
print(r)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8735
186,python_187,Python,"n,m,l=map(int,input().split())
g=[[999999999999 if i!=j else 0 for j in range(n)] for i in range(n)]
for i in range(m):
    a,b,c=map(int,input().split())
    a,b=a-1,b-1
    if c>l:
        continue
    g[a][b]=c
    g[b][a]=c

for k in range(n):
    for i in range(n):
        for j in range(n):
            if g[i][j]>g[i][k]+g[k][j]:
                g[i][j] = g[i][k]+g[k][j]

for i in range(n):
    for j in range(n):
        if g[i][j]<=l:
            g[i][j]=1

for k in range(n):
    for i in range(n):
        for j in range(n):
            if g[i][j]>g[i][k]+g[k][j]:
                g[i][j] = g[i][k]+g[k][j]

for i in range(int(input())):
    s,t=map(int,input().split())
    s-=1
    t-=1
    print(g[s][t]-1 if g[s][t]-1<99999999999 else -1)

","```
n, m, l = map(int, input().split())
g = [[999999999999 if i!= j else 0 for j in range(n)] for i in range(n)]
for i in range(m):
    a, b, c = map(int, input().split())
    a, b = a - 1, b - 1
    if c > l:
        continue
    g[a][b] = c
    g[b][a] = c

for k in range(n):
    for i in range(n):
        for j in range(n):
            if g[i][j] > g[i][k] + g[k][j]:
                g[i][j] = g[i][k] + g[k][j]

for i in range(n):
    for j in range(n):
        if g[i][j] <= l:
            g[i][j] = 1

for k in range(n):
    for i in range(n):
        for j in range(n):
            if g[i][j] > g[i][k] + g[k][j]:
                g[i][j] = g[i][k] + g[k][j]

for _ in range(int(input())):
    s, t = map(int, input().split())
    s -= 1
    t -= 1
    print(g[s][t] - 1 if g[s][t] - 1 < 99999999999 else -1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9295
187,python_188,Python,"import numpy as np

H,N = list(map(int, input().split()))
As = []
Bs = []
for _ in range(N):
    a, b = list(map(int, input().split()))
    As.append(a)
    Bs.append(b)
As = np.array(As)
Bs = np.array(Bs)

dp = np.full((H+1), np.inf)
dp[0] = 0

for c in range(1,H+1):
    dp[c] = np.amin(dp[np.maximum(c - As, 0)] + Bs)

print(int(dp[-1]))
","```
import numpy as np

H, N = map(int, input().split())
As = []
Bs = []
for _ in range(N):
    a, b = map(int, input().split())
    As.append(a)
    Bs.append(b)
As = np.array(As)
Bs = np.array(Bs)

dp = np.full(H + 1, np.inf)
dp[0] = 0

for c in range(1, H + 1):
    dp[c] = np.min(dp[np.maximum(c - As, 0)] + Bs)

print(int(dp[-1]))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8753
188,python_189,Python,"x = input()
a = input()
b = input()
print (x - a) % b","```
x = int(input())
a = int(input())
b = int(input())
print((x - a) % b)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7909
189,python_190,Python,"n,k=map(int,input().split())
ans=[i for i in range(n+1)]
cnt=0
mod=10**9+7
for i in range(k,n+2):
    x=(n-i+1)*i+1
    # sum_1=sum(ans[0:i])
    # sum_2=sum(ans[n-i+1:n+1])
    # print(sum_2)
    # print(sum_1)
    # x=sum_2-sum_1+1
    cnt+=x
print(cnt%mod)

","```
n, k = map(int, input().split())
ans = [i for i in range(n + 1)]
cnt = 0
mod = 10**9 + 7
for i in range(k, n + 2):
    x = (n - i + 1) * i + 1
    cnt += x
print(cnt % mod)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7904
190,python_191,Python,"from itertools import combinations_with_replacement

def main():
    n, m, q = map(int, input().split())
    abcd = [[int(i) for i in input().split()] for _ in range(q)]
    s = 0
    for p in combinations_with_replacement(range(1, m + 1), n):
        t = 0
        for a, b, c, d in abcd:
            t += d * (p[b - 1] - p[a - 1] == c)
        s = max(s, t)
    print(s)

if __name__ == '__main__':
    main()","```
from itertools import combinations_with_replacement

def main():
    n, m, q = map(int, input().split())
    abcd = [[int(i) for i in input().split()] for _ in range(q)]
    s = 0
    for p in combinations_with_replacement(range(1, m + 1), n):
        t = sum(d * ((p[b - 1] - p[a - 1]) == c) for a, b, c, d in abcd)
        s = max(s, t)
    print(s)

if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8762
191,python_192,Python,"N,K = map(int, input().split())

MOD = 998244353

PAT = []
for _ in range(K):
  l,r = map(int, input().split())
  PAT.append((l,r))
  
IMOS = [0] * (N+10)
IMOS[1] = 1
for i in range(0,N):
  if IMOS[i] == 0:
    continue
  for l,r in PAT:
    if i+l > N+1:
      continue
    IMOS[i+l] += IMOS[i]
    if i+r-1 > N+1:
      continue
    IMOS[i+r+1] -= IMOS[i]
  #print(i, IMOS)
  IMOS[i+1] += IMOS[i]
  IMOS[i+1] %= MOD
  
print((IMOS[N] - IMOS[N-1]) % MOD)
    ","```
N, K = map(int, input().split())

MOD = 998244353

PAT = []
for _ in range(K):
    l, r = map(int, input().split())
    PAT.append((l, r))

IMOS = [0] * (N + 10)
IMOS[1] = 1
for i in range(N):
    if IMOS[i] == 0:
        continue
    for l, r in PAT:
        if i + l > N + 1:
            continue
        IMOS[i + l] += IMOS[i]
        if i + r - 1 > N + 1:
            continue
        IMOS[i + r + 1] -= IMOS[i]
    IMOS[i + 1] += IMOS[i]
    IMOS[i + 1] %= MOD

print((IMOS[N] - IMOS[N - 1]) % MOD)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9249
192,python_193,Python,"N = int(input())
a = [int(x) for x in input().split()]

cnt = 0
for i in range(N):
    if a[i] % 2 == 0:
        if a[i] % 3 != 0 and a[i] % 5 != 0:
            cnt = 1

if cnt == 1:
    print(""DENIED"")
else:
    print(""APPROVED"")","```
N = int(input())
a = [int(x) for x in input().split()]

cnt = 0
for i in range(N):
    if a[i] % 2 == 0 and (a[i] % 3!= 0 or a[i] % 5!= 0):
        cnt = 1

if cnt == 1:
    print(""DENIED"")
else:
    print(""APPROVED"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8764
193,python_194,Python,"n,m = map(int,input().split())
mod = 10**9 + 7
l = n+1000
fac = [1]*l
facr = [1]*l

for i in range(l-1):
    fac[i+1] = fac[i]*(i+1)%mod
facr[l-1] = pow(fac[l-1],mod - 2,mod)
for i in range(1,l)[::-1]:
    facr[i-1] = facr[i]*i%mod

def combi(N,K):
    return fac[N]*facr[N-K]%mod*facr[K]%mod

prime = {}
i = 2
x = m
while i*i <= m:
    if x%i == 0:
        prime[i] = 0
        while x%i == 0:
            x = x//i
            prime[i] += 1
    i += 1
if x > 1:
    prime[x] = 1
ans = 1
for q in prime.values():
    ans *= combi(q+n-1,n-1)
    ans %= mod
print(ans)
","```
n, m = map(int, input().split())
mod = 10**9 + 7
l = n + 1000
fac = [1] * l
facr = [1] * l

for i in range(l - 1):
    fac[i + 1] = fac[i] * (i + 1) % mod

facr[l - 1] = pow(fac[l - 1], mod - 2, mod)

for i in range(1, l)[::-1]:
    facr[i - 1] = facr[i] * i % mod

def combi(N, K):
    return fac[N] * facr[N - K] % mod * facr[K] % mod

prime = {}
i = 2
x = m
while i * i <= m:
    if x % i == 0:
        prime[i] = prime.get(i, 0)
        while x % i == 0:
            x = x // i
            prime[i] += 1
    i += 1

if x > 1:
    prime[x] = prime.get(x, 0) + 1

ans = 1
for q in prime.values():
    ans *= combi(q + n - 1, n - 1)
    ans %= mod

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8578
194,python_195,Python,"h, w, k = (int(x) for x in input().split())
S = [input() for _ in range(h)]

ans = 10**18
for bit in range(1<<(h - 1)):
    segment = [0] * h
    seg_label = 0
    for i in range(h - 1):
        if bit & (1<<i):
            seg_label += 1
        segment[i + 1] = seg_label
    n = max(segment) + 1

    count = n - 1
    k_count = [0] * n
    for j in range(w):
        tmp_count = [0] * n
        for i in range(h):
            k_count[segment[i]] += int(S[i][j])
            tmp_count[segment[i]] += int(S[i][j])
            if k_count[segment[i]] > k:
                count += 1
                for seg in range(n):
                    k_count[seg] = tmp_count[seg]

    ans = min(ans, count)

print(ans)
","```
h, w, k = (int(x) for x in input().split())
S = [input() for _ in range(h)]

ans = 10**18
for bit in range(1 << (h - 1)):
    segment = [0] * h
    seg_label = 0
    for i in range(h - 1):
        if bit & (1 << i):
            seg_label += 1
        segment[i + 1] = seg_label
    n = max(segment) + 1

    count = n - 1
    k_count = [0] * n
    for j in range(w):
        tmp_count = [0] * n
        for i in range(h):
            k_count[segment[i]] += int(S[i][j])
            tmp_count[segment[i]] += int(S[i][j])
            if k_count[segment[i]] > k:
                count += 1
                for seg in range(n):
                    k_count[seg] = tmp_count[seg]

    ans = min(ans, count)

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8829
195,python_196,Python,"mod=10**9+7
import math
import sys
from collections import deque
import heapq
import copy
import itertools
from itertools import permutations
from itertools import combinations
import bisect
def mi() : return map(int,sys.stdin.readline().split())
def ii() : return int(sys.stdin.readline().rstrip())
def i() : return sys.stdin.readline().rstrip()
a=ii()
l=[list(mi()) for _ in range(3)]
ans=0
for i in range(a-1):
  ans+=l[1][l[0][i]-1]
  if l[0][i]+1==l[0][i+1]:
    ans+=l[2][l[0][i]-1]
print(ans+l[1][l[0][a-1]-1])","```
mod = 10**9 + 7
import math
import sys
from collections import deque
import heapq
import copy
import itertools
from itertools import permutations
from itertools import combinations
import bisect

def mi(): return map(int, sys.stdin.readline().split())
def ii(): return int(sys.stdin.readline().rstrip())
def i(): return sys.stdin.readline().rstrip()

a = ii()
l = [list(mi()) for _ in range(3)]
ans = 0
for i in range(a - 1):
    ans += l[1][l[0][i] - 1]
    if l[0][i] + 1 == l[0][i + 1]:
        ans += l[2][l[0][i] - 1]
print(ans + l[1][l[0][a - 1] - 1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.915
196,python_197,Python,"n, m = map(int, input() .split())

if n >= m//2:
	ans = m//2
else:
	ans = n + (m - 2 * n) // 4

print(ans)","```
n, m = map(int, input().split())

if n >= m // 2:
    ans = m // 2
else:
    ans = n + (m - 2 * n) // 4

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8586
197,python_198,Python,"import sys
sys.setrecursionlimit(10**9)

N,K = map(int,input().split())
edge = [[] for i in range(N)]
for i in range(N-1) :
    u,v = map(lambda x: int(x)-1, input().split())
    edge[u].append(v)
    edge[v].append(u)

deg = [len(E) for E in edge]

MOD = 10**9 + 7
u = 10**5 + 1

fact = [1] * (u+1)
for i in range(1, len(fact)) :
    fact[i] = (fact[i-1] * i) % MOD

fact_inv = [1] * (u+1)
fact_inv[u] = pow(fact[u], MOD-2, MOD)
for i in range(u-1,0,-1) :
    fact_inv[i] = (fact_inv[i+1] * (i+1)) % MOD

def perm(n, r) :
    if r < 0 or n < r :
        return 0
    return (fact[n] * fact_inv[n-r]) % MOD

def F(node, parent=None) :
    if parent is None :
        res = perm(K, deg[node] + 1)
    else :
        res = perm(K-2, deg[node] - 1)
    
    for next_node in edge[node] :
        if next_node == parent :
            continue
        
        res *= F(next_node, parent=node)
        res %= MOD
    return res

ans = F(0, parent=None)

print(ans)
","```
import sys
sys.setrecursionlimit(10**9)

N, K = map(int, input().split())
edge = [[] for _ in range(N)]
for i in range(N-1):
    u, v = map(lambda x: int(x)-1, input().split())
    edge[u].append(v)
    edge[v].append(u)

deg = [len(E) for E in edge]

MOD = 10**9 + 7
u = 10**5 + 1

fact = [1] * (u+1)
for i in range(1, len(fact)):
    fact[i] = (fact[i-1] * i) % MOD

fact_inv = [1] * (u+1)
fact_inv[u] = pow(fact[u], MOD-2, MOD)
for i in range(u-1, 0, -1):
    fact_inv[i] = (fact_inv[i+1] * (i+1)) % MOD

def perm(n, r):
    if r < 0 or n < r:
        return 0
    return (fact[n] * pow(fact_inv[n-r], MOD-2, MOD)) % MOD

def F(node, parent=None):
    if parent is None:
        res = perm(K, deg[node] + 1)
    else:
        res = perm(K-2, deg[node] - 1)
    
    for next_node in edge[node]:
        if next_node == parent:
            continue
        
        res *= F(next_node, parent=node)
        res %= MOD
    return res

ans = F(0, parent=None)

print(ans)",extreme_minor,Meta-Llama-2-7b-chat,0.987
198,python_199,Python,"# O(M + 4^N) 解
# 参考: https://twitter.com/ei1333/status/1177951676818325504

import sys
input = sys.stdin.readline
N, M = map(int, input().split())
dp = [float(""inf"")] * (1<<N)
for _ in range(M):
    a, _ = map(int, input().split())
    C = list(map(int, input().split()))
    s = 0
    for c in C:
        s |= 1 << c-1
    dp[s] = min(dp[s], a)
for i in range(1<<N):
    for j in range(1<<N):
        dp[i|j] = min(dp[i|j], dp[i]+dp[j])
ans = dp[-1]
print(ans if ans!=float(""inf"") else -1)
","```
# O(M + 4^N) 解
# 参考: https://twitter.com/ei1333/status/1177951676818325504

import sys
input = sys.stdin.readline
N, M = map(int, input().split())
dp = [float('inf')] * (1 << N)
for _ in range(M):
    a, _ = map(int, input().split())
    C = list(map(int, input().split()))
    s = 0
    for c in C:
        s |= 1 << c - 1
    dp[s] = min(dp[s], a)
for i in range(1 << N):
    for j in range(1 << N):
        dp[i | j] = min(dp[i | j], dp[i] + dp[j])
ans = dp[-1]
print(ans if ans!= float('inf') else -1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8966
199,python_200,Python,"N = int(input())
A = list(map(int, input().split()))
seki = 1
if A.count(0) == 0:
    for i in range(N):
        seki = seki*A[i]
        if seki > 10**18:
            seki = -1
            break
else:
    seki = 0
print(seki)","```
n = int(input())
a = list(map(int, input().split()))
seki = 1
if a.count(0) == 0:
    for i in range(n):
        seki *= a[i]
        if seki > 10**18:
            seki = -1
            break
else:
    seki = 0
print(seki)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8613
200,python_201,Python,"a, b = map(int, input().split())
a = a + 13 if a == 1 else a
b = b + 13 if b == 1 else b
print('Alice' if a > b else 'Bob' if a < b else 'Draw')","```
a, b = map(int, input().split())
a = a + 13 if a == 1 else a
b = b + 13 if b == 1 else b
print('Alice' if a > b else 'Bob' if a < b else 'Draw')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8551
201,python_202,Python,"n = int(input())
s = input()

check_list = [ [ 0 for i in range(n) ] for i in range(n) ]


ans = 0
for i in range(n-1):
    for j in range(i+1,n):
        if check_list[i][j] == 0:
            p = 0
            for k in range(min(j-i,n-1-j+1)):
                if s[i+k] == s[j+k]:
                    p += 1
                else:
                    break
            for k in range(1,p):
                check_list[i+k][j+k] = p - k
        ans = max(ans,p)

print(ans)
","```
n = int(input())
s = input()

check_list = [[0 for _ in range(n)] for _ in range(n)]

ans = 0
for i in range(n - 1):
    for j in range(i + 1, n):
        if check_list[i][j] == 0:
            p = 0
            for k in range(min(j - i, n - 1 - j + 1)):
                if s[i + k] == s[j + k]:
                    p += 1
                else:
                    break
            for k in range(1, p):
                check_list[i + k][j + k] = p - k
        ans = max(ans, p)

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8872
202,python_203,Python,"import sys

N, M = list(map(int, input().split()))
if M == 0:
  h = []
else:
  h = sys.stdin.readlines()
  h = set(map(int, list(set(h))))

if N==1:
  print(1)
elif N==2:
  if M==1:
    print(1)
  else:
    print(2)
else:
  DP = []
  DP.append(1)
  if 1 in h:
    DP.append(-1)
  else:
    DP.append(1)
  for i in range(2,N+1):
    if DP[i-2]<0 and DP[i-1]<0:
      print(0)
      exit()
    DP.append(0)
    if i in h:
      DP[i] = -1
    else:
      if DP[i-1]>=0:
        DP[i] += DP[i-1]
      if DP[i-2]>=0:
        DP[i] += DP[i-2]
      DP[i] = DP[i] % 1000000007
  print(int(DP[N]))","```
import sys

N, M = list(map(int, input().split()))
if M == 0:
    h = []
else:
    h = set(map(int, (line.strip() for line in sys.stdin.readlines())))

if N == 1:
    print(1)
elif N == 2:
    if M == 1:
        print(1)
    else:
        print(2)
else:
    DP = [0] * (N + 1)
    DP[0] = 1
    if 1 in h:
        DP[1] = -1
    else:
        DP[1] = 1
    for i in range(2, N + 1):
        if DP[i - 2] < 0 and DP[i - 1] < 0:
            print(0)
            exit()
        DP[i] = (DP[i - 1] + DP[i - 2]) % 1000000007
        if i in h:
            DP[i] = -1
    print(DP[N])
```",extreme_minor,Meta-Llama-2-7b-chat,0.9089
203,python_204,Python,"D, T, S = map(int, input().split())
if D//S == T and D % S == 0:
  print(""Yes"")
elif D//S<T:
  print(""Yes"")
else:
  print(""No"")
","```
D, T, S = map(int, input().split())
if D // S == T and D % S == 0:
    print(""Yes"")
elif D // S < T:
    print(""Yes"")
else:
    print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8526
204,python_205,Python,"k, t = list(map(int, input().split()))
a = list(map(int, input().split()))

largest = max(a)
print(max(largest-(k-largest+1), 0))","```
k, t = list(map(int, input().split()))
a = list(map(int, input().split()))

largest = max(a)
print(max(largest - (k - largest + 1), 0))
```",extreme_minor,Meta-Llama-2-7b-chat,0.7376
205,python_206,Python,"import heapq

N,M = map(int,(input().split()))
A = [0]*N
B = [0]*N
mission = [[] for _ in range(M+1)]
work = 0

for i in range(N):
    if i <= M:
        heapq.heapify(mission[i])
    A[i],B[i] = map(int,(input().split()))
    if A[i] <= M:
        mission[A[i]].append(-B[i])

for day in range(1,M+1):
    for i in range(len(mission[day])):
        heapq.heappush(mission[0],mission[day][i])
    if mission[0]:
        work += heapq.heappop(mission[0])

print(-work)","```
import heapq

N, M = map(int, input().split())
A = [0] * N
B = [0] * N
mission = [[] for _ in range(M + 1)]
work = 0

for i in range(N):
    if i <= M:
        heapq.heapify(mission[i])
    A[i], B[i] = map(int, input().split())
    if A[i] <= M:
        heapq.heappush(mission[A[i]], -B[i])

for day in range(1, M + 1):
    for i in range(len(mission[day])):
        heapq.heappush(mission[0], mission[day][i])
    while mission[0]:
        work -= heapq.heappop(mission[0])

print(work)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9329
206,python_207,Python,"from collections import Counter
H, W, M = map(int, input().split())
YX = [tuple(map(int, input().split())) for i in range(M)]
yx_set = set(YX)

xc = Counter()
yc = Counter()

for y, x in YX:
    yc[y] += 1
    xc[x] += 1

ans = 0
for y, x in YX:
    ans = max(ans, yc[y] + xc[x] - 1)

xmc = xc.most_common()
ymc = yc.most_common()
xmx = xmc[0][1]
ymx = ymc[0][1]
for xk, xv in xmc:
    if xv < xmx:
        break
    for yk, yv in ymc:
        if yv < ymx:
            break
        if (yk, xk) in yx_set:
            continue
        ans = max(ans, yv + xv)
        break
print(ans)
","```
from collections import Counter
H, W, M = map(int, input().split())
YX = [tuple(map(int, input().split())) for _ in range(M)]
yx_set = set(YX)

xc = Counter()
yc = Counter()

for y, x in YX:
    yc[y] += 1
    xc[x] += 1

ans = 0
for y, x in YX:
    ans = max(ans, yc[y] + xc[x] - 1)

xmc = xc.most_common()
ymc = yc.most_common()
xmx = xmc[0][1]
ymx = ymc[0][1]
for xk, xv in xmc:
    if xv < xmx:
        break
    for yk, yv in ymc:
        if yv < ymx:
            break
        if (yk, xk) in yx_set:
            continue
        ans = max(ans, yv + xv)
        break
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8985
207,python_208,Python,"from pprint import pprint
from collections import deque

import sys

n, q = map(int, sys.stdin.readline().strip().split("" ""))
edges = [[] for _ in range(n)]
for _ in range(n-1):
    a_i, b_i = map(int, sys.stdin.readline().strip().split("" ""))
    edges[a_i-1].append(b_i-1)
    edges[b_i-1].append(a_i-1)

counter = [0] * n
p = [0] * n
for _ in range(q):
    p_i, x_i = map(int, sys.stdin.readline().strip().split("" ""))
    counter[p_i-1] += x_i


parents = deque()
parents.append(0)
visited = set()
while parents:
    parent = parents.popleft()
    if parent in visited:
        continue
    visited.add(parent)
    for child in edges[parent]:
        if child in visited:
            continue
        counter[child] += counter[parent]
        parents.append(child)

print("" "".join(list(map(str, counter))))","```
from pprint import pprint
from collections import deque

import sys

n, q = map(int, sys.stdin.readline().strip().split())
edges = [[] for _ in range(n)]
for _ in range(n-1):
    a_i, b_i = map(int, sys.stdin.readline().strip().split())
    edges[a_i-1].append(b_i-1)
    edges[b_i-1].append(a_i-1)

counter = [0] * n
p = [0] * n
for _ in range(q):
    p_i, x_i = map(int, sys.stdin.readline().strip().split())
    counter[p_i-1] += x_i

parents = deque()
parents.append(0)
visited = set()
while parents:
    parent = parents.popleft()
    if parent in visited:
        continue
    visited.add(parent)
    for child in edges[parent]:
        if child in visited:
            continue
        counter[child] += counter[parent]
        parents.append(child)

print(' '.join(map(str, counter)))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8586
208,python_209,Python,"from fractions import gcd
N=int(input())
A=list(map(int,input().split(' ')))
ans = 0
l_1 = 1
l_2 = 1
mod = 10**9+7
def lcm(x,y):
    return x*y//gcd(x,y)
for i in A[:N//2]:
    l_1 = lcm(l_1,i)
for j in A[N//2:]:
    l_2 = lcm(l_2,j)
l = lcm(l_1,l_2)
out1 = sum([l_1//i for i in A[:N//2]])
out2 = sum([l_2//i for i in A[N//2:]])
out1 *= l//l_1
out2 *= l//l_2
print((out1+out2)%mod)","```
from fractions import gcd
N = int(input())
A = list(map(int, input().split()))
ans = 0
l1 = 1
l2 = 1
mod = 10**9 + 7
def lcm(x, y):
    return x * y // gcd(x, y)
for i in A[:N//2]:
    l1 = lcm(l1, i)
for j in A[N//2:]:
    l2 = lcm(l2, j)
l = lcm(l1, l2)
out1 = sum([l1//i for i in A[:N//2]])
out2 = sum([l2//i for i in A[N//2:]])
out1 *= l // l1
out2 *= l // l2
print((out1 + out2) % mod)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9036
209,python_210,Python,"N, A, B = map(int, input().split())
hs = [int(input()) for i in range(N)]

INF = int(1e9)
l, m, r = 0, INF//2, INF + 1

def calc(n):
    global N, A, B
    d = A - B
    remain = n
    for h in hs:
        tmp = h - B * n
        if tmp > 0:
            remain -= (tmp + d - 1) // d
    return remain >= 0

while r - l > 1:
    if calc(m):
        r = m
    else:
        l = m
    m = (r + l + 1) // 2

print(m)","```
N, A, B = map(int, input().split())
hs = [int(input()) for _ in range(N)]

INF = int(1e9)
l, m, r = 0, INF // 2, INF + 1

def calc(n):
    global N, A, B
    d = A - B
    remain = n
    for h in hs:
        tmp = h - B * n
        if tmp > 0:
            remain -= (tmp + d - 1) // d
    return remain >= 0

while r - l > 1:
    if calc(m):
        r = m
    else:
        l = m
    m = (l + r) // 2

print(m)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8964
210,python_211,Python,"a,b,c,d=map(int,input().split())
print(b+c-d,-a+c+d,a+b-d,-a+b+c)","```
a, b, c, d = map(int, input().split())
print(b + c - d, -a + c + d, a + b - d, -a + b + c)",extreme_minor,Meta-Llama-2-7b-chat,0.9
211,python_212,Python,"N = input()
if N[0] == N[2]:
  print('Yes')
else:
  print('No')","```
n = input()
if n[0] == n[2]:
    print('Yes')
else:
    print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8533
212,python_213,Python,"N,A,B = map(int,input().split())
X = list(map(int,input().split()))

ans = 0
for i in range(1,N):
    if (X[i]-X[i-1])*A > B:
        ans += B
    else:
        ans += (X[i]-X[i-1])*A
print(ans)","```
N, A, B = map(int, input().split())
X = list(map(int, input().split()))

ans = 0
for i in range(1, N):
    if (X[i] - X[i - 1]) * A > B:
        ans += B
    else:
        ans += (X[i] - X[i - 1]) * A
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8738
213,python_214,Python,"s = input()
n = len(s)
k = int(input())
dp = [[[0 for _ in range(2)] for _ in range(k + 1)] for _ in range(n + 1)]
dp[0][0][0] = 1

for a in range(n):
  for b in range(k + 1):
    for c in range(2):
      nd = int(s[a])
      for d in range(10):
        na, nb, nc = a + 1, b, c
        if d != 0:
          nb += 1
        if nb > k:
          break
        if nc == 0:
          if d < nd:
            nc = 1
          if d > nd:
            break
        dp[na][nb][nc] += dp[a][b][c]
print(sum(dp[-1][-1]))","```
s = input()
n = len(s)
k = int(input())
dp = [[[0 for _ in range(2)] for _ in range(k + 1)] for _ in range(n + 1)]
dp[0][0][0] = 1

for a in range(n):
    for b in range(k + 1):
        for c in range(2):
            nd = int(s[a])
            for d in range(10):
                na, nb, nc = a + 1, b, c
                if d!= 0:
                    nb += 1
                if nb > k:
                    break
                if nc == 0:
                    if d < nd:
                        nc = 1
                    if d > nd:
                        break
                dp[na][nb][nc] += dp[a][b][c]

print(sum(dp[-1][-1]))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8999
214,python_215,Python,"n,u,v=map(int,input().split())
anss=0
u-=1
v-=1
d=[[]for _ in range(n)]
inf=float('inf')
aoki=[inf]*n
for i in range(n-1):
  a,b=map(int,input().split())
  a-=1
  b-=1
  d[a].append(b)
  d[b].append(a)
Q=d[v]
aoki[v]=0
dis=1
visited={v}
while Q:
  P=[]
  for i in Q:
    visited.add(i)
    for j in d[i]:
      if j not in visited:P.append(j)
    aoki[i]=dis
  dis+=1
  Q=P
Q=d[u]
chokudai=[-1]*n
chokudai[u]=0
dis=1
visited={u}
point=-1
while Q:
  P=[]
  for i in Q:
    visited.add(i)
    for j in d[i]:
      if aoki[j]<=dis+1:
        if aoki[j]==dis+1:anss=1
        if point<0:point=i
        continue
      if j not in visited:P.append(j)
    chokudai[i]=dis
  dis+=1
  Q=P
Q=d[point]
dis=chokudai[point]+1
visited={point}
while Q:
  P=[]
  for i in Q:
    visited.add(i)
    if chokudai[i]==-1:continue
    chokudai[i]=max(dis,chokudai[i])
    for j in d[i]:
      if j not in visited:P.append(j)
  dis+=1
  Q=P
ans=0
for i in range(n):
  if aoki[i]>chokudai[i]:ans=max(ans,chokudai[i])
print(ans+anss)
#print(aoki)
#print(chokudai)","```
n, u, v = map(int, input().split())
anss = 0
u -= 1
v -= 1
d = [[] for _ in range(n)]
inf = float('inf')
aoki = [inf] * n
for i in range(n - 1):
    a, b = map(int, input().split())
    a -= 1
    b -= 1
    d[a].append(b)
    d[b].append(a)
Q = d[v]
aoki[v] = 0
dis = 1
visited = {v}
while Q:
    P = []
    for i in Q:
        visited.add(i)
        for j in d[i]:
            if j not in visited:
                P.append(j)
        aoki[i] = dis
    dis += 1
    Q = P
Q = d[u]
chokudai = [-1] * n
chokudai[u] = 0
dis = 1
visited = {u}
point = -1
while Q:
    P = []
    for i in Q:
        visited.add(i)
        for j in d[i]:
            if aoki[j] <= dis + 1:
                if aoki[j] == dis + 1:
                    anss = 1
                if point < 0:
                    point = i
                continue
            if j not in visited:
                P.append(j)
        chokudai[i] = dis
    dis += 1
    Q = P
Q = d[point]
dis = chokudai[point] + 1
visited = {point}
while Q:
    P = []
    for i in Q:
        visited.add(i)
        if chokudai[i] == -1:
            continue
        chokudai[i] = max(dis, chokudai[i])
        for j in d[i]:
            if j not in visited:
                P.append(j)
    dis += 1
    Q = P
ans = 0
for i in range(n):
    if aoki[i] > chokudai[i]:
        ans = max(ans, chokudai[i])
print(ans + anss)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9683
215,python_216,Python,"import sys

N, Y = map(int,input().split())

for x in range(N+1):
    if x*10000 > Y:
        break
    for y in range(N+1-x):
        z = N - (x + y)
        if (x*10000 + y*5000 + z*1000) == Y:
            print(x,y,z)
            sys.exit()

print(-1,-1,-1)
","```
import sys

N, Y = map(int, input().split())

for x in range(N + 1):
    if x * 10000 > Y:
        break
    for y in range(N + 1 - x):
        z = N - (x + y)
        if x * 10000 + y * 5000 + z * 1000 == Y:
            print(x, y, z)
            sys.exit()

print(-1, -1, -1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8389
216,python_217,Python,"import sys
read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines

MOD = 10**9+7

fac = [1, 1]
f_inv = [1, 1]
inv = [0, 1]

def prepare(n, mod):
    for i in range(2, n+1):
        fac.append((fac[-1] * i) % mod)
        inv.append((-inv[mod % i] * (mod//i)) % mod)
        f_inv.append((f_inv[-1] * inv[-1]) % mod)


def modcmb(n, r, mod):
    if n < 0 or r < 0 or r > n:
        return 0

    return fac[n] * f_inv[r] * f_inv[n-r] % mod


def main():
    N,K = map(int, readline().split())

    prepare(N, MOD)

    ans = 0
    for i in range(min(N-1, K)+1):
        ans += modcmb(N, i, MOD) * modcmb(N-1, i, MOD)
        ans %= MOD

    print(ans)


if __name__ == ""__main__"":
    main()
","```
import sys

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines

MOD = 10**9 + 7

fac = [1, 1]
f_inv = [1, 1]
inv = [0, 1]

def prepare(n, mod):
    for i in range(2, n + 1):
        fac.append((fac[-1] * i) % mod)
        inv.append((-inv[mod % i] * (mod // i)) % mod)
        f_inv.append((f_inv[-1] * inv[-1]) % mod)

def modcmb(n, r, mod):
    if n < 0 or r < 0 or r > n:
        return 0
    return fac[n] * f_inv[r] * f_inv[n - r] % mod

def main():
    N, K = map(int, readline().split())
    prepare(N, MOD)
    ans = 0
    for i in range(min(N - 1, K) + 1):
        ans += modcmb(N, i, MOD) * modcmb(N - 1, i, MOD)
        ans %= MOD
    print(ans)

if __name__ == ""__main__"":
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8375
217,python_218,Python,"arr = [5,5,7]
a = list(map(int,input().split()))
a.sort()

for i in range(3):
    if a[i] != arr[i]:
        print(""NO"")
        exit()
print(""YES"")
","```
arr = [5, 5, 7]
a = list(map(int, input().split()))
a.sort()

for i in range(len(a)):
    if a[i]!= arr[i]:
        print(""NO"")
        exit()
print(""YES"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8385
218,python_219,Python,"mod = 1000000007


s = raw_input()
n_a = n_ab = n_abc = 0
p = 1

for c in s:
    if c == ""A"":
        n_a = (n_a + p) % mod
    elif c == ""B"":
        n_ab = (n_ab + n_a) % mod
    elif c == ""C"":
        n_abc = (n_abc + n_ab) % mod
    elif c == ""?"":
        n_abc = (n_abc * 3 + n_ab) % mod
        n_ab = (n_ab * 3 + n_a) % mod
        n_a = (n_a * 3 + p) % mod
        p = (p * 3) % mod

    # print n_a, n_ab, n_abc

print n_abc % mod
","```
mod = 1000000007

s = input()
n_a, n_ab, n_abc = 0, 0, 0
p = 1

for c in s:
    if c == ""A"":
        n_a = (n_a + p) % mod
    elif c == ""B"":
        n_ab = (n_ab + n_a) % mod
    elif c == ""C"":
        n_abc = (n_abc + n_ab) % mod
    elif c == ""?"":
        n_abc = (n_abc * 3 + n_ab) % mod
        n_ab = (n_ab * 3 + n_a) % mod
        n_a = (n_a * 3 + p) % mod
        p = (p * 3) % mod

print(n_abc % mod)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9076
219,python_220,Python,"A, B, C = map(int, input().split())
print(min(C, A + B + 1) + B)
","```
A, B, C = map(int, input().split())
print(min(C, A + B + 1) + B)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7757
220,python_221,Python,"# code-festival-2017-qualcC - Inserting 'x'
def main():
    S = input().rstrip()
    ans, l, r = 0, 0, len(S) - 1
    while l < r:
        if S[l] == S[r]:
            l += 1
            r -= 1
        else:
            ans += 1
            if S[l] == ""x"":
                l += 1
            elif S[r] == ""x"":
                r -= 1
            else:
                print(-1)
                return
    print(ans)


if __name__ == ""__main__"":
    main()","```
# code-festival-2017-qualcC - Inserting 'x'
def main():
    S = input().rstrip()
    ans, l, r = 0, 0, len(S) - 1
    while l < r:
        if S[l] == S[r]:
            l += 1
            r -= 1
        else:
            ans += 1
            if S[l] == 'x':
                l += 1
            elif S[r] == 'x':
                r -= 1
            else:
                print(-1)
                return
    print(ans)


if __name__ == ""__main__"":
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8928
221,python_222,Python,"n,m = map(int,input().split())
H = [int(i) for i in input().split()]
H_max = [True for i in range(n)]
for i in range(m):
    a,b = map(int,input().split())
    if H[a-1]>H[b-1]:
        H_max[b-1] = False
    elif H[a-1]<H[b-1]:
        H_max[a-1] = False
    else:
        H_max[a-1] = False
        H_max[b-1] = False
ans = 0
for i in range(n):
    if H_max[i] == True:
        ans += 1
print(ans)","```
n, m = map(int, input().split())
H = [int(i) for i in input().split()]
H_max = [True] * n
for _ in range(m):
    a, b = map(int, input().split())
    if H[a-1] > H[b-1]:
        H_max[b-1] = False
    elif H[a-1] < H[b-1]:
        H_max[a-1] = False
    else:
        H_max[a-1] = False
        H_max[b-1] = False
ans = sum(1 for i in H_max if i)
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8804
222,python_223,Python,"D,G = map(int,input().split())
p,c = [],[]
for i in range(D):
  tmp0 ,tmp1 = map(int,input().split())
  p.append(tmp0)
  c.append(tmp1)
  
min_ans = float('inf')

for bit in range(1<<D):
  dont_solved = [i for i in range(D)]
  ans = 0
  sum_point = 0
  for i in range(D):
    if bit & 1<<i:
      ans += p[i]
      sum_point += (i+1)*100*p[i]+c[i]
      dont_solved.remove(i)
  if sum_point < G:
    for i in  dont_solved[::-1]:
      for j in range(p[i]):
        ans += 1
        sum_point += (i+1)*100
        if sum_point >= G:
          break
      else:
        continue
      break
  
  if ans <= min_ans:
    min_ans = ans
print(min_ans)
  


","```
D, G = map(int, input().split())
p, c = [], []
for i in range(D):
    tmp0, tmp1 = map(int, input().split())
    p.append(tmp0)
    c.append(tmp1)

min_ans = float('inf')

for bit in range(1 << D):
    dont_solved = [i for i in range(D)]
    ans = 0
    sum_point = 0
    for i in range(D):
        if bit & (1 << i):
            ans += p[i]
            sum_point += (i + 1) * 100 * p[i] + c[i]
            dont_solved.remove(i)
    if sum_point < G:
        for i in dont_solved[::-1]:
            for j in range(p[i]):
                ans += 1
                sum_point += (i + 1) * 100
                if sum_point >= G:
                    break
            else:
                continue
            break

    if ans <= min_ans:
        min_ans = ans
print(min_ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8744
223,python_224,Python,"N = input()
n = [0]*(len(N) + 1)
ans = 0
for i in range(len(N)):
    n[i] = int(N[len(N) - 1 - i])
for i in range(len(n)):
    if n[i] < 5:
        ans += n[i]
    elif n[i] == 5:
        if n[i+1] >= 5:
            ans += 10 - n[i]
            n[i+1] += 1
        else:
            ans += 5
    else:
        ans += 10 - n[i]
        n[i+1] += 1
print(ans)","```
N = input()
n = [0] * (len(N) + 1)
ans = 0
for i in range(len(N)):
    n[i] = int(N[len(N) - 1 - i])
for i in range(len(n)):
    if n[i] < 5:
        ans += n[i]
    elif n[i] == 5:
        if i + 1 < len(n) and n[i + 1] >= 5:
            ans += 10 - n[i]
            n[i + 1] += 1
        else:
            ans += 5
    else:
        ans += 10 - n[i]
        n[i + 1] += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9169
224,python_225,Python,"from numba import njit, i8, void
import numpy as np


mod = 10**9+7
k = int(input())
n = len(input())


@njit(i8(i8), cache=True)
def pow(n):
    l, now, mod, k = np.ones(64, np.int64), 1, 10**9+7, 10**9+5
    l[0] = n
    for i in range(1, 64):
        l[i] = l[i-1]*l[i-1] % mod
    for i in range(64):
        if k & 1:
            now = now*l[i] % mod
        k >>= 1
    return now


@njit(void(i8, i8), cache=True)
def num_calc(n, k):
    fact, mod = np.ones(n+k+1, dtype=np.int64), 10**9+7
    for i in range(2, n+k+1):
        fact[i] = fact[i-1]*i % mod

    power = np.ones(k+1, dtype=np.int64)
    power[0] = fact[n+k]
    for i in range(1, k+1):
        power[i] = power[i-1]*25 % mod

    fact = fact[n+k:n-1:-1]*fact[:k+1] % mod
    ans = 0
    for i in range(k+1):
        ans = (ans+pow(fact[i])*power[i]) % mod
    print(ans)


num_calc(n, k)
","```
from numba import njit, i8, void
import numpy as np


mod = 10**9 + 7
k = int(input())
n = len(str(input()))


@njit(i8(i8), cache=True)
def pow(n):
    l, now, mod, k = np.ones(64, np.int64), 1, 10**9 + 7, 10**9 + 5
    l[0] = n
    for i in range(1, 64):
        l[i] = l[i-1]*l[i-1] % mod
    for i in range(64):
        if k & 1:
            now = now*l[i] % mod
        k >>= 1
    return now


@njit(void(i8, i8), cache=True)
def num_calc(n, k):
    fact, mod = np.ones(n+k+1, dtype=np.int64), 10**9 + 7
    for i in range(2, n+k+1):
        fact[i] = fact[i-1]*i % mod

    power = np.ones(k+1, dtype=np.int64)
    power[0] = fact[n+k]
    for i in range(1, k+1):
        power[i] = power[i-1]*25 % mod

    fact = np.flip(fact[n+k-1:n-1:-1])*fact[:k+1] % mod
    ans = 0
    for i in range(k+1):
        ans = (ans + pow(fact[i])*power[i]) % mod
    print(ans)


num_calc(n, k)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8935
225,python_226,Python,"N=int(input())
V=list(map(int,input().split()))
V.sort()

while len(V) > 1:
    v1=V.pop(0)
    v2=V.pop(0)
    
    v_mean = (v1+v2)/2
    
    V.append(v_mean)
    V.sort()
print(V[0])","```
n = int(input())
v = list(map(int, input().split()))
v.sort()

while len(v) > 1:
    v1 = v.pop(0)
    v2 = v.pop(0)
    v_mean = (v1 + v2) / 2
    v.append(v_mean)
    v.sort()
print(v[0])
```",extreme_minor,Meta-Llama-2-7b-chat,0.7883
226,python_227,Python,"n=int(input())
lr=[list(map(int,input().split())) for i in range(n)]
ans=0
for i in lr:
  ans += i[1]-i[0]+1
print(ans)","```
n = int(input())
lr = [list(map(int, input().split())) for _ in range(n)]
ans = 0
for i in lr:
    ans += i[1] - i[0] + 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8613
227,python_228,Python,"a, b, c, d = map(int, input().split())
print(max(a*c, a*d, b*c, b*d))","```
a, b, c, d = map(int, input().split())
print(max(a*c, a*d, b*c, b*d))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8026
228,python_229,Python,"n = list(input())
if ""a"" in n and ""b"" in n and ""c"" in n:
  print(""Yes"")
else:
  print(""No"")
","```
n = list(input())
if ""a"" in n and ""b"" in n and ""c"" in n:
    print(""Yes"")
else:
    print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8379
229,python_230,Python,"A = int(input())
B = int(input())

X = [1, 2, 3]

X.remove(A)
X.remove(B)

print(X[0])
","```
A = int(input())
B = int(input())

X = [1, 2, 3]

X.remove(A)
X.remove(B)

print(X[0])
```",extreme_minor,Meta-Llama-2-7b-chat,0.7938
230,python_231,Python,"N =int(input())
a = [0] * N
b = [0] * N
for i in range(N):
    A, B = map(int, input().split())
    a[i], b[i] = A, B
    
ans = 0
for i in range(N-1,-1,-1):
  if (a[i]+ans)%b[i]==0:
    push = 0
  else:
    push = b[i] - (a[i]+ans)%b[i]
  ans += push
print(ans)","```
N = int(input())
a = [0] * N
b = [0] * N
for i in range(N):
    A, B = map(int, input().split())
    a[i], b[i] = A, B

ans = 0
for i in range(N - 1, -1, -1):
    if (a[i] + ans) % b[i] == 0:
        push = 0
    else:
        push = b[i] - (a[i] + ans) % b[i]
    ans += push
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8659
231,python_232,Python,"n = int(input())
arr = list(map(int,input().split()))
ans = 0
for i in range(n):
    if i%2==0 and arr[i]%2!=0:
        ans+=1
print(ans)","```
n = int(input())
arr = list(map(int, input().split()))
ans = 0
for i in range(n):
    if i % 2 == 0 and arr[i] % 2!= 0:
        ans += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8657
232,python_233,Python,"x,y,z = [int(x) for x in input().split()]
print((x-z) // (y+z))
","```
x, y, z = [int(i) for i in input().split()]
print((x - z) // (y + z))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8457
233,python_234,Python,"A = sorted(list(map(int, input().split())))
print(A[0] + A[1])","```
a = sorted(list(map(int, input().split())))
print(a[0] + a[1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8239
234,python_235,Python,"N = int(input())
print(N//3)","```
N = int(input())
print(N // 3)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8
235,python_236,Python,"N, K = map(int, input().split())
S = [0] * N
for _ in range(K):
  n = int(input())
  for a in [int(x) for x in input().split()]:
    S[a - 1] += 1
print(sum([1 for s in S if s == 0]))","```
N, K = map(int, input().split())
S = [0] * N
for _ in range(K):
    n = int(input())
    for a in [int(x) for x in input().split()]:
        S[a - 1] += 1
print(sum(1 for s in S if s == 0))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8194
236,python_237,Python,"import math
n,h = map(int, input().split())
a, b = [], []
for _ in range(n):
    c,d = map(int, input().split())
    a.append(c)
    b.append(d)
mx = max(a)
ups = [x for x in b if mx < x]
if sum(ups) >= h:
    tmp = 0
    cnt = 0
    for up in sorted(ups)[::-1]:
        tmp += up
        cnt += 1
        if tmp >= h:
            print(cnt)
            exit()
h -= sum(ups)
ans = len(ups) + math.ceil(h / mx)
print(ans)","```
import math
n, h = map(int, input().split())
a, b = [], []
for _ in range(n):
    c, d = map(int, input().split())
    a.append(c)
    b.append(d)
mx = max(a)
ups = [x for x in b if mx < x]
if sum(ups) >= h:
    tmp, cnt = 0, 0
    for up in sorted(ups)[::-1]:
        tmp += up
        cnt += 1
        if tmp >= h:
            print(cnt)
            exit()
h -= sum(ups)
ans = len(ups) + math.ceil(h / mx)
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8597
237,python_238,Python,"n = int(input())
dp = [0] * 3
for i in range(n):
    a, b, c = map(int, input().split())
    dp = [a + max(dp[1], dp[2]), b + max(dp[0], dp[2]), c + max(dp[0], dp[1])]
print(max(dp))","```
n = int(input())
dp = [0] * 3
for i in range(n):
    a, b, c = map(int, input().split())
    dp[0] = a + max(dp[1], dp[2])
    dp[1] = b + max(dp[0], dp[2])
    dp[2] = c + max(dp[0], dp[1])
print(max(dp))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8124
238,python_239,Python,"# ABC084C - Snuke Festival
from bisect import bisect_left, bisect_right

n = int(input())
lst_a = sorted(list(map(int, input().rstrip().split())))
lst_b = list(map(int, input().rstrip().split()))
lst_c = sorted(list(map(int, input().rstrip().split())))
lgth = len(lst_c)
ans = 0
for i in lst_b:
    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))
print(ans)","```
# ABC084C - Snuke Festival
from bisect import bisect_left, bisect_right

n = int(input())
lst_a = sorted(map(int, input().rstrip().split()))
lst_b = list(map(int, input().rstrip().split()))
lst_c = sorted(map(int, input().rstrip().split()))
length = len(lst_c)
ans = 0
for i in lst_b:
    ans += bisect_left(lst_a, i) * (length - bisect_right(lst_c, i))
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8597
239,python_240,Python,"n, m = map(int, input().split())
cnt = [0 for _ in range(n)]

for _ in range(m):
    a, b = map(int, input().split())
    a -= 1
    b -= 1
    cnt[a] = (cnt[a] + 1) % 2
    cnt[b] = (cnt[b] + 1) % 2
if 1 in cnt:
    print(""NO"")
else:
    print(""YES"")
","```
n, m = map(int, input().split())
cnt = [0] * n

for _ in range(m):
    a, b = map(int, input().split())
    a -= 1
    b -= 1
    cnt[a] = (cnt[a] + 1) % 2
    cnt[b] = (cnt[b] + 1) % 2

if 1 in cnt:
    print(""NO"")
else:
    print(""YES"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8065
240,python_241,Python,"N = int(input())
b = list(map(int, input().split()))
ans = []
for i in range(N):
    # それぞれの数字の余裕度を計算し、余裕度0で一番後ろのやつをとる
    d = -1
    for j in range(N-i):
        if (j+1)-b[j] == 0:
            d = j
    if d == -1:
        print(-1)
        exit()
    else:
        ans.append(b[d])
        del b[d]
[print(a) for a in ans[::-1]]","```
N = int(input())
b = list(map(int, input().split()))
ans = []
for i in range(N):
    d = -1
    for j in range(N - i):
        if j + 1 - b[j] == 0:
            d = j
    if d == -1:
        print(-1)
        exit()
    else:
        ans.append(b[d])
        del b[d]
print(*ans[::-1], sep='\n')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8734
241,python_242,Python,"from collections import deque
 
N, M = map(int,input().split())
 
edges = [[] for _ in range(N)]
for _ in range(M):
    u, v = map(int,input().split())
    edges[u-1].append(v-1)
 
S, T = map(int,input().split())
S -= 1
T -= 1
 
visited = {}
q = deque()
q.append((S, 0))
d = -1
while q:
    s, c = q.popleft()
    if s in visited and (c % 3) in visited[s]:
        continue
    if s not in visited:
        visited[s] = set()
    visited[s].add(c % 3)
    for n in edges[s]:
        if n == T and c % 3 == 2:
            d = c + 1
            break
        q.append((n, c+1))
 
    if d % 3 == 0:
        break
 
if d == -1:
    print(-1)
else:
    print(d//3)
","```
from collections import deque

N, M = map(int, input().split())

edges = [[] for _ in range(N)]
for _ in range(M):
    u, v = map(int, input().split())
    edges[u-1].append(v-1)

S, T = map(int, input().split())
S -= 1
T -= 1

visited = {}
q = deque()
q.append((S, 0))
d = -1
while q:
    s, c = q.popleft()
    if s in visited and c % 3 in visited[s]:
        continue
    if s not in visited:
        visited[s] = set()
    visited[s].add(c % 3)
    for n in edges[s]:
        if n == T and c % 3 == 2:
            d = c + 1
            break
        q.append((n, c+1))

if d == -1:
    print(-1)
else:
    print(d//3)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8975
242,python_243,Python,"N = int(input())

for n in [111, 222, 333, 444, 555, 666, 777, 888, 999]:
    if N <= n:
        print(str(n))
        break


","```
N = int(input())

for n in [111, 222, 333, 444, 555, 666, 777, 888, 999]:
    if N <= n:
        print(str(n))
        break
```",extreme_minor,Meta-Llama-2-7b-chat,0.8683
243,python_244,Python,"import sys
input = sys.stdin.readline

n, m = map(int, input().split(' '))

WAs = [0] * n
correct = 0
penalty = 0
for i in range(m):
    p, s = input().strip().split(' ')
    p = int(p) - 1
    if WAs[p] == -1:
        continue
    if s == 'AC':
        penalty += WAs[p]
        correct += 1
        WAs[p] = -1
    else:
        WAs[p] += 1

print(correct, penalty)
","```
import sys
input = sys.stdin.readline

n, m = map(int, input().strip().split())
WAs = [0] * n
correct = 0
penalty = 0
for i in range(m):
    p, s = input().strip().split()
    p = int(p) - 1
    if WAs[p] == 0:
        continue
    if s == 'AC':
        penalty += WAs[p]
        correct += 1
        WAs[p] = -1
    else:
        WAs[p] += 1

print(correct, penalty)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8281
244,python_245,Python,"import sys;input = lambda : sys.stdin.readline()
import collections
n = int(input())
a = sorted(list(map(int, input().split())))
d = collections.Counter(a)
need = {}
for k,v in d.items():
    if v>1:
        need[k]=v
if (sum(list(need.values()))-len(need))%2==0:
    print(len(set(a)))
else:
    print(len(set(a))-1)
","```
import sys
import collections
input = lambda: sys.stdin.readline()

n = int(input())
a = sorted(map(int, input().split()))
d = collections.Counter(a)
need = {}
for k, v in d.items():
    if v > 1:
        need[k] = v
if (sum(need.values()) - len(need)) % 2 == 0:
    print(len(set(a)))
else:
    print(len(set(a)) - 1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8721
245,python_246,Python,"S = raw_input()
T = raw_input()
d = dict()
d2 = dict()
ret = True
for s, t in zip(S, T):
    if s in d and d[s] != t:
        ret = False
        break
    if t in d2 and d2[t] != s:
        ret = False
        break
    d[s] = t
    d2[t] = s
        
print 'Yes' if ret else 'No'","```
S = input()
T = input()
d = {}
d2 = {}
ret = True
for s, t in zip(S, T):
    if s in d and d[s]!= t:
        ret = False
        break
    if t in d2 and d2[t]!= s:
        ret = False
        break
    d[s] = t
    d2[t] = s

print('Yes' if ret else 'No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.7544
246,python_247,Python,"a,b,c=map(int,input().split())
if a+b==c or a+c==b or b+c==a:
    print(""Yes"")
else:
    print(""No"")","```
a, b, c = map(int, input().split())
if a + b == c or a + c == b or b + c == a:
    print(""Yes"")
else:
    print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8173
247,python_248,Python,"from sys import stdin, stdout
import math
import bisect
import datetime

n = int(stdin.readline().strip())
arr = list(map(int, stdin.readline().strip().split()))
arr.insert(0,0)
d={}
for i in range(len(arr)):
    d[i] = arr[i]
arr = sorted(d.items(), key=lambda a: a[1])

dp = [[0 for i in range(2005)] for j in range(2005)]

for i in range(1, n + 1):
    dp[i][i]=arr[1][1]*abs(arr[1][0]-i)

for l in range(2, n + 1):
    pos, val = arr[l]
    for left in range(1, n - l + 2):
        right = left + l - 1
        dp[left][right] = max(dp[left + 1][right] + val * abs(pos - left), dp[left][right - 1] + val * abs(pos - right))

stdout.writelines(str(dp[1][n]) + '\n')","```
from sys import stdin, stdout
import math
import bisect
import datetime

n = int(stdin.readline().strip())
arr = list(map(int, stdin.readline().strip().split()))
arr.insert(0, 0)
d = {}
for i in range(len(arr)):
    d[i] = arr[i]
arr = sorted(d.items(), key=lambda a: a[1])

dp = [[0 for _ in range(2005)] for _ in range(2005)]

for i in range(1, n + 1):
    dp[i][i] = arr[1][1] * abs(arr[1][0] - i)

for l in range(2, n + 1):
    pos, val = arr[l]
    for left in range(1, n - l + 2):
        right = left + l - 1
        dp[left][right] = max(dp[left + 1][right] + val * abs(pos - left), dp[left][right - 1] + val * abs(pos - right))

stdout.write(str(dp[1][n]) + '\n')",extreme_minor,Meta-Llama-2-7b-chat,0.9883
248,python_249,Python,"N = int(input())
ratio = [tuple(map(int, input().split())) for _ in range(N)]
t,a = 1,1

for nt,na in ratio:
    if nt<t or na<a:
        r = max((t-1)//nt+1, (a-1)//na+1)
        nt *= r
        na *= r
    t,a = nt,na
    #print(t, a)
print(t+a)
","```
N = int(input())
ratio = [tuple(map(int, input().split())) for _ in range(N)]
t, a = 1, 1

for nt, na in ratio:
    if nt < t or na < a:
        r = max((t - 1) // nt + 1, (a - 1) // na + 1)
        nt *= r
        na *= r
    t, a = nt, na

print(t + a)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8285
249,python_250,Python,"n = int(input())
a = list(map(int,input().split()))
m0 = 0
m1 = 0
m2 = 0

if n%2 == 0:
    for i,ai in enumerate(a):
        if i%2 == 0:
            m0 += ai
        else:
            m1 = max(m0,m1+ai)
    print(max(m0,m1))
else:
    for i,ai in enumerate(a):
        if i%2 == 0:
            if i > 0:
                m2 = max(m2+ai,m1,m0)
            if i < n-1:
                m0 += ai
        else:
            m1 = max(m0,m1+ai)
    print(max(m0,m1,m2))
","```
n = int(input())
a = list(map(int, input().split()))
m0 = 0
m1 = 0
m2 = 0

if n % 2 == 0:
    for i, ai in enumerate(a):
        if i % 2 == 0:
            m0 += ai
        else:
            m1 = max(m0, m1 + ai)
    print(max(m0, m1))
else:
    for i, ai in enumerate(a):
        if i % 2 == 0:
            if i > 0:
                m2 = max(m2 + ai, m1, m0)
            if i < n - 1:
                m0 += ai
        else:
            m1 = max(m0, m1 + ai)
    print(max(m0, m1, m2))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8615
250,python_251,Python,"h, w = map(int, input().split())
c = [input() for _ in range(h)]

for i in range(h):
    print(c[i])
    print(c[i])","```
h, w = map(int, input().split())
c = [input() for _ in range(h)]

for i in range(h):
    print(c[i])
    print(c[i])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8094
251,python_252,Python,"N, P = map(int, raw_input().split())
A = map(int, raw_input().split())

if all(a%2==0 for a in A):
  if P==0:
    print 2**N
  else:
    print 0
else:
  print 2**N/2
","```
N, P = map(int, input().split())
A = list(map(int, input().split()))

if all(a % 2 == 0 for a in A):
    if P == 0:
        print(2 ** N)
    else:
        print(0)
else:
    print(2 ** N // 2)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7789
252,python_253,Python,"a=raw_input()
b=raw_input()
l=''
for i in range(len(a)):
    l+=a[i]
    if i<len(b):
        l+=b[i]
print l","```
a = input()
b = input()
l = ''
for i in range(len(a)):
    l += a[i]
    if i < len(b):
        l += b[i]
print(l)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8603
253,python_254,Python,"N = int(raw_input())
a = [int(i[-2:])for i in raw_input().split("" "")]

c1 = 0
c2 = 0

for ai in a:
    if ai % 2 != 0:
        c1 += 1
    elif ai % 4 == 0:
        c2 += 1
if c1 <= c2:
    print ""Yes""
elif c1 - 1 == c2 and N == c1 + c2:
    print ""Yes""
else:
    print ""No""
","```
N = int(input())
a = [int(i[-2:]) for i in input().split()]

c1 = 0
c2 = 0

for ai in a:
    if ai % 2!= 0:
        c1 += 1
    elif ai % 4 == 0:
        c2 += 1

if c1 <= c2:
    print(""Yes"")
elif c1 - 1 == c2 and N == c1 + c2:
    print(""Yes"")
else:
    print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.7677
254,python_255,Python,"from operator import itemgetter
from itertools import chain


N = int(input())
L = []
R = []
for i in range(N):
    S = input()
    low = 0
    var = 0

    for s in S:
        if s == '(':
            var += 1
        else:
            var -= 1
        low = min(low, var)
    
    if var >= 0:
        L.append((low, var))
    else:
        R.append((low, var))

L.sort(key=itemgetter(0), reverse=True)
R.sort(key=lambda x: x[0] - x[1])
pos = 0
for i, (low, var) in enumerate(chain(L, R)):
    if pos + low < 0:
        ans = 'No'
        break
    pos += var
else:
    ans = 'Yes' if pos == 0 else 'No'
print(ans)
","```
from operator import itemgetter
from itertools import chain

N = int(input())
L = []
R = []
for i in range(N):
    S = input()
    low = 0
    var = 0

    for s in S:
        if s == '(':
            var += 1
        else:
            var -= 1
        low = min(low, var)

    if var >= 0:
        L.append((low, var))
    else:
        R.append((low, var))

L.sort(key=itemgetter(0), reverse=True)
R.sort(key=itemgetter(0) - itemgetter(1))
pos = 0
for i, (low, var) in enumerate(chain(L, R)):
    if pos + low < 0:
        ans = 'No'
        break
    pos += var
else:
    ans = 'Yes' if pos == 0 else 'No'
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9433
255,python_256,Python,"N = int(input())
d = list(map(int, input().split()))

d = sorted(d)
print(d[N//2] - d[N//2 - 1])","```
n = int(input())
d = list(map(int, input().split()))

d = sorted(d)
print(d[n//2] - d[n//2 - 1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.7773
256,python_257,Python,"s = input()
x,y = map(int,input().split())
x1 = 0
y1 = []
muki = 0
t = len(s)
x2 = []
for i in range(len(s)):
  a = s[i]
  if a == ""F"":
    x1 += 1
  else:
    t = i+0
    break
x3 = 0
y2 = 0
for i in range(t,len(s)):
  a = s[i]
  if a == ""F"":
    if muki%2 == 0:
      x3+= 1
    else:
      y2 += 1
  else:
    if muki%2 == 0:
      if x3 != 0:
        x2.append(x3)
      x3 = 0
      muki +=1
    else:
      if y2 != 0:
        y1.append(y2)
      y2 = 0
      muki += 1
if x3 != 0:
   x2.append(x3)
if y2 != 0:
   y1.append(y2)
ansx = set([x1])
for i in x2:
  g = len(ansx)
  ansx2 = list(ansx)
  ansx = set([])
  for j in range(g):
    ansx.add(ansx2[j]+i)
    ansx.add(ansx2[j]-i)
ansy = set([0])
for i in y1:
  g = len(ansy)
  ansy2 = list(ansy)
  ansy = set([])
  for j in range(g):
    ansy.add(ansy2[j]+i)
    ansy.add(ansy2[j]-i)
if (x in ansx and y in ansy):
  print(""Yes"")
else:
  print(""No"")","```
s = input()
x, y = map(int, input().split())
x1 = 0
y1 = []
muki = 0
t = len(s)
x2 = []
for i in range(len(s)):
    a = s[i]
    if a == ""F"":
        x1 += 1
    else:
        t = i + 1
        break
x3 = 0
y2 = 0
for i in range(t, len(s)):
    a = s[i]
    if a == ""F"":
        if muki % 2 == 0:
            x3 += 1
        else:
            y2 += 1
    else:
        if muki % 2 == 0:
            if x3!= 0:
                x2.append(x3)
            x3 = 0
            muki += 1
        else:
            if y2!= 0:
                y1.append(y2)
            y2 = 0
            muki += 1
if x3!= 0:
    x2.append(x3)
if y2!= 0:
    y1.append(y2)
ansx = {x1}
for i in x2:
    g = len(ansx)
    ansx2 = list(ansx)
    ansx = set()
    for j in range(g):
        ansx.add(ansx2[j] + i)
        ansx.add(ansx2[j] - i)
ansy = {0}
for i in y1:
    g = len(ansy)
    ansy2 = list(ansy)
    ansy = set()
    for j in range(g):
        ansy.add(ansy2[j] + i)
        ansy.add(ansy2[j] - i)
if x in ansx and y in ansy:
    print(""Yes"")
else:
    print(""No"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.9573
257,python_258,Python,"import sys
import numpy as np
input = sys.stdin.readline

N,M,X = list(map(int,input().split()))
CA = [ list(map(int,input().split())) for _ in range(N)]
bit = 2**N
cost = float('inf')

for bi in range(1,bit):
    tmp=[]
    for i in range(N):
        if bi & 1<<i:
            tmp.append(CA[i-1])
    tmp = np.array(tmp)        
    a = sum(tmp)
    if all( [a[j]>=X for j in range(1,M+1)]):
        cost = min(cost,a[0])
print( -1 if cost == float('inf') else cost)
","```
import sys
import numpy as np
input = sys.stdin.readline

N, M, X = map(int, input().split())
CA = [list(map(int, input().split())) for _ in range(N)]
bit = 2 ** N
cost = float('inf')

for bi in range(1, bit):
    tmp = []
    for i in range(N):
        if bi & (1 << i):
            tmp.append(CA[i - 1])
    tmp = np.array(tmp)
    a = sum(tmp)
    if all([a[j] >= X for j in range(1, M + 1)]):
        cost = min(cost, a[0])
print(-1 if cost == float('inf') else cost)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9244
258,python_259,Python,"from collections import deque
k = int(input())

ans = deque([i for i in range(1, 10)])


def generate_lunlun(x):
    y = x % 10
    if 0 <= y-1:
        yield 10*x + y-1
    yield 10*x + y
    if y+1 < 10:
        yield 10*x + y+1


cnt = 0
while True:
    x = ans.popleft()
    for i in generate_lunlun(x):
        ans.append(i)
    cnt += 1
    if cnt == k:
        print(x)
        break","```
from collections import deque

k = int(input())

ans = deque([i for i in range(1, 10)])

def generate_lunlun(x):
    y = x % 10
    if 0 <= y - 1:
        yield 10 * x + y - 1
    yield 10 * x + y
    if y + 1 < 10:
        yield 10 * x + y + 1

cnt = 0
while True:
    x = ans.popleft()
    for i in generate_lunlun(x):
        ans.append(i)
    cnt += 1
    if cnt == k:
        print(x)
        break
```",extreme_minor,Meta-Llama-2-7b-chat,0.8596
259,python_260,Python,"# coding: utf-8
import sys

sr = lambda: sys.stdin.readline().rstrip()
ir = lambda: int(sr())
lr = lambda: list(map(int, sr().split()))

X, Y, A, B, C = lr()
P = lr(); P.sort(reverse=True)
Q = lr(); Q.sort(reverse=True)
R = lr(); R.sort(reverse=True)
P = P[:X]
Q = Q[:Y]
Z = P + Q + R
Z.sort(reverse=True)
answer = sum(Z[:X+Y])
print(answer)
","```
# coding: utf-8
import sys

sr = lambda: sys.stdin.readline().rstrip()
ir = lambda: int(sr())
lr = lambda: list(map(int, sr().split()))

X, Y, A, B, C = lr()
P = lr(); P.sort(reverse=True)
Q = lr(); Q.sort(reverse=True)
R = lr(); R.sort(reverse=True)
P = P[:X]
Q = Q[:Y]
Z = P + Q + R
Z.sort(reverse=True)
answer = sum(Z[:X + Y])
print(answer)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9135
260,python_261,Python,"
a,b,k = map(int,input().split())

if a >= k:
    print(a-k,b)
elif a < k < a+b:
    print(0,b-k+a)
else:
    print(0,0)","```
a, b, k = map(int, input().split())

if a >= k:
    print(a - k, b)
elif k < a + b:
    print(0, b - k + a)
else:
    print(0, 0)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8366
261,python_262,Python,"""""""
https://atcoder.jp/contests/tokiomarine2020/submissions/14229099
""""""
N,K = map(int,input().split())
A = list(map(int,input().split()))

def update(A):
    b = [0]*N

    for i,a in enumerate(A):
        l = max(0,i-a)
        r = min(N-1,i+a)

        b[l] += 1
        if r+1 < N:
            b[r+1] -= 1
    
    res = []
    s = 0
    for i in b:
        s += i
        res.append(s)
    return res

for _ in range(min(K,75)):
    A = update(A)

print(*A)","```
""""""
https://atcoder.jp/contests/tokiomarine2020/submissions/14229099
""""""
N, K = map(int, input().split())
A = list(map(int, input().split()))

def update(A):
    b = [0] * N

    for i, a in enumerate(A):
        l = max(0, i - a)
        r = min(N - 1, i + a)

        b[l] += 1
        if r + 1 < N:
            b[r + 1] -= 1

    res = []
    s = 0
    for i in b:
        s += i
        res.append(s)
    return res

for _ in range(min(K, 75)):
    A = update(A)

print(*A)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9221
262,python_263,Python,"from collections import Counter
n = int(input())
d = Counter(list(input()))
val = d.values()
ans = 1
for i in val:
    ans *= (i + 1)
    ans %= 10**9 + 7
print(ans - 1)","```
from collections import Counter
n = int(input())
d = Counter(list(input()))
val = list(d.values())
ans = 1
for i in val:
    ans *= (i + 1)
    ans %= 10**9 + 7
print(ans - 1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8872
263,python_264,Python,"N = int(input())
R = [[int(i) for i in input().split()] for _ in range(N)]
B = [[int(i) for i in input().split()] for _ in range(N)]

R.sort()
B.sort()

count = 0
tmp = []
for bx, by in B:
    for rx, ry in R:
        if bx > rx and by > ry:
            tmp.append([rx, ry])
    if tmp != []:
        max_red = max(tmp, key=lambda r: r[1])
        count += 1
        R.remove(max_red)
        tmp = []
print(count)

","```
N = int(input())
R = [[int(i) for i in input().split()] for _ in range(N)]
B = [[int(i) for i in input().split()] for _ in range(N)]

R.sort()
B.sort()

count = 0
tmp = []
for bx, by in B:
    for rx, ry in R:
        if bx > rx and by > ry:
            tmp.append([rx, ry])
    if tmp:
        max_red = max(tmp, key=lambda r: r[1])
        count += 1
        R.remove(max_red)
        tmp = []
print(count)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9154
264,python_265,Python,"import bisect

s = input()
t = input()

se = set(list(s))
for ti in t:
    if not ti in se:
        print(-1)
        exit()

word = [[] for _ in range(26)]
for i, si in enumerate(s):
    word[ord(si) - ord('a')].append(i)

ans = 0
now = 0
for i, ti in enumerate(t):
    j = bisect.bisect_left(word[ord(ti) - ord('a')], now)
    if j < len(word[ord(ti) - ord('a')]):
        j = word[ord(ti) - ord('a')][j]
        ans += j - now + 1
        now = (j + 1) % len(s)
    else:
        ans += len(s) - now
        now = 0
        j = bisect.bisect_left(word[ord(ti) - ord('a')], 0)
        j = word[ord(ti) - ord('a')][j]
        ans += j - now + 1
        now = j + 1


print(ans)
","```
import bisect

s = input()
t = input()

se = set(list(s))
for ti in t:
    if ti not in se:
        print(-1)
        exit()

word = [[] for _ in range(26)]
for i, si in enumerate(s):
    word[ord(si) - ord('a')].append(i)

ans = 0
now = 0
for i, ti in enumerate(t):
    j = bisect.bisect_left(word[ord(ti) - ord('a')], now)
    if j < len(word[ord(ti) - ord('a')]):
        j = word[ord(ti) - ord('a')][j]
        ans += j - now + 1
        now = (j + 1) % len(s)
    else:
        ans += len(s) - now
        now = 0
        j = bisect.bisect_left(word[ord(ti) - ord('a')], 0)
        j = word[ord(ti) - ord('a')][j]
        ans += j - now + 1
        now = j + 1

print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8341
265,python_266,Python,"N = input()
if '9' in N:
  print('Yes')
else:
  print('No')","```
N = input()
if '9' in N:
    print('Yes')
else:
    print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8644
266,python_267,Python,"from collections import deque

n = int(input())
ab = [list(map(int, input().split())) for i in range(n)]

for i in range(n):
  a, b=ab[i]
  ab[i].append(a+b)
ab.sort(key=lambda x:x[2], reverse=True)
ab=deque(ab)
count = 0
ans=0
while len(ab)>0:
  a, b, dif = ab.popleft()
  if count%2==0:
    ans+=a
  else:
    ans-=b
  count+=1
print(ans)","```
from collections import deque

n = int(input())
ab = [[*map(int, input().split())] for _ in range(n)]
for i in range(n):
    a, b = ab[i]
    ab[i].append(a + b)
ab.sort(key=lambda x: x[2], reverse=True)
ab = deque(ab)
count = 0
ans = 0
while len(ab) > 0:
    a, b, dif = ab.popleft()
    if count % 2 == 0:
        ans += a
    else:
        ans -= b
    count += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.9092
267,python_268,Python,"from math import log2
n = int(input())
arr = list(map(int, input().split()))

if n == 0:
    if arr[0] == 1:
        print(1)
    else:
        print(-1)
    exit()

if arr[0] != 0:
    print(-1)
    exit()

arr.reverse()

ar2 = [None] * (n+1)

for i, e in enumerate(arr):
    if i == 0:
        ar2[0] = (e, e)
        continue

    ar2[i] = (ar2[i-1][0]+e, (ar2[i-1][1]+1) // 2 + e)

if ar2[-1][1] > 1:
    print(-1)
    exit()

ar2.reverse()

total = 0
acc = 1
for i, t in enumerate(ar2):
    acc = min(acc, t[0])

    total += acc
    acc -= arr[n-i]
    acc *= 2

print(total)
","```
from math import log2
n = int(input())
arr = list(map(int, input().split()))

if n == 0:
    if arr[0] == 1:
        print(1)
    else:
        print(-1)
    exit()

if arr[0]!= 0:
    print(-1)
    exit()

arr.reverse()

ar2 = [None] * (n + 1)

for i, e in enumerate(arr):
    if i == 0:
        ar2[0] = (e, e)
        continue

    ar2[i] = (ar2[i - 1][0] + e, (ar2[i - 1][1] + 1) // 2 + e)

if ar2[-1][1] > 1:
    print(-1)
    exit()

ar2.reverse()

total = 0
acc = 1
for i, t in enumerate(ar2):
    acc = min(acc, t[0])
    total += acc
    acc -= arr[n - i]
    acc *= 2

print(total)
```",extreme_minor,Meta-Llama-2-7b-chat,0.872
268,python_269,Python,"import sys

N, X = map(int, sys.stdin.readline().split())
L = list(map(int, sys.stdin.readline().split()))

ans = 0
for i, l in enumerate(L):
    ans += l
    if ans > X:
        print(i+1)
        break
else:
    print(N+1)","```
import sys

N, X = map(int, sys.stdin.readline().split())
L = list(map(int, sys.stdin.readline().split()))

ans = 0
for i, l in enumerate(L):
    ans += l
    if ans > X:
        print(i + 1)
        break
else:
    print(N + 1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8639
269,python_270,Python,"S = input()
c = S.find('C')
f = S[c:].find('F')+c
if c < 0 or f < 0:
    print('No')
    exit()
print('Yes' if f-c > 0 else 'No')
","```
S = input()
c = S.find('C')
f = S[c:].find('F') + c
if c < 0 or f < 0:
    print('No')
    exit()
print('Yes' if f - c > 0 else 'No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8153
270,python_271,Python,"import bisect
import copy
import heapq
import math
import sys
from collections import *
from functools import lru_cache
from itertools import accumulate, combinations, permutations, product
def input():
    return sys.stdin.readline()[:-1]
def ruiseki(lst):
    return [0]+list(accumulate(lst))
sys.setrecursionlimit(500000)
mod=pow(10,9)+7
al=[chr(ord('a') + i) for i in range(26)]
direction=[[1,0],[0,1],[-1,0],[0,-1]]

n=int(input())
a=[int(input()) for i in range(n)]

a.sort()

ans1=0
if n%2==0:
    for i in range(n):
        if i<n//2:
            ans1-=a[i]*2
        else:
            ans1+=a[i]*2
    ans1-=a[n//2]
    ans1+=a[n//2-1]
    print(ans1)
else:
    for i in range(n):
        if i<n//2:
            ans1-=a[i]*2
        elif i>n//2:
            ans1+=a[i]*2
    print(max(ans1+a[n//2]-a[n//2+1],ans1-a[n//2]+a[n//2-1]))","```
import bisect
import copy
import heapq
import math
import sys
from collections import *
from functools import lru_cache
from itertools import accumulate, combinations, permutations, product

def input():
    return sys.stdin.readline().strip()

def ruiseki(lst):
    return [0] + list(accumulate(lst))

sys.setrecursionlimit(500000)
mod = pow(10, 9) + 7
al = [chr(ord('a') + i) for i in range(26)]
direction = [[1, 0], [0, 1], [-1, 0], [0, -1]]

n = int(input())
a = [int(input()) for _ in range(n)]

a.sort()

ans1 = 0
if n % 2 == 0:
    for i in range(n):
        if i < n // 2:
            ans1 -= a[i] * 2
        else:
            ans1 += a[i] * 2
    ans1 -= a[n // 2]
    ans1 += a[n // 2 - 1]
    print(ans1)
else:
    for i in range(n):
        if i < n // 2:
            ans1 -= a[i] * 2
        elif i > n // 2:
            ans1 += a[i] * 2
    print(max(ans1 + a[n // 2] - a[n // 2 + 1], ans1 - a[n // 2] + a[n // 2 - 1]))
```",extreme_minor,Meta-Llama-2-7b-chat,0.8938
271,python_272,Python,"N, M = map(int, input().split())
E = []
for _ in range(M):
    a,b,c = map(int, input().split())
    E.append((a,b,c))
dist = [-N*10**9]*(N+1)
dist[1] = 0
flag = False
for i in range(N):
    for (a,b,c) in E:
        newlen = dist[a] + c
        if newlen > dist[b]:
            dist[b] = newlen
    if i == N-1 and dist[N] > predist:
        flag =True
    predist = dist[N]

if flag:
    print(""inf"")
else:
    print(dist[N])","```
N, M = map(int, input().split())
E = []
for _ in range(M):
    a, b, c = map(int, input().split())
    E.append((a, b, c))
dist = [-10**9] * (N + 1)
dist[1] = 0
flag = False
for i in range(N):
    for a, b, c in E:
        newlen = dist[a] + c
        if newlen > dist[b]:
            dist[b] = newlen
    if i == N - 1 and dist[N] > 0:
        flag = True
    predist = dist[N]

if flag:
    print(""inf"")
else:
    print(dist[N])
```",extreme_minor,Meta-Llama-2-7b-chat,0.9492
272,python_273,Python,"import math
n,d = map(int, input().split())
cnt=0
for i in range(n):
    a,b=map(int, input().split())
    s = math.sqrt(a*a+b*b)
    if s<=d:
        cnt+=1
print(cnt)","```
import math
n, d = map(int, input().split())
cnt = 0
for i in range(n):
    a, b = map(int, input().split())
    s = math.sqrt(a * a + b * b)
    if s <= d:
        cnt += 1
print(cnt)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8385
273,python_274,Python,"n,d = map(int, input().split())

t = n//(2*d+1)
if n > t*(2*d+1):
    print(t+1)
else:
    print(t)","```
n, d = map(int, input().split())

t = n // (2 * d + 1)
if n > t * (2 * d + 1):
    print(t + 1)
else:
    print(t)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8528
274,python_275,Python,"a, b, c, d = map(int, input().split())

while a>0 and c>0:
    c-=b
    a-=d

if c<=0: 
    print('Yes')          
else:  
    print('No')  ","```
a, b, c, d = map(int, input().split())

while a > 0 and c > 0:
    c -= b
    a -= d

if c <= 0:
    print('Yes')
else:
    print('No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8386
275,python_276,Python,"n = int(input())
a = list(map(int, input().split()))
for i in range(1,n):
    if a[i-1] < a[i]:
        a[i] -=1
    if a[i-1] > a[i]:
        print(""No"")
        break
else:
    print(""Yes"")","```
n = int(input())
a = list(map(int, input().split()))
for i in range(1, n):
    if a[i-1] < a[i]:
        a[i] -= 1
    elif a[i-1] > a[i]:
        print(""No"")
        break
else:
    print(""Yes"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.8428
276,python_277,Python,"import sys, re
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians
from itertools import accumulate, permutations, combinations, product
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left
from fractions import gcd
from heapq import heappush, heappop
from functools import reduce
def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7

N = INT()
S = list(input())
Q = INT()

class Bit:
   def __init__(self, n):
       self.size = n
       self.tree = [0] * (n + 1)
   def sum(self, i):
       s = 0
       while i > 0:
           s += self.tree[i]
           i -= i & -i
       return s
   def add(self, i, x):
       while i <= self.size:
           self.tree[i] += x
           i += i & -i

dic_char = defaultdict(int)
for i, char in enumerate(ascii_lowercase):
	dic_char[char] = i

bits = [None]*len(ascii_uppercase)
for i in range(len(ascii_uppercase)):
	bits[i] = Bit(N)

for i in range(N):
	bits[dic_char[S[i]]].add(i+1, 1)

for _ in range(Q):
	a, b, c = input().split()
	if a == ""1"":  # BITを更新
		b = int(b)
		char = S[b-1]
		bits[dic_char[char]].add(b, -1)
		bits[dic_char[c]].add(b, 1)
		S[b-1] = c
	if a == ""2"":
		cnt = 0
		b, c = int(b), int(c)
		for i in range(len(ascii_uppercase)):
			cnt += bits[i].sum(c)-bits[i].sum(b-1) >= 1
		print(cnt)
","```
import sys
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians
from itertools import accumulate, permutations, combinations, product
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left
from fractions import gcd
from heapq import heappush, heappop
from functools import reduce
def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7

N = INT()
S = list(input())
Q = INT()

class Bit:
   def __init__(self, n):
       self.size = n
       self.tree = [0] * (n + 1)
   def sum(self, i):
       s = 0
       while i > 0:
           s += self.tree[i]
           i -= i & -i
       return s
   def add(self, i, x):
       while i <= self.size:
           self.tree[i] += x
           i += i & -i

dic_char = defaultdict(int)
for i, char in enumerate(ascii_lowercase):
   dic_char[char] = i

bits = [None]*len(ascii_uppercase)
for i in range(len(ascii_uppercase)):
   bits[i] = Bit(N)

for i in range(N):
   bits[dic_char[S[i]]].add(i+1, 1)

for _ in range(Q):
   a, b, c = input().split()
   if a == ""1"":
       b = int(b)
       char = S[b-1]
       bits[dic_char[char]].add(b, -1)
       bits[dic_char[c]].add(b, 1)
       S[b-1] = c
   if a == ""2"":
       cnt = 0
       b, c = int(b), int(c)
       for i in range(len(ascii_uppercase)):
           cnt += bits[i].sum(c)-bits[i].sum(b-1) >= 1
       print(cnt)",extreme_minor,Meta-Llama-2-7b-chat,0.9957
277,python_278,Python,"N = int(input())
A = [int(input()) for _ in range(N)]
sorted_A = sorted(A)
for i in range(N):
    if A[i] == sorted_A[-1]:
        print(sorted_A[-2])
    else:
        print(sorted_A[-1])
","```
N = int(input())
A = [int(input()) for _ in range(N)]
sorted_A = sorted(A)
for i in range(N):
    if A[i] == sorted_A[-1]:
        print(sorted_A[-2])
    else:
        print(sorted_A[-1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.831
278,python_279,Python,"def solution():
    user_input = input()
    animals, legs = [int(x) for x in user_input.split()]

    turtles = (4*animals - legs) / 2
    condition = turtles >= 0 and turtles <= animals and turtles % 1 == 0 
    if condition:
        print(""Yes"")
    else:
        print(""No"")

solution()","```
def solution():
    user_input = input()
    animals, legs = [int(x) for x in user_input.split()]

    turtles = (4 * animals - legs) / 2
    condition = (turtles >= 0) and (turtles <= animals) and (turtles % 1 == 0)
    if condition:
        print(""Yes"")
    else:
        print(""No"")

solution()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8755
279,python_280,Python,"A, B, C = map(int, input().split())
print(C, A, B)","```
A, B, C = map(int, input().split())
print(C, A, B)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7936
280,python_281,Python,"n = int(input())
a_list = list(map(int, input().split()))
a_list.sort()

cnt = 0
has_zero = False

for item in a_list:
    if item < 0:
        cnt += 1
    elif item == 0:
        has_zero = True

abs_list = list(map(abs, a_list))
abs_list.sort()

if has_zero:
    print(sum(abs_list))
elif cnt % 2 == 0:
    print(sum(abs_list))
else:
    print(sum(abs_list) - 2 * abs_list[0])
","```
n = int(input())
a_list = list(map(int, input().split()))
a_list.sort()

cnt = 0
has_zero = False

for item in a_list:
    if item < 0:
        cnt += 1
    elif item == 0:
        has_zero = True

abs_list = list(map(abs, a_list))
abs_list.sort()

if has_zero:
    print(sum(abs_list))
elif cnt % 2 == 0:
    print(sum(abs_list))
else:
    print(sum(abs_list) - 2 * abs_list[0])
```",extreme_minor,Meta-Llama-2-7b-chat,0.9093
281,python_282,Python,"n = int(input())

print(0, flush=True)
s = input()
if s == 'Vacant':
    exit()
head_v = s
head_i = 0
print(n-1, flush=True)
s = input()
if s == 'Vacant':
    exit()
tail_v = s
tail_i = n-1

while True:
    mi = (head_i + tail_i) // 2
    print(mi, flush=True)
    mv = input()

    if mv == 'Vacant':
        exit()
    if tail_v == mv and (tail_i - mi) % 2 == 1 or tail_v != mv and (tail_i - mi) % 2 == 0:
        head_i = mi
        head_v = mv
    else:
        tail_i = mi
        tail_v = mv
","```
n = int(input())

print(0, flush=True)
s = input()
if s == 'Vacant':
    exit()
head_v = s
head_i = 0
print(n - 1, flush=True)
s = input()
if s == 'Vacant':
    exit()
tail_v = s
tail_i = n - 1

while True:
    mi = (head_i + tail_i) // 2
    print(mi, flush=True)
    mv = input()

    if mv == 'Vacant':
        exit()
    if tail_v == mv and (tail_i - mi) % 2 == 1 or tail_v!= mv and (tail_i - mi) % 2 == 0:
        head_i = mi
        head_v = mv
    else:
        tail_i = mi
        tail_v = mv
```",extreme_minor,Meta-Llama-2-7b-chat,0.9194
282,python_283,Python,"a = int(input())
s = input()

if a >= 3200:
    print(s)
else:
    print(""red"")","```
a = int(input())
s = input()

if a >= 3200:
    print(s)
else:
    print(""red"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.841
283,python_284,Python,"A, B = map(int, input().split())
print((A+B) % 24)","```
a, b = map(int, input().split())
print((a + b) % 24)
```",extreme_minor,Meta-Llama-2-7b-chat,0.7979
284,python_285,Python,"def main():
    A, B, C, K = map(int, input().split())
    if K <= A + B:
        print(min([A, K]))
    else:
        print(A - (K - A - B))


if __name__ == '__main__':
    main()
","```
def main():
    A, B, C, K = map(int, input().split())
    if K <= A + B:
        print(min(A, K))
    else:
        print(A - (K - A - B))


if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8342
285,python_286,Python,"N = int(input())
L = list(map(int, input().split()))
# L.sort()
# print(L)
ans = 0
for i in range(N):
    for j in range(i+1, N):
        for k in range(j+1, N):
            if L[i] == L[k] or L[k] == L[j] or L[i] == L[j]:
                continue
            if L[i] + L[j] > L[k] and L[i] + L[k] > L[j] and L[k] + L[j] > L[i]:
                ans += 1
print(ans)
","```
N = int(input())
L = list(map(int, input().split()))
L.sort()
ans = 0
for i in range(N):
    for j in range(i+1, N):
        for k in range(j+1, N):
            if L[i] == L[k] or L[k] == L[j] or L[i] == L[j]:
                continue
            if L[i] + L[j] > L[k] and L[i] + L[k] > L[j] and L[k] + L[j] > L[i]:
                ans += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8874
286,python_287,Python,"a,b = map(int,input().split())

x = []
i = 1
n = int(a/0.08) + int(b/0.1) + 2

for i in range(0,n):
  if(int(0.08*i) == a and int(0.1*i) == b):
    x.append(i)
    
if(len(x) != 0):
  print(min(x))
else:
  print(-1)

  

","```
a, b = map(int, input().split())

x = []
i = 1
n = int(a / 0.08) + int(b / 0.1) + 2

for i in range(n):
    if int(0.08 * i) == a and int(0.1 * i) == b:
        x.append(i)

if len(x)!= 0:
    print(min(x))
else:
    print(-1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8515
287,python_288,Python,"#!/usr/bin/env python3
from collections import defaultdict
import sys
sys.setrecursionlimit(10**8)
input = sys.stdin.readline

h, w, n = [int(item) for item in input().split()]
blk_cnt = defaultdict(int) 

for i in range(n):
    a, b = [int(item) - 1 for item in input().split()]
    for j in range(-1, 2):
        for k in range(-1, 2):
            blk_cnt[(a + j, b + k)] += 1
ans = [0] * 10 
for key in blk_cnt.keys():
    if key[0] < 1 or key[1] < 1 or key[0] >= h-1 or key[1] >= w-1:
        continue
    ans[blk_cnt[key]] += 1
total = (w - 2) * (h - 2)
ans[0] = total - sum(ans)
for item in ans:
    print(item)","```
#!/usr/bin/env python3
from collections import defaultdict
import sys
sys.setrecursionlimit(10**8)
input = sys.stdin.readline

h, w, n = map(int, input().split())
blk_cnt = defaultdict(int)

for _ in range(n):
    a, b = map(int, input().split()) - 1
    for j in range(-1, 2):
        for k in range(-1, 2):
            blk_cnt[(a + j, b + k)] += 1

ans = [0] * 11
for key in blk_cnt:
    if 0 <= key[0] < h and 0 <= key[1] < w:
        ans[blk_cnt[key]] += 1
total = (w - 2) * (h - 2)
ans[0] = total - sum(ans)
for item in ans:
    print(item)",extreme_minor,Meta-Llama-2-7b-chat,0.9837
288,python_289,Python,"h1, m1, h2, m2, k = map(int, input().split())

time = (h2 * 60 + m2) - (h1 * 60 + m1)

print(time - k)
","```
h1, m1, h2, m2, k = map(int, input().split())

time = (h2 * 60 + m2) - (h1 * 60 + m1)

print(time - k)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8118
289,python_290,Python,"n = int(input())
P = list(map(int, input().split()))

ans = 0
for i in range(n):
    if P[i] == i+1:
        if i != n-1:
            P[i+1] = P[i]
            ans += 1
        else:
            ans += 1
print(ans)","```
n = int(input())
P = list(map(int, input().split()))

ans = 0
for i in range(n):
    if P[i] == i + 1:
        if i < n - 1:
            P[i + 1] = P[i]
            ans += 1
        else:
            ans += 1
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8515
290,python_291,Python,"
N,A,B = list(map(int,input().split()))
if B<A:
    print(0)
elif B!=A and N==1:
    print(0)
else:
    print(B*(N-1) + A - A*(N-1) - B + 1)","```
N, A, B = list(map(int, input().split()))
if B < A:
    print(0)
elif B!= A and N == 1:
    print(0)
else:
    print(B * (N - 1) + A - A * (N - 1) - B + 1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8686
291,python_292,Python,"N = int(input().strip())

c = 0
for n in range(1, N+1, 2):
  d = 0
  for i in range(1, n+1):
    if i * i > n:
      break
    if n % i == 0:
      d += 2
      if d >= 9:
        break
  if d == 8:
    c += 1

print(c)
","```
N = int(input().strip())

c = 0
for n in range(1, N + 1, 2):
    d = 0
    for i in range(1, n + 1):
        if i * i > n:
            break
        if n % i == 0:
            d += 2
            if d >= 9:
                break
    if d == 8:
        c += 1

print(c)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8271
292,python_293,Python,"'''input
3
1
30000
20000
'''
import time
import math

n = int(input())
print(""second"" if all([int(input()) % 2 == 0 for i in range(n)]) else ""first"")
","```
'''
input
3
1
30000
20000
'''

import time
import math

n = int(input())
print(""second"" if all(int(input()) % 2 == 0 for _ in range(n)) else ""first"")
```",extreme_minor,Meta-Llama-2-7b-chat,0.9142
293,python_294,Python,"a=int(input())

print(a+a**2+a**3)","```
a = int(input())

print(a + a**2 + a**3)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8566
294,python_295,Python,"def binary(N, LIST, num):  # 二分探索 # N:探索要素数
    l, r = -1, N
    while r - l > 1:
        if LIST[(l + r) // 2] > num:  # 条件式を代入
            r = (l + r) // 2
        else:
            l = (l + r) // 2
    return r + 1


n, d, a = map(int, input().split())
xh = sorted(list(map(int, input().split())) for _ in range(n))
x = [i for i, j in xh]
h = [(j + a - 1) // a for i, j in xh]

bomb, bsum, ans = [0] * (n + 1), [0] * (n + 1), 0
for i in range(n):
    j = binary(n, x, x[i] + 2 * d) - 1
    bnum = max(h[i] - (bsum[i - 1] + bomb[i]), 0)
    bomb[i] += bnum
    bomb[j] -= bnum
    bsum[i] += bsum[i - 1] + bomb[i]
    ans += bnum
print(ans)
","```
def binary(N, LIST, num):  
    l, r = -1, N
    while r - l > 1:
        if LIST[(l + r) // 2] > num:  
            r = (l + r) // 2
        else:
            l = (l + r) // 2
    return r + 1

n, d, a = map(int, input().split())
xh = sorted(list(map(int, input().split())) for _ in range(n))
x = [i for i, j in xh]
h = [(j + a - 1) // a for i, j in xh]

bomb, bsum, ans = [0] * (n + 1), [0] * (n + 1), 0
for i in range(n):
    j = binary(n, x, x[i] + 2 * d) - 1
    bnum = max(h[i] - (bsum[i - 1] + bomb[i]), 0)
    bomb[i] += bnum
    bomb[j] -= bnum
    bsum[i] = bsum[i - 1] + bomb[i]
    ans += bnum
print(ans)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8925
295,python_296,Python,"N = int(input())

if N == 0:
    print(0)
    exit()

ans = []
x = N

while x != 1:
    if x % 2 == 0:
        ans.append('0')
    else:
        ans.append('1')
        x -= 1
    x /= -2
ans.append('1')

r = """".join(ans[::-1])
print(r)","```
N = int(input())

if N == 0:
    print(0)
    exit()

ans = []
x = N

while x!= 1:
    if x % 2 == 0:
        ans.append('0')
    else:
        ans.append('1')
        x -= 1
    x = x / -2
ans.append('1')

r = """".join(reversed(ans))
print(r)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8995
296,python_297,Python,"# coding: utf-8
r = int(input())
print(r**2)","```
# coding: utf-8

r = int(input())
print(r ** 2)",extreme_minor,Meta-Llama-2-7b-chat,0.9373
297,python_298,Python,"S = input()

if len(S) == 2:
  print(S)
if len(S) == 3:
  print(S[::-1])","```
S = input()

if len(S) == 2:
    print(S)
elif len(S) == 3:
    print(S[::-1])
```",extreme_minor,Meta-Llama-2-7b-chat,0.8001
298,python_299,Python,"N = int(input())
An = list(map(int, input().split()))
An.sort(reverse=True)
answer = 0
t = N-1
for i, Ai in enumerate(An):
    lim = 2
    if i==0:
        lim = 1
    for j in range(lim):
        if t > 0:
            answer += Ai
        t -= 1
print(answer)
","```
N = int(input())
An = list(map(int, input().split()))
An.sort(reverse=True)
answer = 0
t = N - 1
for i, Ai in enumerate(An):
    lim = 2
    if i == 0:
        lim = 1
    for _ in range(lim):
        if t > 0:
            answer += Ai
        t -= 1
print(answer)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8247
299,python_300,Python,"# -*- coding: utf-8 -*-

A, B, T = map(int, input().split())

print(T//A*B)","```
# -*- coding: utf-8 -*-

A, B, T = map(int, input().split())

print(T//A * B)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8156
300,python_301,Python,"mod = int(1e9+7)
def pot(a, b):
    result = 1
    while(b):
        if(b%2):
            result=(result*a)%mod
        a=(a*a)%mod
        b//=2
    return result

n = int(input())
print((2*(pot(10,n)-pot(9,n))-(pot(10,n)-pot(8,n)))%(mod))","```
mod = int(1e9 + 7)

def pot(a, b):
    result = 1
    while b:
        if b % 2:
            result = (result * a) % mod
        a = (a * a) % mod
        b //= 2
    return result

n = int(input())
print(((2 * (pot(10, n) - pot(9, n)) - (pot(10, n) - pot(8, n)))) % mod)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8296
301,python_302,Python,"a,b=map(int,input().split())

grid=[[""#""for i in range(100)]for j in range(50)]+[["".""for i in range(100)]for j in range(50)]
#print(grid)

print(100,100)
a-=1  #下半分がその色だから
for i in range(1,49):
    for j in range(1,99):
        if all([ grid[i+x][j+y]==""#"" for x,y in ((0,0),(0,1),(1,0),(-1,0),(0,-1),(1,1),(-1,1),(1,-1),(-1,-1))]):
            if a==0:
                break
            grid[i][j]="".""
            a-=1

            
    if a==0:
        break
b-=1
for i in range(51,99):
    for j in range(1,99):
        if all([ grid[i+x][j+y]==""."" for x,y in ((0,0),(0,1),(1,0),(-1,0),(0,-1),(1,1),(-1,1),(1,-1),(-1,-1))]):
            if b==0:
                break
            grid[i][j]=""#""
            b-=1

            
    if b==0:
        break
for i in grid:
    print("""".join(i))","```
a, b = map(int, input().split())

grid = [[""#"" for _ in range(100)] for _ in range(50)] + [[""."" for _ in range(100)] for _ in range(50)]
print(*[100, 100])
a -= 1
for i in range(1, 49):
    for j in range(1, 99):
        if all(grid[i + x][j + y] == ""#"" for x, y in [(0, 0), (0, 1), (1, 0), (-1, 0), (0, -1), (1, 1), (-1, 1), (1, -1), (-1, -1)]):
            if a == 0:
                break
            grid[i][j] = "".""
            a -= 1

    if a == 0:
        break
b -= 1
for i in range(51, 99):
    for j in range(1, 99):
        if all(grid[i + x][j + y] == ""."" for x, y in [(0, 0), (0, 1), (1, 0), (-1, 0), (0, -1), (1, 1), (-1, 1), (1, -1), (-1, -1)]):
            if b == 0:
                break
            grid[i][j] = ""#""
            b -= 1

    if b == 0:
        break
for row in grid:
    print("""".join(row))",extreme_minor,Meta-Llama-2-7b-chat,0.9566
302,python_303,Python,"# -*- coding: utf-8 -*-
import collections

def search_b(a_char, a_count, b_most_common, fixed_count):
  thres = fixed_count - a_count
  for (b_char, b_count) in [b for b in b_most_common if b[1] > thres]:
    if a_char != b_char:
      return a_count + b_count
  
  return fixed_count


def search(a_most_common, b_most_common):
  fixed_count = -1
  b_max = b_most_common[0][1]

  for (a_char, a_count) in a_most_common:
    if a_count <= fixed_count - b_max:
      break

    fixed_count = search_b(a_char, a_count, b_most_common, fixed_count)
  
  return fixed_count


def main():
  n = int(input())
  V = list(map(int, input().split()))

  a = V[::2]
  b = V[1::2]
  
  a_counter = collections.Counter(a)
  b_counter = collections.Counter(b)

  a_most_common = a_counter.most_common()
  b_most_common = b_counter.most_common()

  if len(a_most_common) == 1 and len(b_most_common) == 1 and a_most_common[0][0] == b_most_common[0][0]:
    print(n // 2)
    return

  print(n - search(a_most_common, b_most_common))


if __name__ == '__main__':
  main()
","```
# -*- coding: utf-8 -*-
import collections

def search_b(a_char, a_count, b_most_common, fixed_count):
  threshold = fixed_count - a_count
  for b_char, b_count in [b for b in b_most_common if b[1] > threshold]:
    if a_char!= b_char:
      return a_count + b_count
  
  return fixed_count

def search(a_most_common, b_most_common):
  fixed_count = -1
  b_max = b_most_common[0][1]

  for a_char, a_count in a_most_common:
    if a_count <= fixed_count - b_max:
      break

    fixed_count = search_b(a_char, a_count, b_most_common, fixed_count)
  
  return fixed_count

def main():
  n = int(input())
  V = list(map(int, input().split()))

  a = V[::2]
  b = V[1::2]
  
  a_counter = collections.Counter(a)
  b_counter = collections.Counter(b)

  a_most_common = a_counter.most_common()
  b_most_common = b_counter.most_common()

  if len(a_most_common) == 1 and len(b_most_common) == 1 and a_most_common[0][0] == b_most_common[0][0]:
    print(n // 2)
    return

  print(n - search(a_most_common, b_most_common))

if __name__ == '__main__':
  main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8958
303,python_304,Python,"n = int(input())
if n == 1:
	print (1)
	exit()
def make_divisors(N):
	divisors = []
	for i in range(1, int(N**0.5)+1):
		if N % i == 0:
			divisors.append(i)
			if i != N // i:
				divisors.append(N//i)

	# divisors.sort()
	return divisors
a = make_divisors(n)
a.sort()
c = 100
for i in a:
	if i > n//2:
		break
	j = n//i
	c = min(max(len(str(i)),len(str(j))),c)
print(c)","```
n = int(input())
if n == 1:
    print(1)
    exit()
def make_divisors(N):
    divisors = []
    for i in range(1, int(N**0.5) + 1):
        if N % i == 0:
            divisors.append(i)
            if i!= N // i:
                divisors.append(N // i)
    return sorted(divisors)
a = make_divisors(n)
c = 100
for i in a:
    if i > n // 2:
        break
    j = n // i
    c = min(max(len(str(i)), len(str(j))), c)
print(c)
```",extreme_minor,Meta-Llama-2-7b-chat,0.924
304,python_305,Python,"
n, k, c = map(int, input().split())
s = input()
l = [0] * k
r = [0] * k
p = 0
# for i in range(n):
i = 0
while i < n:
    if s[i] == ""o"":
        l[p] = i
        p += 1
        if (p >= k):
            break
        i += c
    i += 1
p = k-1
# for i in range(n - 1, -1, -1):
i = n - 1
while i >= 0:
    if s[i] == ""o"":
        r[p] = i
        p -= 1
        if (p < 0):
            break
        i -= c
    i -= 1
#print(l, r)
for i in range(k):
    if l[i] == r[i]:
        print(l[i]+1)
","```
n, k, c = map(int, input().split())
s = input()
l = [0] * k
r = [0] * k
p = 0
i = 0
while i < n:
    if s[i] == ""o"":
        l[p] = i
        p += 1
        if p >= k:
            break
    i += 1
p -= 1
i = n - 1
while i >= 0:
    if s[i] == ""o"":
        r[p] = i
        p -= 1
        if p < 0:
            break
    i -= 1
for i in range(k):
    if l[i] == r[i]:
        print(l[i] + 1)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8877
305,python_306,Python,"N=int(input())
A=list(map(int,input().split()))
plus=[a for a in A if a>0]
mainus=[a for a in A if a<=0]
plus.sort()
mainus.sort(reverse=True)
if len(mainus)==0:
    print(sum(plus)-2*plus[0])
    now=plus[0]
    for i in range(1,len(plus)-1):
        print(str(now)+"" ""+str(plus[i]))
        now-=plus[i]
    print(str(plus[-1])+"" ""+str(now))
elif len(plus)==0:
    print(-1*sum(mainus)+2*mainus[0])
    now=mainus[0]
    for i in range(1,len(mainus)):
        print(str(now)+"" ""+str(mainus[i]))
        now-=mainus[i]
else:
    print(sum(plus)-sum(mainus))
    now=mainus[0]
    for i in range(len(plus)-1):
        print(str(now)+"" ""+str(plus[i]))
        now-=plus[i]
    if len(plus)>0:
        print(str(plus[-1])+"" ""+str(now))
        now=plus[-1]-now
    for i in range(1,len(mainus)):
        print(str(now)+"" ""+str(mainus[i]))
        now-=mainus[i]","```
N = int(input())
A = list(map(int, input().split()))
plus = [a for a in A if a > 0]
minus = [a for a in A if a <= 0]
plus.sort()
minus.sort(reverse=True)
if len(minus) == 0:
    print(sum(plus) - 2 * plus[0])
    now = plus[0]
    for i in range(1, len(plus) - 1):
        print(str(now) + "" "" + str(plus[i]))
        now -= plus[i]
    print(str(plus[-1]) + "" "" + str(now))
elif len(plus) == 0:
    print(-1 * sum(minus) + 2 * minus[0])
    now = minus[0]
    for i in range(1, len(minus)):
        print(str(now) + "" "" + str(minus[i]))
        now -= minus[i]
else:
    print(sum(plus) - sum(minus))
    now = minus[0]
    for i in range(len(plus) - 1):
        print(str(now) + "" "" + str(plus[i]))
        now -= plus[i]
    if len(plus) > 0:
        print(str(plus[-1]) + "" "" + str(now))
        now = plus[-1] - now
    for i in range(1, len(minus)):
        print(str(now) + "" "" + str(minus[i]))
        now -= minus[i]
```",extreme_minor,Meta-Llama-2-7b-chat,0.9337
306,python_307,Python,"from itertools import accumulate
import sys
input = sys.stdin.readline

def main():
    n,c = map(int,input().split())
    x1,v1 = [0],[0]
    for _ in range(n):
        a,b = map(int, input().split())
        x1.append(a)
        v1.append(b)
    x2 = [0]
    v2 = [0]
    for i in range(n,0,-1):
        x2.append(c-x1[i])
        v2.append(v1[i])

    v1, v2 = list(accumulate(v1)), list(accumulate(v2))
    g1,g2 = [v2[0]-x2[0]],[v2[0]-2*x2[0]]
    for i in range(1,n+1):
        f = v2[i] - x2[i]
        f2 = v2[i] - 2*x2[i]
        g1.append(max(g1[i-1],f))
        g2.append(max(g2[i-1],f2))
    val = max(v1[n]-x1[n] + g2[0], v1[n]-2*x1[n] + g1[0])
    for i in range(1,n+1):
        val = max(val, v1[n-i]-x1[n-i] + g2[i], v1[n-i]-2*x1[n-i] + g1[i])

    print(val)

if __name__=='__main__': main()","```
from itertools import accumulate
import sys
input = sys.stdin.readline

def main():
    n, c = map(int, input().split())
    x1, v1 = [0], [0]
    for _ in range(n):
        a, b = map(int, input().split())
        x1.append(a)
        v1.append(b)
    x2 = [0]
    v2 = [0]
    for i in range(n, 0, -1):
        x2.append(c - x1[i])
        v2.append(v1[i])

    v1, v2 = list(accumulate(v1)), list(accumulate(v2))
    g1, g2 = [v2[0] - x2[0]], [v2[0] - 2 * x2[0]]
    for i in range(1, n + 1):
        f = v2[i] - x2[i]
        f2 = v2[i] - 2 * x2[i]
        g1.append(max(g1[i - 1], f))
        g2.append(max(g2[i - 1], f2))
    val = max(v1[n] - x1[n] + g2[0], v1[n] - 2 * x1[n] + g1[0])
    for i in range(1, n + 1):
        val = max(val, v1[n - i] - x1[n - i] + g2[i], v1[n - i] - 2 * x1[n - i] + g1[i])

    print(val)

if __name__ == '__main__':
    main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.8729
307,python_308,Python,"M=10**9+7
n,k,*l=map(int,open(0).read().split())
lp,lm=[],[]
for i in l:
  if i<0: lm+=[i]
  else: lp+=[i]
cp,cm=len(lp),len(lm)
ok=0
if cp:
  if n==k: ok=1-cm%2
  else: ok=1
else: ok=1-k%2
a=1
if ok<1:
  l.sort(key=lambda x:abs(x))
  for i in range(k): a=a*l[i]%M
else:
  lp.sort()
  lm.sort(reverse=1)
  if k%2: a=lp.pop()
  p=[]
  while len(lp)>1: p+=[lp.pop()*lp.pop()]
  while len(lm)>1: p+=[lm.pop()*lm.pop()]
  p.sort(reverse=1)
  for i in range(k//2): a=a*p[i]%M
print(a)","```
M = 10**9 + 7
n, k, *l = map(int, open(0).read().split())
lp, lm = [], []
for i in l:
    if i < 0: lm.append(i)
    else: lp.append(i)
cp, cm = len(lp), len(lm)
ok = 0
if cp:
    if n == k: ok = 1 - cm % 2
    else: ok = 1
else: ok = 1 - k % 2
a = 1
if ok < 1:
    l.sort(key=lambda x: abs(x))
    for i in range(k): a = (a * l[i]) % M
else:
    lp.sort()
    lm.sort(reverse=True)
    if k % 2: a = lp.pop()
    p = []
    while len(lp) > 1: p.append(lp.pop() * lp.pop())
    while len(lm) > 1: p.append(lm.pop() * lm.pop())
    p.sort(reverse=True)
    for i in range(k // 2): a = (a * p[i]) % M
print(a)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8691
308,python_309,Python,"n = int(input())
a = int(input())
print('Yes' if n % 500 <= a else 'No')","```
n = int(input())
a = int(input())
print('Yes' if n % 500 <= a else 'No')
```",extreme_minor,Meta-Llama-2-7b-chat,0.8579
309,python_310,Python,"from itertools import groupby

s = list(input())
ans = [0]*len(s)
ind = 0

for k,v in groupby(s):
  key,value = k,len(list(v))
  ind += value
  
  if k == 'R':
    if value%2 != 0:
      ans[ind-1] += (value//2)+1
      ans[ind] += value//2
    else:
      ans[ind-1] += value//2
      ans[ind] += value//2
  else:
    if value%2 != 0:
      ans[ind -value] += (value//2) + 1
      ans[ind-1- value] += (value//2) 
    else:
      ans[ind -value] += value//2
      ans[ind -1- value] += value//2
      
print(*ans)","```
from itertools import groupby

s = list(input())
ans = [0] * len(s)
ind = 0

for k, v in groupby(s):
    key, value = k, len(list(v))
    ind += value

    if k == 'R':
        if value % 2!= 0:
            ans[ind - 1] += (value // 2) + 1
            ans[ind] += value // 2
        else:
            ans[ind - 1] += value // 2
            ans[ind] += value // 2
    else:
        if value % 2!= 0:
            ans[ind - value] += (value // 2) + 1
            ans[ind - 1 - value] += value // 2
        else:
            ans[ind - value] += value // 2
            ans[ind - 1 - value] += value // 2

print(*ans)",extreme_minor,Meta-Llama-2-7b-chat,0.983
310,python_311,Python,"n,m = map(int,input().split())

ansl = []

start = n // 2
end = n // 2 + 1
for i in range(m):
    if n % 2 == 0 and end - start + 2 * i >= n // 2:
        ansl.append((start - i-1, end + i))
    else:
        ansl.append((start-i, end+i))

for a,b in sorted(ansl):
    print(a,b)
","```
n, m = map(int, input().split())

ansl = []

start = n // 2
end = n // 2 + 1
for i in range(m):
    if n % 2 == 0 and end - start + 2 * i >= n // 2:
        ansl.append((start - i - 1, end + i))
    else:
        ansl.append((start - i, end + i))

for a, b in sorted(ansl):
    print(a, b)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8844
311,python_312,Python,"from operator import itemgetter
N,M = map(int,input().split())
S = [list(map(int,input().split()))+[i] for i in range(M)]

S.sort(key=itemgetter(1))
S.sort(key=itemgetter(0))
p = 0
m = 0
j = 1
while m < M:
    if S[m][0] == p:
        S[m][1] = j
        j += 1
        m += 1
    else:
        p += 1
        j = 1
        continue
S.sort(key=itemgetter(2))
for i in range(M):
    print(str(S[i][0]).zfill(6)+str(S[i][1]).zfill(6))

","```
from operator import itemgetter
N, M = map(int, input().split())
S = [list(map(int, input().split())) + [i] for i in range(M)]
S.sort(key=itemgetter(1))
S.sort(key=itemgetter(0))
p, m, j = 0, 0, 1
while m < M:
    if S[m][0] == p:
        S[m][1] = j
        j += 1
        m += 1
    else:
        p += 1
        j = 1
for i in range(M):
    print(str(S[i][0]).zfill(6) + str(S[i][1]).zfill(6))
```",extreme_minor,Meta-Llama-2-7b-chat,0.9223
312,python_313,Python,"def main():
    N = int(input())
    A = [list(map(int, input().split())) for _ in range(N)]
    ans = 0
    for i in range(N):
        A[i][i] = float('INF')
    for i in range(N):
        for j in range(i):
            if i == j:
                A[i][j] = float('INF')
                continue
            b = min(map(sum, zip(A[i], A[j])))
            if A[i][j] > b:
                print(-1)
                return
            if b > A[i][j]:
                ans += A[i][j]
    print(ans)


main()
","```
def main():
    N = int(input())
    A = [list(map(int, input().split())) for _ in range(N)]
    ans = 0
    for i in range(N):
        A[i][i] = float('inf')
    for i in range(N):
        for j in range(i):
            if i == j:
                A[i][j] = float('inf')
                continue
            b = min(sum(x) for x in zip(A[i], A[j]))
            if A[i][j] > b:
                print(-1)
                return
            if b > A[i][j]:
                ans += A[i][j]
    print(ans)


main()
```",extreme_minor,Meta-Llama-2-7b-chat,0.9063
313,python_314,Python,"#import sys
#import numpy as np
import math
#from fractions import Fraction
import itertools
from collections import deque
from collections import Counter
#import heapq
from fractions  import gcd
#input=sys.stdin.readline
import bisect
n,m=map(int,input().split())
a=list(map(int,input().split()))

s=[0]*n
a.sort()
s[0]=a[0]
for i in range(1,n):
    s[i]=s[i-1]+a[i]
res=0
l=0
r=2*a[-1]+1
while r>l+1:
    x=(l+r)//2
    res=0
    for ai in a:
        j=x-ai
        cnt=bisect.bisect_left(a,j)
        res+=(n-cnt)
    if res<m:
        r=x
    else:
        l=x
ans=0
c=0
for ai in a:
    cnt=bisect.bisect_left(a,l-ai)
    ans=ans+ai*(n-cnt)+(s[-1]-s[cnt-1]) if cnt!=0 else ans+ai*(n-cnt)+s[-1]
    c+=(n-cnt)
ans-=(c-m)*l
print(ans)
","```
import math
import itertools
from collections import deque, Counter
from fractions import gcd
import bisect

n, m = map(int, input().split())
a = list(map(int, input().split()))

s = [0] * n
a.sort()
s[0] = a[0]
for i in range(1, n):
    s[i] = s[i - 1] + a[i]

res = 0
l = 0
r = 2 * a[-1] + 1
while r > l + 1:
    x = (l + r) // 2
    res = 0
    for ai in a:
        j = x - ai
        cnt = bisect.bisect_left(a, j)
        res += (n - cnt)
    if res < m:
        r = x
    else:
        l = x

ans = 0
c = 0
for ai in a:
    cnt = bisect.bisect_left(a, l - ai)
    ans = ans + ai * (n - cnt) + (s[-1] - s[cnt - 1]) if cnt!= 0 else ans + ai * (n - cnt) + s[-1]
    c += (n - cnt)
ans -= (c - m) * l
print(ans)",extreme_minor,Meta-Llama-2-7b-chat,0.9757
314,python_315,Python,"
s = input()
while True:
    s = s[0:-1]
    c = s[0:len(s)//2]
    if s == c*2:
        print(len(s))
        exit()","```
s = input()
while True:
    s = s[:-1]
    c = s[:len(s)//2]
    if s == c*2:
        print(len(s))
        break
```",extreme_minor,Meta-Llama-2-7b-chat,0.8615
315,python_316,Python,"import math
import itertools
row_length = int(input())
point = {}
for i in range(row_length):
    point[i] = list(map(int, input().split()))
point_list = [point[x] for x in range(len(point))]
pattern_list = list(itertools.permutations(point_list))



def calc_dist(pat_list): #旅程リストを入れた時に、その距離を計算する
    dist = 0
    for i in range(len(pat_list)-1):
        dist += math.sqrt(pow(pat_list[i][0] - pat_list[i+1][0], 2) + pow(pat_list[i][1] - pat_list[i+1][1], 2))
    return dist

ans_dist = 0
for j_list in pattern_list:
    ans_dist += calc_dist(j_list)

print(ans_dist/len(pattern_list))","```
import math
import itertools

row_length = int(input())
point = {}
for i in range(row_length):
    point[i] = list(map(int, input().split()))

point_list = [point[x] for x in range(len(point))]
pattern_list = list(itertools.permutations(point_list))

def calc_dist(pat_list):
    dist = 0
    for i in range(len(pat_list) - 1):
        dist += math.sqrt((pat_list[i][0] - pat_list[i + 1][0]) ** 2 + (pat_list[i][1] - pat_list[i + 1][1]) ** 2)
    return dist

ans_dist = 0
for j_list in pattern_list:
    ans_dist += calc_dist(j_list)

print(ans_dist / len(pattern_list))
```",extreme_minor,Meta-Llama-2-7b-chat,0.907
316,python_317,Python,"MOD=998244353
N,M,K=map(int,input().split())

inv_table = [0]+[1]
for i in range(2,K+2):
  inv_table.append(-(MOD//i)*inv_table[MOD%i]%MOD)

def powmod(a,p):
  if p==0:
    return 1
  else:
    pow2=powmod(a,p//2)
    if p%2==0:
      return (pow2**2)%MOD
    else:
      return (a*pow2**2)%MOD
def invmod(a):
  return powmod(a,MOD-2)

if M==1 and K<N-1:
  print(0)
elif K==N-1:
  print(powmod(M,N))
else:
  ans=0
  term1=powmod(M-1,N-1)
  term2=1
  inv_M1=invmod(M-1)
  for i in range(K+1):
    ans+=term1*term2
    ans%=MOD
    term1=term1*inv_M1%MOD
    term2=term2*(N-i-1)*inv_table[i+1]%MOD
    
  answer=M*ans%MOD
  print(answer)","```
MOD = 998244353
N, M, K = map(int, input().split())

inv_table = [0] + [1]
for i in range(2, K + 2):
    inv_table.append(-(MOD // i) * inv_table[MOD % i] % MOD)

def powmod(a, p):
    if p == 0:
        return 1
    else:
        pow2 = powmod(a, p // 2)
        if p % 2 == 0:
            return (pow2 ** 2) % MOD
        else:
            return (a * pow2 ** 2) % MOD

def invmod(a):
    return powmod(a, MOD - 2)

if M == 1 and K < N - 1:
    print(0)
elif K == N - 1:
    print(powmod(M, N))
else:
    ans = 0
    term1 = powmod(M - 1, N - 1)
    term2 = 1
    inv_M1 = invmod(M - 1)
    for i in range(K + 1):
        ans += term1 * term2
        ans %= MOD
        term1 = (term1 * inv_M1) % MOD
        term2 = (term2 * (N - i - 1) * inv_table[i + 1]) % MOD
    
    answer = (M * ans) % MOD
    print(answer)
```",extreme_minor,Meta-Llama-2-7b-chat,0.8085
