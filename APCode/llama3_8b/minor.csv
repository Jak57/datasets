,id,language,original,polished,polish_type,model,sem_similarity
0,python_1,Python,"#dt = {} for i in x: dt[i] = dt.get(i,0)+1
import sys;input = sys.stdin.readline
inp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]

import sys
sys.setrecursionlimit(10**6)

def dfs(u):
    global grpah,vis,dp
    vis[u] = 1
    for i in graph[u]:
        if not vis[i]:
            dfs(i)
        dp[u] = max(dp[u],dp[i] + 1)

n,m = ip()
graph = {i:[] for i in range(1,n+1)}
for i in range(m):
    a,b = ip()
    graph[a].append(b)

dp = [0]*(n+1)
vis = [0]*(n+1)
for i in range(1,n+1):
    if not vis[i]:
        dfs(i)
#print(dp)
print(max(dp))","```
import sys
from collections import defaultdict

input = sys.stdin.readline
inp, ip = lambda: int(input()), lambda: [int(w) for w in input().split()]

n, m = ip()
graph = defaultdict(list)
for _ in range(m):
    a, b = ip()
    graph[a].append(b)

dp = [0] * (n + 1)
vis = [0] * (n + 1)

for i in range(1, n + 1):
    if not vis[i]:
        dfs(i)

print(max(dp))


def dfs(u):
    global graph, vis, dp
    vis[u] = 1
    for i in graph[u]:
        if not vis[i]:
            dfs(i)
        dp[u] = max(dp[u], dp[i] + 1)
```",minor,Meta-Llama-2-7b-chat,0.8995
1,python_2,Python,"n = int(input())
ans = 'ABC' if n < 1000 else 'ABD'
print(ans)
","```
n = int(input())
print('ABC' if n < 1000 else 'ABD')
```",minor,Meta-Llama-2-7b-chat,0.878
2,python_3,Python,"N,M = list(map(int,input().split()))

X = []

for i in range(N):
    x,y,z = list(map(int,input().split()))
    X.append([x,y,z])

max_score = 0
for i in range(8):
    a = i%2
    j = i//2
    b = j%2
    k = j//2
    c = k%2
    a,b,c = 2*a-1,2*b-1,2*c-1
    Z = []
    for j in range(N):
        Z.append(a*X[j][0]+b*X[j][1]+c*X[j][2])
    Z.sort(reverse=True)
    max_score = max(sum(Z[:M]),max_score)

print(max_score)","```
N, M = map(int, input().split())

X = []
for _ in range(N):
    x, y, z = map(int, input().split())
    X.append([x, y, z])

max_score = 0
for i in range(8):
    a, b, c = ((i % 2) * 2 - 1, (i // 2 % 2) * 2 - 1, (i // 4) * 2 - 1)
    Z = [a * x + b * y + c * z for x, y, z in X]
    Z.sort(reverse=True)
    max_score = max(sum(Z[:M]), max_score)

print(max_score)
```",minor,Meta-Llama-2-7b-chat,0.8956
3,python_4,Python,"import sys
from collections import Counter
readline = sys.stdin.readline

N = int(readline())
A = list(map(int, readline().split()))
MOD = 1000000007

def calc(A):
    CA = Counter(A)
    if max(CA.values()) > 3:
        return 0
    
    pop = [0]*(N+3)
    pop[-1] = 3
    
    res = 1
    for a in A:
        if pop[a-1] <= 0:
            return 0
        res = (res*pop[a-1]) %MOD
        pop[a-1] -= 1
        pop[a] += 1
        
    
    
        
    return res
        

print(calc(A))","```
import sys
from collections import Counter
readline = sys.stdin.readline

N = int(readline())
A = list(map(int, readline().split()))
MOD = 1000000007

def calculate_population(A):
    population = Counter(A)
    if max(population.values()) > 3:
        return 0

    population_counts = [0] * (N + 3)
    population_counts[-1] = 3

    result = 1
    for a in A:
        if population_counts[a - 1] <= 0:
            return 0
        result = (result * population_counts[a - 1]) % MOD
        population_counts[a - 1] -= 1
        population_counts[a] += 1

    return result

print(calculate_population(A))
```",minor,Meta-Llama-2-7b-chat,0.8263
4,python_5,Python,"N, K = map(int, input().split())
H = list(map(int, input().split()))

a = N-K
if a < 0:
    ans = 0
else:
    h = sorted(H)[:a]
    ans = sum(h)
print(ans)","```
N, K = map(int, input().split())
H = sorted(map(int, input().split()))

a = N - K
ans = sum(H[:a]) if a > 0 else 0
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8263
5,python_6,Python,"a,b,c = map(int, input().split())

if (a <= c and c <= b) or (b <= c and c <= a):
    print(""Yes"")
else:
    print(""No"")
","```
a, b, c = map(int, input().split())

if a <= c <= b:
    print(""Yes"")
else:
    print(""No"")
```",minor,Meta-Llama-2-7b-chat,0.8122
6,python_7,Python,"L = input()

N = len(L)
mod = int(1e9 + 7)

# 桁DP
# a+b <= N 確定
dp1 = [0] * N
# a+b <= N 未確定
dp2 = [0] * N

# L[0] == 1なので、初期値が決まる（はず）
dp1[0] = 1 # (A0,B0) = (0,0)
dp2[0] = 2 # (A0,B0) = (0,1), (1,0)

for i in range(1,N):
  dp1[i] += dp1[i-1] * 3 # (1,1)以外の3パターン
  dp1[i] %= mod
  if L[i] == '1':
    dp1[i] += dp2[i-1] # (0,0)
    dp2[i] += dp2[i-1] * 2 # (1,0),(0,1)
  else:
    # L[i] == '0'
    dp2[i] += dp2[i-1] # (0,0)
  dp1[i] %= mod
  dp2[i] %= mod
  
print((dp1[N-1] + dp2[N-1]) % mod)","```
L = input()

N = len(L)
mod = int(1e9 + 7)

dp = [[0, 0] for _ in range(N)]

dp[0][0] = 1
dp[0][1] = 2

for i in range(1, N):
    dp[i][0] = (dp[i-1][0] * 3) % mod
    dp[i][1] = (dp[i-1][1] * 2) % mod
    if L[i] == '1':
        dp[i][0] = (dp[i-1][0] + dp[i-1][1]) % mod
        dp[i][1] = (dp[i-1][1] * 2) % mod
    else:
        dp[i][1] = (dp[i-1][1] + dp[i-1][1]) % mod
    print(dp)

print((dp[N-1][0] + dp[N-1][1]) % mod)
```",minor,Meta-Llama-2-7b-chat,0.8578
7,python_8,Python,"n, a, b = [int(_) for _ in input().split()]
m = a + b - n
if m < 0:
    m = 0
print(min(a, b), m)","```
n, a, b = map(int, input().split())
m = max(0, a + b - n)
print(min(a, b), m)
```",minor,Meta-Llama-2-7b-chat,0.8212
8,python_9,Python,"from collections import defaultdict

N, K = map(int, input().split())
A = list(map(int, input().split()))

d = defaultdict(list)

p = 1
root = []

#s, e = 0, 0

for i in range(K):
    d[p].append(i)
    root.append(p)
    if len(d[p]) == 2:
        s = d[p][0]
        e = i
        n = (K - s) % (e - s)
        p = root[s + n]
        break
    p = A[p - 1]
#print(s, e)

#print(root)

#n = (K - s) % (e - s)
print(p)","```
from collections import defaultdict

N, K = map(int, input().split())
A = list(map(int, input().split()))

d = defaultdict(list)

root = 1
end_index = 0

for i in range(K):
    d[root].append(i)
    if len(d[root]) == 2:
        start_index = d[root][0]
        end_index = i
        break
    root = A[root - 1]

print(root)
```",minor,Meta-Llama-2-7b-chat,0.8257
9,python_10,Python,"N = int(input())
S1 = input()
S2 = input()
i = 0
T = []
while i < N:
    if S1[i]==S2[i]:
        T.append(""C"")
    else:
        T.append(""R"")
        i += 1
    i += 1
Ans = 3 if T[0]==""C"" else 6
for i in range(1,len(T)):
    if T[i-1] == ""C"":
        if T[i] == ""C"":
            Ans *= 2
        else:
            Ans *= 2
    else:
        if T[i] == ""C"":
            Ans *= 1
        else:
            Ans *= 3
    Ans %= 10**9+7
print(Ans)","```
N = int(input())
S1, S2 = input(), input()
T = []
for i in range(N):
    if S1[i] == S2[i]:
        T.append(""C"")
    else:
        T.append(""R"")
Ans = 3 if T[0] == ""C"" else 6
for i in range(1, len(T)):
    if T[i-1] == ""C"":
        Ans *= 2 if T[i] == ""C"" else 1
    else:
        Ans *= 3 if T[i] == ""C"" else 2
    Ans %= 10**9+7
print(Ans)
```",minor,Meta-Llama-2-7b-chat,0.8955
10,python_11,Python,"# ABC136A

a, b, c = map(int, input().split())
print(max(0, c-(a-b)))
","```
a, b, c = map(int, input().split())
print(max(0, c - (a - b)))
```",minor,Meta-Llama-2-7b-chat,0.7803
11,python_12,Python,"n=int(input())

k=2
while(2*n > k*(k-1)):
    k+=1

if(2*n!=k*(k-1)):
    print(""No"")
else:
    print(""Yes"")
    print(k)
    tmp=0
    result=[[0]*(k-1) for i in range(k)]
    for i in range(k):
        for j in range(i):
            result[i][j]=result[j][i-1]
        for l in range(k-i-1):
            tmp+=1
            result[i][i+l]=tmp
        
    for j in range(k):
        print(""{} "".format(k-1),end="""")
        for i in range(k-2):
            print(""{} "".format(result[j][i]),end="""")
        print(result[j][k-2])","```
n = int(input())

k = 2
while 2 * n > k * (k - 1):
    k += 1

if 2 * n!= k * (k - 1):
    print(""No"")
else:
    print(""Yes"")
    print(k)
    result = [[0] * (k - 1) for _ in range(k)]
    for i in range(k):
        for j in range(i):
            result[i][j] = result[j][i - 1]
        for _ in range(k - i - 1):
            result[i][i + _] = tmp := tmp + 1
        
    for row in result:
        print("" "".join(str(x) for x in row))
```",minor,Meta-Llama-2-7b-chat,0.8794
12,python_13,Python,"N=int(input())

if N % 1000 == 0:
    print(0)
else:
    print(1000 - N%1000)","```
N = int(input())

if N % 1000!= 0:
    print(1000 - N % 1000)
else:
    print(0)
```",minor,Meta-Llama-2-7b-chat,0.831
13,python_14,Python,"N = int(input())
X = list(map(int, input().split()))

sorted_X = sorted(X)

left_med = sorted_X[N//2 -1]
right_mid = sorted_X[N//2]

for i in range(N):
    if X[i] <= left_med:
        print(right_mid)
    else:
        print(left_med)","```
n = int(input())
x = list(map(int, input().split()))

sorted_x = sorted(x)

mid = sorted_x[n//2]
left = sorted_x[n//2 - 1] if n % 2 else mid

for i in range(n):
    if x[i] <= left:
        print(mid)
    else:
        print(left)
```",minor,Meta-Llama-2-7b-chat,0.8532
14,python_15,Python,"s = input()

for i in range(97, 97 + 26):
    if chr(i) not in s:
        print(chr(i))
        break

else:
    print(None)
","```
s = input()

for i in range(97, 123):
    if chr(i) not in s:
        print(chr(i))
        break
else:
    print(None)
```",minor,Meta-Llama-2-7b-chat,0.839
15,python_16,Python,"n, c = map(int, input().split())
r = [[0 for i in range(c)] for j in range(100000)]  # テレビ局の番組表
for dummy in range(n):  # 入力
    s, t, c = map(int, input().split())
    for j in range(s - 1, t):
        r[j][c - 1] = 1  # 放送中なら1
ans = 0
for i in range(100000):
    if sum(r[i]) > ans:
        ans = sum(r[i])  # 同時に放送されている番組の最大数
print(ans)","```
n, c = map(int, input().split())
program_schedule = [[0 for _ in range(c)] for _ in range(100000)]

for _ in range(n):
    start, end, channel = map(int, input().split())
    for i in range(start - 1, end):
        program_schedule[i][channel - 1] = 1

max_programs = 0
for row in program_schedule:
    max_programs = max(max_programs, sum(row))

print(max_programs)
```",minor,Meta-Llama-2-7b-chat,0.797
16,python_17,Python,"C1 = input()
C2 = input()

if C2 == C1[::-1]:
    print('YES')
else:
    print('NO')","```
reversed_str = input()
original_str = input()

if original_str == reversed_str:
    print('YES')
else:
    print('NO')
```",minor,Meta-Llama-2-7b-chat,0.7955
17,python_18,Python,"A, B = map(int, input().split())
a = 0
for i in range(A, B+1):
    i = str(i)
    if i == i[::-1]:
        a += 1
print(a)","```
a, b = map(int, input().split())
count = 0
for i in range(a, b+1):
    i_str = str(i)
    if i_str == i_str[::-1]:
        count += 1
print(count)
```",minor,Meta-Llama-2-7b-chat,0.8191
18,python_19,Python,"import sys
from math import gcd
from functools import reduce

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines
sys.setrecursionlimit(10 ** 9)
INF = 1 << 60
MOD = 1000000007


def main():
    N, *A = map(int, read().split())

    print(reduce(gcd, A))
    return


if __name__ == '__main__':
    main()
","```
import sys
from math import gcd
from functools import reduce

read = sys.stdin.read
N, *A = map(int, read().split())

print(reduce(gcd, A))
```",minor,Meta-Llama-2-7b-chat,0.8023
19,python_20,Python,"n = int(input())
v_list = map(int, input().split())
c_list = map(int, input().split())
sum = 0

for v, c in zip(v_list, c_list):
    if v - c > 0:
        sum += v - c

print(sum)
","```
n = int(input())
values, costs = map(int, input().split()), map(int, input().split())
profit = 0

for value, cost in zip(values, costs):
    if value > cost:
        profit += value - cost

print(profit)
```",minor,Meta-Llama-2-7b-chat,0.7407
20,python_21,Python,"# 色の塗り方は全部で何通りか。O(C^3)で、C^3 = 27000通り。
# 各塗り方に対していちいち計算していると最大25000マスで、これだと間に合わない。
# 3つに別れた各部分を各色に変えるコスト合計を前計算しておけば良い。O(C^3 + N^2 C)。
# 一ひねりした全探索。

n, c = list(map(int, input().split()))
change_cost = [list(map(int, input().split())) for _ in range(c)]
init_color = [list(map(int, input().split())) for _ in range(n)]

cost = [[0 for _ in range(c)] for _ in range(3)]

for row in range(n):
    for col in range(n):
        before = init_color[row][col] - 1
        for after in range(c):
            idx = (row + col) % 3
            cost[idx][after] += change_cost[before][after]

ans = 1000 * 500 * 500 * 10
for ci in range(c):
    for cj in range(c):
        for ck in range(c):
            if (ci != cj != ck != ci):
                ans = min(ans, cost[0][ci] + cost[1][cj] + cost[2][ck])

print(ans)
","```
n, c = map(int, input().split())
change_cost = [list(map(int, input().split())) for _ in range(c)]
init_color = [list(map(int, input().split())) for _ in range(n)]

cost = [[0] * c for _ in range(3)]
for row in range(n):
    for col in range(n):
        before = init_color[row][col] - 1
        for after in range(c):
            idx = (row + col) % 3
            cost[idx][after] += change_cost[before][after]

ans = 1e10
for ci in range(c):
    for cj in range(c):
        for ck in range(c):
            if ci!= cj!= ck!= ci:
                ans = min(ans, sum(cost[i][j] for i, j in zip((0, 1, 2), (ci, cj, ck))))

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8424
21,python_22,Python,"N = int(input())
e = [0] * (N+1)
for i in range(2, N+1):
  cur = i
  for j in range(2, i+1):
    while cur % j == 0:
      e[j] += 1
      cur //= j

def num(m):
  return len(list(filter(lambda x: x >= m-1, e)))

print(num(75)+num(25)*(num(3)-1)+num(15)*(num(5)-1)+num(5)*(num(5)-1)*(num(3)-2)//2)","```
N = int(input())
e = [0] * (N+1)
for i in range(2, N+1):
    cur = i
    for j in range(2, int(i**0.5) + 1):
        while cur % j == 0:
            e[j] += 1
            cur //= j

def count(m):
    return sum(1 for x in e if x >= m-1)

print(count(75) + count(25) * (count(3) - 1) + count(15) * (count(5) - 1) + count(5) * (count(5) - 1) * (count(3) - 2) // 2)
```",minor,Meta-Llama-2-7b-chat,0.8595
22,python_23,Python,"a,b,c=map(int,input().split())
if ((b-a)==(c-b)):
    print (""YES"")
else:
    print(""NO"")","```
a, b, c = map(int, input().split())
if b - a == c - b:
    print(""YES"")
else:
    print(""NO"")
```",minor,Meta-Llama-2-7b-chat,0.8222
23,python_24,Python,"x = [int(i) for i in input().split()]
print(x.index(0) + 1)","```
numbers = [int(i) for i in input().split()]
if 0 in numbers:
    print(numbers.index(0) + 1)
else:
    print(""0 not found in the list"")
```",minor,Meta-Llama-2-7b-chat,0.8567
24,python_25,Python,"a, v = map(int, input().split())
b, w = map(int, input().split())
t = int(input())
 
position_diff = abs(a-b)
pace_diff = v-w
 
if pace_diff <= 0:
    print('NO')
elif pace_diff > 0:
    if pace_diff * t >= position_diff:
        print('YES')
    else:
        print('NO')","```
a, v = map(int, input().split())
b, w = map(int, input().split())
t = int(input())

pace_diff = abs(v - w)
position_diff = abs(a - b)

if pace_diff <= 0:
    print('NO')
elif pace_diff * t >= position_diff:
    print('YES')
else:
    print('NO')
```",minor,Meta-Llama-2-7b-chat,0.8105
25,python_26,Python,"n = int(input())
*A, = map(int, input().split())

from itertools import product

ans = 0
for P in product(range(3), repeat=n):
    even = 0
    for i in range(n):
        b = A[i] + P[i] - 1
        even |= (b % 2) == 0
    if even:
        ans += 1
print(ans)","```
n = int(input())
numbers = list(map(int, input().split()))

from itertools import product

result = 0
for P in product(range(3), repeat=n):
    is_even = any((A + P - 1) % 2 == 0 for A in numbers)
    if is_even:
        result += 1

print(result)
```",minor,Meta-Llama-2-7b-chat,0.8318
26,python_27,Python,"n = int(input())
H = list(map(int, input().split()))

# シミュレーションで求められる
# 目標地点からさかのぼる

ans = 0
for _ in range(max(H)):
    flg = False
    for i in range(n):
        if H[i] > 0:
            H[i] -= 1
            if not flg:
                ans += 1
                flg = True
        elif H[i] == 0:
            flg = False

print(ans)","```
n = int(input())
heights = list(map(int, input().split()))

ans = 0
max_height = max(heights)
for _ in range(max_height):
    can_increase = False
    for height in heights:
        if height > 0:
            height -= 1
            if not can_increase:
                ans += 1
                can_increase = True
        elif height == 0:
            can_increase = False
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.7791
27,python_28,Python,"S = input().replace('BC', 'D')

tmp = 0
ans = 0
for s in S:
    if s == 'A':
        tmp += 1
    elif s == 'D':
        ans += tmp
    else:
        tmp = 0
print(ans)","```
S = input().replace('BC', 'D')

count = 0
result = 0
for char in S:
    if char == 'A':
        count += 1
    elif char == 'D':
        result += count
        count = 0
    else:
        count = 0
print(result)
```",minor,Meta-Llama-2-7b-chat,0.8354
28,python_29,Python,"n = int(input())
a = list(map(int, input().split()))
c = [0]*(10**6 + 1)

for i in a:
    c[i] += 1

cnt = 0

for i in range(2, 10**6 + 1):
    s = sum(c[i::i])
    if s == n:
        print(""not coprime"")
        exit()
    elif s > 1:
        cnt += 1

if cnt > 0:
    print(""setwise coprime"")
else:
    print(""pairwise coprime"")","```
n = int(input())
a = list(map(int, input().split()))
c = [0] * (10**6 + 1)

for i in a:
    c[i] += 1

is_setwise_coprime = True
for i in range(2, 10**6 + 1):
    s = sum(c[i::i])
    if s == n:
        print(""not coprime"")
        exit()
    elif s > 1:
        is_setwise_coprime = False

if is_setwise_coprime:
    print(""pairwise coprime"")
else:
    print(""setwise coprime"")
```",minor,Meta-Llama-2-7b-chat,0.9011
29,python_30,Python,"n,m = map(int,input().split())

ans = 0

ans += m * 1900
ans += (n-m) * 100

print(ans * 2 ** m)
","```
n, m = map(int, input().split())

answer = n * 1900 + (n - m) * 100

print(answer * 2 ** m)
```",minor,Meta-Llama-2-7b-chat,0.8795
30,python_31,Python,"A, B = map(int, input().split())

if A % 2 == 1 and B % 2 == 1:
  print('Yes')
else:
  print('No')","```
a, b = map(int, input().split())

if a % 2!= 0 and b % 2!= 0:
  print('Yes')
else:
  print('No')
```",minor,Meta-Llama-2-7b-chat,0.8392
31,python_32,Python,"from operator import mul
from functools import reduce
 
 
def cmb(n, r):
    if r > n:
        return 0
    r = min(n-r, r)
    if r == 0:
        return 1
    over = reduce(mul, range(n, n - r, -1))
    under = reduce(mul, range(1, r + 1))
    return over // under
  
N,K= map(int, input().split())
red = N - K
for i in range(K):
    bluesc = cmb(K - 1 , i)
    redsc = cmb(red + 1 , i + 1) 
    ans = (redsc * bluesc) % (10**9+7)
    print(ans)","```
from operator import mul
from functools import reduce

def comb(n, r):
    if r > n:
        return 0
    r = min(n-r, r)
    if r == 0:
        return 1
    return reduce(mul, range(1, r+1), 1) * reduce(mul, range(n-r+1, n+1), 1, 1//) % (10**9+7)

N, K = map(int, input().split())
red = N - K
for i in range(K):
    bluesc = comb(K-1, i)
    redsc = comb(red+1, i+1)
    print((redsc * bluesc) % (10**9+7))
```",minor,Meta-Llama-2-7b-chat,0.8934
32,python_33,Python,"# -*- coding: utf-8 -*-
""""""
Created on Sat May 25 20:54:22 2019

@author: Yamazaki Kenichi
""""""

N,M = map(int,input().split())
A = list(map(int,input().split()))
B = [list(map(int,input().split())) for i in range(M)]

A.sort()
B.sort(reverse=True, key=lambda x: x[1])

tmp = 0
for i in range(N):
    if B[tmp][1] > A[i]:
        A[i] = B[tmp][1]
        B[tmp][0] -= 1
        if B[tmp][0] == 0:
            tmp += 1
        if tmp >= M:
            break
    else:
        break
print(sum(A))
    ","```
# -*- coding: utf-8 -*-
""""""
Created on Sat May 25 20:54:22 2019

@author: Yamazaki Kenichi
""""""

N, M = map(int, input().split())
A = sorted(map(int, input().split()))
B = [sorted((x, y), reverse=True) for x, y in (map(int, input().split()) for _ in range(M))]

i, j = 0, 0
while i < N and j < M:
    if B[j][1] > A[i]:
        A[i] = B[j][1]
        B[j][0] -= 1
        if B[j][0] == 0:
            j += 1
    else:
        break
print(sum(A))
```",minor,Meta-Llama-2-7b-chat,0.9307
33,python_34,Python,"c = input()
sum = 0;
cc = c[0]
if len(c)!=1:
    for i in range(1,len(c)):
        if (c[i]==cc[i-1]):
            sum+=1
            if (c[i]=='1'):
                cc+='0'
            else:
                cc+='1'
        else:
            cc+=c[i]
print(sum)","```
c = input()
total = 0
first_char = c[0]
if len(c) > 1:
    for char in c[1:]:
        if char == first_char:
            total += 1
            first_char = '1' if first_char == '0' else '0'
        else:
            first_char = char
print(total)
```",minor,Meta-Llama-2-7b-chat,0.8356
34,python_35,Python,"N,K = list(map(int,input().strip().split()))
ans = int(10e10)

hlist = [int(input()) for i in range(N)] 

hlist.sort()

for i in range(N-K+1):
    low = hlist[i]
    high = hlist[i+K-1]
    ans = min(ans,(high-low))

print(ans)","```
n, k = map(int, input().strip().split())
ans = 10**10

heights = sorted(map(int, [input() for _ in range(n)]))

for i in range(n - k + 1):
    ans = min(ans, heights[i + k - 1] - heights[i])

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8275
35,python_36,Python,"a,b,c =input().split()
total = int(a) + int(b) + int(c)
if total >= 22:
    print('bust')
else:
    print('win')","```
score, first, second, third = map(int, input().split())
result = 'win' if score < 22 else 'bust'
print(result)
```",minor,Meta-Llama-2-7b-chat,0.8307
36,python_37,Python,"n, k = map(int, input().split())
r, s, p = map(int, input().split())
t = input()

d = {""s"":r, ""p"":s, ""r"":p}
score = 0
for idx in range(k):
    List = []
    for i in range(n):
        if idx+i*k > n-1:
            break
        else:
           List.append(t[idx+i*k])
    not_liset = True
    tmp = List[0]
    score += d[tmp]
    for i in range(1, len(List)):
        if tmp == List[i] and not_liset:
            not_liset = False
        else:
            score += d[List[i]]
            not_liset = True
        tmp = List[i]
print(score)","```
n, k = map(int, input().split())
rock, paper, scissors = map(int, input().split())
t = input()

move_dict = {""s"": rock, ""p"": paper, ""r"": scissors}
score = 0
for i in range(k):
    sequence = t[i*k:(i+1)*k]
    prev_move = sequence[0]
    score += move_dict[prev_move]
    for move in sequence[1:]:
        score += move_dict[move]
print(score)
```",minor,Meta-Llama-2-7b-chat,0.7672
37,python_38,Python,"from _collections import deque
h,w,k=map(int,input().split())
S=[input() for _ in range(h)]
A=deque([])
cnt=1

def func(X):
    global cnt
    ANS=[]
    c=X.count('#')
    a=0
    for x in X:
        ANS.append(cnt)
        if x=='#':
            cnt+=1
            a+=1
            if a==c:
                for _ in range(w-len(ANS)):
                    ANS.append(cnt-1)
                break
    A.append(ANS)



for i in range(h):
    if S[i].count('#')==0 and i!=0 and len(A)!=0:
        A.append(A[-1])
    elif S[i].count('#')!=0:
        func(S[i])

if len(A)!=h:
    for _ in range(h-len(A)):
        A.appendleft(A[0])

for ans in A:
    print(*ans)","```
from collections import deque
h, w, k = map(int, input().split())
S = [input() for _ in range(h)]
A = deque()
cnt = 1

def func(x):
    global cnt
    ans = []
    c = x.count('#')
    a = 0
    for char in x:
        ans.append(cnt)
        if char == '#':
            cnt += 1
            a += 1
            if a == c:
                ans += [cnt - 1] * (w - len(ans))
                break
    A.append(ans)

for i in range(h):
    if not S[i].count('#') and i!= 0 and A:
        A.append(A[-1])
    elif S[i].count('#'):
        func(S[i])

if len(A)!= h:
    A.extendleft([A[0]] * (h - len(A)))

for ans in A:
    print(*ans)
```",minor,Meta-Llama-2-7b-chat,0.9048
38,python_39,Python,"K = int(input())
print(""ACL""*K)","```
K = int(input())
print(""ACL"" * K)
```",minor,Meta-Llama-2-7b-chat,0.8516
39,python_40,Python,"#Nの最大値が100なのでbit-DPでは間に合わない

N = int(input())

s = []
total = 0
for _ in range(N):
    a = int(input())
    s += [a]
    total += a

s.sort()
if total % 10 != 0:
    print (total)
    exit()
else:
    for i in range(N):
        if s[i]%10 != 0:
            print (total - s[i])
            exit()
print (0)
","```
N = int(input())

numbers = []
total = 0
for _ in range(N):
    numbers.append(int(input()))
    total += numbers[-1]

numbers.sort()
if total % 10!= 0:
    print(total)
    exit()
else:
    for num in numbers:
        if num % 10!= 0:
            print(total - num)
            exit()
print(0)
```",minor,Meta-Llama-2-7b-chat,0.8586
40,python_41,Python,"a, b = map(int, input().split())

if (a+b) % 2 == 0:
    print((a+b)//2)
else:
    print('IMPOSSIBLE') ","```
n1, n2 = map(int, input().split())
total = n1 + n2
if total % 2 == 0:
    print(total // 2)
else:
    print('IMPOSSIBLE')
```",minor,Meta-Llama-2-7b-chat,0.8235
41,python_42,Python,"from fractions import gcd

a, b, c, d = map(int, input().split())
a-=1

def lcm(x, y):
    return (x * y) // gcd(x, y)


l = lcm(c, d)
la = a // l
lb = b // l
aa = a // c + a // d - la
bb = b // c + b // d - lb


print((b - a) - (bb - aa))
","```
from fractions import gcd

a, b, c, d = map(int, input().split())
a -= 1

def lcm(x, y):
    return (x * y) // gcd(x, y)

l = lcm(c, d)
la = a // l
lb = b // l
aa = (a // c) + (a // d) - la
bb = (b // c) + (b // d) - lb

print((b - a) - (bb - aa))
```",minor,Meta-Llama-2-7b-chat,0.8164
42,python_43,Python,"R = float(input())
print(R*2*3.141592)","```
radius = float(input(""Enter the radius: ""))
print(radius * 2 * 3.141592)
```",minor,Meta-Llama-2-7b-chat,0.8572
43,python_44,Python,"H, W = map(int, input().split())
c = [list(map(int, input().split())) for _ in range(10)]
for k in range(10):
    for i in range(10):
        for j in range(10):
            c[i][j] = min(c[i][j], c[i][k] + c[k][j])
d = {i: 0 for i in range(-1, 10)}
for _ in range(H):
    A = map(int, input().split())
    for i in A:
        d[i] += 1
ans = 0
for i in range(10):
    if i == 1:
        continue
    ans += c[i][1] * d[i]
print(ans)
","```
H, W = map(int, input().split())
cost = [[*map(int, input().split()) for _ in range(10)] for _ in range(10)]
for i in range(10):
    for j in range(10):
        for k in range(10):
            cost[i][j] = min(cost[i][j], cost[i][k] + cost[k][j])
dist = {i: 0 for i in range(-1, 10)}
for _ in range(H):
    A = list(map(int, input().split()))
    for i in A:
        dist[i] += 1
answer = sum(cost[i][1] * dist[i] for i in range(10) if i!= 1)
print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8825
44,python_45,Python,"
def s0():return input()
def s1():return input().split()
def s2(n):return [input() for x in range(n)]
def s3(n):return [input().split() for _ in range(n)]
def s4(n):return [[x for x in s] for s in s2(n)]
def n0():return int(input())
def n1():return [int(x) for x in input().split()]
def n2(n):return [int(input()) for _ in range(n)]
def n3(n):return [[int(x) for x in input().split()] for _ in range(n)]
def t3(n):return [tuple(int(x) for x in input().split()) for _ in range(n)]
def p0(b,yes=""Yes"",no=""No""): print(yes if b else no)
# from sys import setrecursionlimit
# setrecursionlimit(1000000)
# from collections import Counter,deque,defaultdict
# import itertools
# import math
# import networkx as nx
# from bisect import bisect_left,bisect_right
# from heapq import heapify,heappush,heappop
n,a,b=n1()

def comb(n,k):
    nCk = 1
    MOD = 10**9+7

    for i in range(n-k+1, n+1):
        nCk *= i
        nCk %= MOD

    for i in range(1,k+1):
        nCk *= pow(i,MOD-2,MOD)
        nCk %= MOD
    return nCk

MOD = 10**9+7
a1=comb(n, a)
b1=comb(n, b)
ans=pow(2,n,MOD)-a1-b1-1
print(ans%MOD)","```

def s0(): return input()
def s1(): return list(map(str, input().split()))
def s2(n): return [s0() for _ in range(n)]
def s3(n): return [list(map(str, s0().split())) for _ in range(n)]
def s4(n): return [[x for x in s] for s in s3(n)]
def n0(): return int(s0())
def n1(): return list(map(int, s1()))
def n2(n): return [n0() for _ in range(n)]
def n3(n): return [[int(x) for x in s1()] for _ in range(n)]
def t3(n): return [tuple(map(int, s1())) for _ in range(n)]
def p0(b, yes=""Yes"", no=""No""): print(yes if b else no)

n, a, b = n1()

def comb(n, k):
    MOD = 10**9+7
    nCk = 1
    for i in range(1, k+1):
        nCk = (nCk * i) % MOD
    for i in range(n-k+1, n+1):
        nCk = (nCk * i) % MOD
    for _ in range(1, k+1):
        nCk = (nCk * pow(i, MOD-2, MOD)) % MOD
    return nCk

MOD = 10**9+7
a1 = comb(n, a)
b1 = comb(n, b)
ans = pow(2, n, MOD) - a1 - b1 - 1
print(ans % MOD)",minor,Meta-Llama-2-7b-chat,0.9434
45,python_46,Python,"import math
from bisect import bisect_left, bisect_right

Q = int(input())
LR = [list(map(int, input().split())) for _ in range(Q)]

is_prime = [False for _ in range(100001)]
is_prime[3] = True
primes = [3]
for n in range(5, 100001, 2):
    prime = True
    i = 2
    while i < int(math.sqrt(n)) + 1:
        if n % i == 0:
            prime = False
            break
        i += 1
    if prime:
        primes.append(n)
        is_prime[n] = True

like = []
for p in primes:
    if p == 3:
        like.append(p)
        continue
    q = (p+1)//2
    if is_prime[q]:
        like.append(p)

for l, r in LR:
    ans = bisect_right(like, r) - bisect_left(like, l)
    print(ans)","```
import math
from bisect import bisect_left, bisect_right

q = int(input())
lr = [[int(x) for x in input().split()] for _ in range(q)]

is_prime = [False] * 100001
is_prime[3] = True
primes = [3]
for n in range(5, 100001, 2):
    prime = True
    i = 2
    while i <= math.sqrt(n):
        if n % i == 0:
            prime = False
            break
        i += 1
    if prime:
        primes.append(n)
        is_prime[n] = True

like_primes = [p for p in primes if p == 3 or is_prime[(p+1)//2]]
for l, r in lr:
    print(bisect_right(like_primes, r) - bisect_left(like_primes, l))
```",minor,Meta-Llama-2-7b-chat,0.9357
46,python_47,Python,"N=int(input())
count=0.0
for i in range(1,N+1):
    if(i%2!=0):
        count+=1

print(count/N)","```
n = int(input())
count = 0
for i in range(1, n + 1):
    if i % 2!= 0:
        count += 1
print(count / n)
```",minor,Meta-Llama-2-7b-chat,0.8467
47,python_48,Python,"s=input()

if s.count(""N"")==0 and s.count(""S"")==0:
    if s.count(""W"")>=1 and s.count(""E"")>=1:
        print(""Yes"")
        exit()

if s.count(""W"")==0 and s.count(""E"")==0:
    if s.count(""N"")>=1 and s.count(""S"")>=1:
        print(""Yes"")
        exit()

if s.count(""W"")>=1 and s.count(""E"")>=1 and s.count(""N"")>=1 and s.count(""S"")>=1:
    print(""Yes"")
    exit()

print(""No"")","```
s = input()

if s.count(""N"") >= 1 and s.count(""S"") >= 1 and s.count(""W"") >= 1 and s.count(""E"") >= 1:
    print(""Yes"")
    exit()

if s.count(""N"") >= 1 and s.count(""S"") >= 1:
    print(""Yes"")
    exit()

if s.count(""W"") >= 1 and s.count(""E"") >= 1:
    print(""Yes"")
    exit()

print(""No"")
```",minor,Meta-Llama-2-7b-chat,0.8286
48,python_49,Python,"a,b,c =map(str, input().split())
A = int(a)
C = int(c)
res = 0
if b == ""+"":
  res = A+C
else:
  res = A-C
print(res)","```
a, op, c = map(str, input().split())
A, C = map(int, (a, c))
res = A + int(op) * C
print(res)
```",minor,Meta-Llama-2-7b-chat,0.7603
49,python_50,Python,"import sys
stdin = sys.stdin

sys.setrecursionlimit(10 ** 7)

def li(): return map(int, stdin.readline().split())
def li_(): return map(lambda x: int(x) - 1, stdin.readline().split())
def lf(): return map(float, stdin.readline().split())
def ls(): return stdin.readline().split()
def ns(): return stdin.readline().rstrip()
def lc(): return list(ns())
def ni(): return int(stdin.readline())
def nf(): return float(stdin.readline())


n = ni()
edges = [tuple(li_()) for _ in range(n-1)]
c = list(li())
c.sort()

visited = [False]*n

graph = [[] for _ in range(n)]
for l, r in edges:
    graph[l].append(r)
    graph[r].append(l)

cnt = 0
num = [0]*n

def dfs(node, graph):
    global cnt
    visited[node] = True
    for nei in graph[node]:
        if not visited[nei]:
            dfs(nei, graph)

    num[node] = c[cnt]
    cnt += 1

dfs(0, graph)

ans = 0
for l, r in edges:
    ans += min(num[l], num[r])

print(ans)
print(*num)","```
import sys
stdin = sys.stdin

sys.setrecursionlimit(10 ** 7)

def read_ints(): return map(int, stdin.readline().split())
def read_ints_minus_one(): return map(lambda x: int(x) - 1, stdin.readline().split())
def read_floats(): return map(float, stdin.readline().split())
def read_line(): return stdin.readline().split()
def read_line_strip(): return stdin.readline().rstrip()
def read_line_to_list(): return list(read_line_strip())
def read_int(): return int(stdin.readline())
def read_float(): return float(stdin.readline())

n = read_int()
edges = [(l - 1, r - 1) for l, r in [read_ints_minus_one() for _ in range(n - 1)]]
colors = sorted(read_ints())
visited = [False] * n

graph = [[] for _ in range(n)]
for l, r in edges:
    graph[l].append(r)
    graph[r].append(l)

count = 0
node_colors = [0] * n

def dfs(node, graph):
    global count
    visited[node] = True
    for neighbor in graph[node]:
        if not visited[neighbor]:
            dfs(neighbor, graph)

    node_colors[node] = colors[count]
    count += 1

dfs(0, graph)

result = 0
for l, r in edges:
    result += min(node_colors[l], node_colors[r])

print(result)
print(*node_colors)
```",minor,Meta-Llama-2-7b-chat,0.8345
50,python_51,Python,"S = input()
T = input()


cnt = 0
for i in range(3):
    if S[i] == T[i]:
        cnt += 1

print(cnt)","```
s1, s2 = input(), input()
count = 0
for i in range(min(len(s1), len(s2))):
    if s1[i] == s2[i]:
        count += 1
print(count)
```",minor,Meta-Llama-2-7b-chat,0.7504
51,python_52,Python,"import sys

input = sys.stdin.readline

t1, t2 = list(map(int,input().split()))
a1, a2 = list(map(int,input().split()))
b1, b2 = list(map(int,input().split()))

da1 = a1*t1
da2 = da1 + a2*t2
db1 = b1*t1
db2 = db1 + b2*t2

if da2==db2:
	ans = 'infinity'
else:
	if (da1-db1)*(da2-db2)>0:
		ans = 0
	else:
		fdif = abs(da1-db1)
		sdif = abs(da2-db2)
		iteration = fdif//sdif
		mod = fdif%sdif
		if mod==0:
			ans = iteration*2
		else:
			ans = iteration*2+1

print(ans)","```
import sys

input = sys.stdin.readline

t1, t2 = map(int, input().split())
a1, a2 = map(int, input().split())
b1, b2 = map(int, input().split())

da1 = a1 * t1
da2 = da1 + a2 * t2
db1 = b1 * t1
db2 = db1 + b2 * t2

if da2 == db2:
    ans = 'infinity'
else:
    if (da1 - db1) * (da2 - db2) > 0:
        ans = 0
    else:
        fdif = abs(da1 - db1)
        sdif = abs(da2 - db2)
        iteration = fdif // sdif
        mod = fdif % sdif
        if mod == 0:
            ans = iteration * 2
        else:
            ans = iteration * 2 + 1

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8703
52,python_53,Python,"N, K = map(int, input().split())
ans = """"
while(N >= K):
  ans = ans + str(N % K)
  N = N // K
ans = ans + str(N)
print(len(ans))","```
n, k = map(int, input().split())
answer = """"
while n >= k:
    answer += str(n % k)
    n //= k
answer += str(n)
print(len(answer))
```",minor,Meta-Llama-2-7b-chat,0.8266
53,python_54,Python,"s = input()
w = int(input())
ans = [s[i] for i in range(len(s)) if i % w == 0]
print(''.join(ans))","```
s = input()
width = int(input())
ans = [s[i] for i in range(0, len(s), width)]
print(''.join(ans))
```",minor,Meta-Llama-2-7b-chat,0.8646
54,python_55,Python,"s=input()
k=int(input())

n=len(s)
ss=s+s
nn=len(ss)
sss=ss+s
nnn=len(sss)

tmps=1
cnts=0
tmpss=1
cntss=0
tmpsss=1
cntsss=0

for i in range(n-1):
    if s[i]==s[i+1]:
        tmps+=1
    else:
        cnts+=(tmps//2)
        tmps=1
cnts+=(tmps//2)

for i in range(nn-1):
    if ss[i]==ss[i+1]:
        tmpss+=1
    else:
        cntss+=(tmpss//2)
        tmpss=1
cntss+=(tmpss//2)

for i in range(nnn-1):
    if sss[i]==sss[i+1]:
        tmpsss+=1
    else:
        cntsss+=(tmpsss//2)
        tmpsss=1
cntsss+=(tmpsss//2)

if n==1:
    if k%2==0:
        print(k//2)
    else:
        print((k-1)//2)

elif (cntsss-cntss)!=(cntss-cnts):
    print((cntsss-cntss)*((k+1)//2)+(cntss-cnts)*(k//2))

else:
    print((cntsss-cntss)*(k-1)+cnts)
","```
s = input()
k = int(input())

n = len(s)
ss = s + s
sss = ss + s

tmps = 1
cnts = 0
tmpss = 1
cntss = 0
tmpsss = 1
cntsss = 0

for i in range(n - 1):
    if s[i] == s[i + 1]:
        tmps += 1
    else:
        cnts += tmps // 2
        tmps = 1
cnts += tmps // 2

for i in range(len(ss) - 1):
    if ss[i] == ss[i + 1]:
        tmpss += 1
    else:
        cntss += tmpss // 2
        tmpss = 1
cntss += tmpss // 2

for i in range(len(sss) - 1):
    if sss[i] == sss[i + 1]:
        tmpsss += 1
    else:
        cntsss += tmpsss // 2
        tmpsss = 1
cntsss += tmpsss // 2

if n == 1:
    print(k // 2) if k % 2 == 0 else print((k - 1) // 2)
elif cntsss - cntss!= cntss - cnts:
    print((cntsss - cntss) * ((k + 1) // 2) + (cntss - cnts) * (k // 2))
else:
    print((cntsss - cntss) * (k - 1) + cnts)
```",minor,Meta-Llama-2-7b-chat,0.8766
55,python_56,Python,"N=int(input())
A=[int(input()) for i in range(N)]
from bisect import bisect_left
from collections import deque
l=deque()
for a in A:
    i=bisect_left(l,a)
    if i==0:
        l.appendleft(a)
    else:
        l[i-1]=a
print(len(l))","```
n = int(input())
a = [int(input()) for _ in range(n)]
from bisect import bisect_left
from collections import deque
queue = deque()
for num in a:
    idx = bisect_left(queue, num)
    if idx == 0:
        queue.appendleft(num)
    else:
        queue[idx - 1] = num
print(len(queue))
```",minor,Meta-Llama-2-7b-chat,0.8172
56,python_57,Python,"N = str(input())

if N[-1] in ('2', '4', '5', '7', '9'):
    print('hon')
elif N[-1] in ('0', '1', '6', '8'):
    print('pon')
elif N[-1] in ('3'):
    print('bon')","```
n = input()
if n[-1] in '02479':
    print('hon')
elif n[-1] in '0168':
    print('pon')
elif n[-1] == '3':
    print('bon')
```",minor,Meta-Llama-2-7b-chat,0.8108
57,python_58,Python,"N, K = map(int, input().split())
Xn = list(map(int, input().split()))

Ln = [0] * N
for i in range(N-1):
    Ln[i+1] = abs(Xn[i+1] - Xn[i]) + Ln[i]

Rn = [0] * N
for i in range(1, N)[::-1]:
    Rn[i-1] = abs(Xn[i] - Xn[i-1]) + Rn[i]

ans = float(""inf"")
for i in range(N-K+1):
    ans = min(ans, abs(Xn[i]) + Ln[i+K-1] - Ln[i])

for i in range(K-1, N)[::-1]:
    ans = min(ans, abs(Xn[i]) + Rn[i-K+1] - Rn[i])

print(ans)
","```
n, k = map(int, input().split())
x = list(map(int, input().split()))

left_diff = [0] * n
right_diff = [0] * n
for i in range(n - 1):
    left_diff[i + 1] = abs(x[i + 1] - x[i]) + left_diff[i]
for i in range(1, n)[::-1]:
    right_diff[i - 1] = abs(x[i] - x[i - 1]) + right_diff[i]

ans = float('inf')
for i in range(n - k + 1):
    ans = min(ans, abs(x[i]) + left_diff[i + k - 1] - left_diff[i])
for i in range(k - 1, n)[::-1]:
    ans = min(ans, abs(x[i]) + right_diff[i - k + 1] - right_diff[i])

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8934
58,python_59,Python,"import collections

S = input()
Slist = collections.Counter(S)

if Slist.most_common()[0][1] == 2 and Slist.most_common()[1][1] == 2:
    print('Yes')
else:
    print('No')","```
import collections

s = input()
s_count = collections.Counter(s)

if list(s_count.values()).count(2) == 2:
    print('Yes')
else:
    print('No')
```",minor,Meta-Llama-2-7b-chat,0.7957
59,python_60,Python,"N, K = map(int, input().split())
if K > (N - 1) * (N - 2) // 2:
    print(-1)
else:
    c = 0
    lst = []
    for i in range(2, N+1):
        c+=1
        lst.append([1, i])
    cnt = 0
    f = 0
    for i in range(2, N+1):
        for j in range(i+1, N+1):
            if cnt == (N-1)*(N-2)//2-K:
                f=1
                break
            c+=1
            cnt+=1
            lst.append([i, j])
        if f:
            break
    print(c)
    for l in lst:
        print(*l)","```
n, k = map(int, input().split())
if k > (n - 1) * (n - 2) // 2:
    print(-1)
else:
    count = 0
    edges = []
    for i in range(2, n+1):
        count += 1
        edges.append([1, i])
    edge_count = 0
    found = False
    for i in range(2, n+1):
        for j in range(i+1, n+1):
            edge_count += 1
            if edge_count == (n-1)*(n-2)//2-k:
                found = True
                break
            count += 1
            edges.append([i, j])
        if found:
            break
    print(count)
    for edge in edges:
        print(*edge)
```",minor,Meta-Llama-2-7b-chat,0.8653
60,python_61,Python,"import sys
def input():
    return sys.stdin.readline()[:-1]
A,B,M=map(int,input().split())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
m=min(a)+min(b)
for i in range(M):
    x,y,c=map(int,input().split())
    t=a[x-1]+b[y-1]-c
    if m>t:
        m=t
print(m)","```
import sys
def get_input():
    return sys.stdin.readline()[:-1]
A, B, M = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
min_val = min(min(a), min(b))
for _ in range(M):
    x, y, c = map(int, input().split())
    total = a[x-1] + b[y-1] - c
    min_val = min(min_val, total)
print(min_val)
```",minor,Meta-Llama-2-7b-chat,0.8419
61,python_62,Python,"import math

n, k = map(int, input().split())

dic = {} #ここに結果を保存していく。
ans = 0
moddo = 10**9+7

for i in range(k):
    t = k - i #これで大きいほうから順にとる。
    if t > k/2: #tがk/2より大きいときはすべてtじゃないと最大公約数はtにならない。
        dic[t] = 1
        ans += t
    else:
        temp = pow(k//t,n,moddo)
        #print(temp)
        fac = 2
        while fac*t <= k:
            temp -= dic[fac*t]
            fac += 1
        dic[t] = temp%moddo
        ans = (ans+((temp*t)%moddo))%moddo

print(ans)","```
import math

n, k = map(int, input().split())

gcd_results = {} # renamed 'dic'
answer = 0
modulus = 10**9 + 7

for i in range(k):
    t = k - i
    if t > k // 2:
        gcd_results[t] = 1
        answer += t
    else:
        temp = pow(k // t, n, modulus)
        fac = 2
        while fac * t <= k:
            temp -= gcd_results.get(fac * t, 0)
            fac += 1
        gcd_results[t] = temp % modulus
        answer = (answer + (temp * t) % modulus) % modulus

print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8693
62,python_63,Python,"# #!/usr/bin/env python3
# # -*- coding: utf-8 -*-
# # 問題：https://atcoder.jp/contests/abc126/tasks/abc126_f
# # 解説動画を見ながら実装

import sys

m, k = map(int, input().strip().split())
max_num = 2**m
if k >= max_num:
    print(-1)
    sys.exit()

# if m == 0:
#     print(0)
#     sys.exit()

if m == 1:
    if k == 0:
        print('0 0 1 1')
    else:
        print('-1')
    sys.exit()

res = []
for i in range(max_num):
    if i == k:
        continue
    res.append(i)
res.append(k)
for i in range(max_num):
    j = max_num - i - 1
    if j == k:
        continue
    res.append(j)
res.append(k)
for i in range(2**(m+1)):
    print(res[i], end=' ')
","```
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys

m, k = map(int, input().strip().split())
max_num = 2**m

if k >= max_num:
    print(-1)
    sys.exit()

if m == 1:
    if k == 0:
        print('0 0 1 1')
    else:
        print('-1')
    sys.exit()

result = []
for i in range(max_num):
    if i!= k:
        result.append(i)
result.append(k)
for i in range(max_num):
    j = max_num - i - 1
    if j!= k:
        result.append(j)
result.append(k)

for num in result:
    print(num, end=' ')
```",minor,Meta-Llama-2-7b-chat,0.9229
63,python_64,Python,"import sys, re
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd
from itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heappush, heappop
from functools import reduce
def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
def ZIP(n): return zip(*(MAP() for _ in range(n)))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7 
#mod = 998244353
from decimal import *
#import numpy as np
#decimal.getcontext().prec = 10


		
#階乗#
lim = 10**5   #必要そうな階乗の限界を入力
fact = [1] * (lim+1)
for n in range(1, lim+1):
	fact[n] = n * fact[n-1] % mod

#階乗の逆元#
fact_inv = [1]*(lim+1)
fact_inv[lim] = pow(fact[lim], mod-2, mod)
for n in range(lim, 0, -1):
	fact_inv[n-1] = n*fact_inv[n]%mod

def C(n, r):
	if n < r:
		return 0
	else:
		return (fact[n]*fact_inv[r]%mod)*fact_inv[n-r]%mod

N, K = MAP()
A = LIST()
A.sort()

max_sum = 0
for i in range(K-1, N):
	max_sum = (max_sum + A[i]*C(i, K-1)%mod)%mod

A = A[::-1]
min_sum = 0
for i in range(K-1, N):
	min_sum = (min_sum + A[i]*C(i, K-1)%mod)%mod

print((max_sum - min_sum)%mod)","```
import sys
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd
from itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left, insort, insort_left
from heapq import heappush, heappop
from functools import reduce
from operator import mul

def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
def ZIP(n): return zip(*(MAP() for _ in range(n)))

sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7

lim = 10**5
fact = [1] * (lim + 1)
for n in range(1, lim + 1):
    fact[n] = n * fact[n - 1] % mod

fact_inv = [1] * (lim + 1)
fact_inv[lim] = pow(fact[lim], mod - 2, mod)
for n in range(lim, 0, -1):
    fact_inv[n - 1] = n * fact_inv[n] % mod

def C(n, r):
    if n < r:
        return 0
    else:
        return (fact[n] * fact_inv[r] % mod) * fact_inv[n - r] % mod

N, K = MAP()
A = sorted(LIST())

max_sum = 0
for i in range(K - 1, N):
    max_sum = (max_sum + A[i] * C(i, K - 1) % mod) % mod

A = A[::-1]
min_sum = 0
for i in range(K - 1, N):
    min_sum = (min_sum + A[i] * C(i, K - 1) % mod) % mod

print((max_sum - min_sum) % mod)",minor,Meta-Llama-2-7b-chat,0.962
64,python_65,Python,"NM= list(map(int,input().split()))

if 1 in NM:
    if (max(NM)-2) >= 0:
        print(max(NM)-2)
    else:
        print(1)
elif 2 in NM:
    print(0)
else:
    print(NM[0]*NM[1]-(2*NM[0]+2*NM[1]-4))","```
numbers = list(map(int, input().split()))

if 1 in numbers:
    if max(numbers) - 2 >= 0:
        print(max(numbers) - 2)
    else:
        print(1)
elif 2 in numbers:
    print(0)
else:
    print(numbers[0] * numbers[1] - (2 * numbers[0] + 2 * numbers[1] - 4))
```",minor,Meta-Llama-2-7b-chat,0.7567
65,python_66,Python,"# -*- coding: utf-8 -*-

a,b = map(int, input().split())

n = b-a
B = 0
for i in range(1,n+1):
    B = B + i
print(B-b)","```
# -*- coding: utf-8 -*-

a, b = map(int, input().split())
n = b - a
result = sum(range(1, n + 1))
print(result - b)
```",minor,Meta-Llama-2-7b-chat,0.8341
66,python_67,Python,"import collections
N=int(input())
l = []
for _ in range(N):
    l.append(input())
c = collections.Counter(l)
print(len(c))","```
import collections
n = int(input())
counter = collections.Counter(input() for _ in range(n))
print(len(counter))
```",minor,Meta-Llama-2-7b-chat,0.7772
67,python_68,Python,"import sys
sys.setrecursionlimit(10000000)
H, W = map(int, input().split())
S = [input() for _ in range(H)]
seen = [[0]*W for _ in range(H)]


def rec(h,w,seen):
	if S[h][w] == '.':
		res = [1, 0]
	else:
		res = [0, 1]
	dh = [-1, 1, 0, 0]
	dw = [0, 0, -1, 1] 
	seen[h][w] = 1
	for i in range(4):
		nh = h+dh[i]
		nw = w+dw[i]
		if 0 <= nh <= H-1 and 0 <= nw <= W-1:
			if seen[nh][nw] == 0 and S[nh][nw] != S[h][w]:
				r0, r1 = rec(nh, nw, seen)
				res[0] += r0
				res[1] += r1
					
	return res

ans = 0
for h in range(H):
	for w in range(W):
		if seen[h][w] != 1:
			t0, t1 = rec(h, w, seen)
			ans += t0 * t1
print(ans)
","```
import sys

sys.setrecursionlimit(10000000)

H, W = map(int, input().split())
S = [list(input()) for _ in range(H)]
seen = [[False]*W for _ in range(H)]


def rec(h, w, seen):
	if S[h][w] == '.':
		return [1, 0]
	else:
		return [0, 1]

	dh = [-1, 1, 0, 0]
	dw = [0, 0, -1, 1] 
	seen[h][w] = True
	res = [0, 0]
	for i in range(4):
		nh = h+dh[i]
		nw = w+dw[i]
		if 0 <= nh <= H-1 and 0 <= nw <= W-1:
			if not seen[nh][nw] and S[nh][nw]!= S[h][w]:
				r0, r1 = rec(nh, nw, seen)
				res[0] += r0
				res[1] += r1
					
	return res

ans = 0
for h in range(H):
	for w in range(W):
		if not seen[h][w]:
			t0, t1 = rec(h, w, seen)
			ans += t0 * t1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.7689
68,python_69,Python,"import copy

N, Ma, Mb = [int(n) for n in input().split()]
pd = {(0,0):0}
for i in range(N):
    a, b, c = [int(n) for n in input().split()]
    pdcopy = copy.deepcopy(pd)
    for k, v in pdcopy.items():
        nk = (k[0]+a, k[1]+b)
        if nk in pd:
            if pd[nk] > v + c :
                pd[nk] = v + c
        else:
            pd[nk] = v + c

mp = 1000000
for i in range(1,401):
    if (Ma*i, Mb*i) in pd:
        mp = min(pd[(Ma*i, Mb*i)], mp)

if mp == 1000000:
    print(-1)
else:
    print(mp)
","```
import copy

n, ma, mb = [int(n) for n in input().split()]
pd = {(0,0):0}
for _ in range(n):
    a, b, c = [int(n) for n in input().split()]
    pd_copy = copy.deepcopy(pd)
    for k, v in pd_copy.items():
        nk = (k[0]+a, k[1]+b)
        if nk in pd:
            pd[nk] = min(pd[nk], v+c)
        else:
            pd[nk] = v+c

mp = float('inf')
for i in range(1, 401):
    if (ma*i, mb*i) in pd:
        mp = min(mp, pd[(ma*i, mb*i)])

if mp == float('inf'):
    print(-1)
else:
    print(mp)
```",minor,Meta-Llama-2-7b-chat,0.9164
69,python_70,Python,"S = input()
K = int(input())

cnt_one = 0
for i in S:
    if i == '1':
        cnt_one += 1
    else:
        break

if cnt_one >= K:
    print(1)
else:
    print(S[cnt_one+1-1])","```
s = input()
k = int(input())

ones_count = 0
for char in s:
    if char == '1':
        ones_count += 1
    else:
        break

if ones_count >= k:
    print(1)
else:
    print(s[ones_count])
```",minor,Meta-Llama-2-7b-chat,0.8438
70,python_71,Python,"
N = int(input())
B= [0] * N

for i in range(0, N):
	bb = int(input())
	B[bb-1] = i

m = 1
mx = 1
for i in range(1, N):
	if B[i] > B[i-1]:
		m = m + 1
		mx = max(mx, m)
	else:
		m = 1

print(N - mx)
","```
n = int(input())
b = [0] * n

for i in range(n):
    bb = int(input())
    b[bb-1] = i

max_length = 1
max_index = 1
for i in range(1, n):
    if b[i] > b[i-1]:
        max_length += 1
        max_index = max(max_index, max_length)
    else:
        max_length = 1

print(n - max_index)
```",minor,Meta-Llama-2-7b-chat,0.8094
71,python_72,Python,"def main():
    S = input()
    print(S.count('+') - S.count('-'))
    
if __name__ == '__main__':
    main()","```
def main():
    signs = input()
    print(signs.count('+') - signs.count('-'))

if __name__ == '__main__':
    main()
```",minor,Meta-Llama-2-7b-chat,0.8352
72,python_73,Python,"N,M = map(int,input().split())
L = [list(map(int,input().split())) for i in range(M)]
L.sort()
ans = 1
l = L[0][0]
r = L[0][1]
for a,b in L:
    if r <= a or l >= b:
        ans += 1
        l = a
        r = b
    else:
        l = a
        r = min(r,b)
print(ans)
","```
N, M = map(int, input().split())
L = [list(map(int, input().split())) for _ in range(M)]
L.sort()
ans, left, right = 1, L[0][0], L[0][1]
for a, b in L:
    if a > right or b < left:
        ans += 1
        left, right = a, b
    else:
        left, right = a, min(right, b)
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8883
73,python_74,Python,"n, m = map(int, input().split())
x = list(map(int, input().split()))
y = list(map(int, input().split()))
mod = int(1e9) + 7
S = 0
for i in range(n):
  S += (2*i+1-n)*x[i]
  S %= mod
T = 0
for j in range(m):
  T += (2*j+1-m)*y[j]
  T %= mod
print(S*T%mod)","```
n, m = map(int, input().split())
x, y = [int(i) for i in input().split()], [int(i) for i in input().split()]
mod = 10**9 + 7
S, T = 0, 0
for i in range(n):
    S = (2*i+1-n + S*x[i]) % mod
for j in range(m):
    T = (2*j+1-m + T*y[j]) % mod
print((S*T) % mod)
```",minor,Meta-Llama-2-7b-chat,0.8558
74,python_75,Python,"# coding: utf-8
# Your code here!
K=int(input())


alpha=K//50
beta=K%50
#print(alpha,beta)

N=50
A=[49+alpha-beta]*N
for i in range(beta):
    A[i]+=51

print(N)
print(*A)

""""""
count=0
for i in range(50):
    if A[i]<50:
        continue
    count+=1
    for j in range(50):
        if i==j:
            A[j]-=N
        else:
            A[j]+=1

print(A)
print(count)
""""""","```
# coding: utf-8

K = int(input())

alpha = K // 50
beta = K % 50

N = 50
A = [49 + alpha - beta] * N
for i in range(beta):
    A[i] += 51

print(N)
print(*A)

count = 0
for i in range(N):
    if A[i] < 50:
        continue
    count += 1
    for j in range(N):
        if i == j:
            A[j] -= N
        else:
            A[j] += 1

print(A)
print(count)
```",minor,Meta-Llama-2-7b-chat,0.7277
75,python_76,Python,"import math
n=int(input())

x=n**0.5

if x-x//1!=0:
    x=int(x//1)
else:
    x=int(x//1)-1
y=0

for i in range(1,x+1):
    if (n-i)/i-(n-i)//i==0:
        if int((n-i)//i)!=i:
            y+=int((n-i)//i)

print(y)
        

     

    

     

    
","```
import math
n = int(input())

x = math.isqrt(n)

if n - x**2!= 0:
    x = x - 1
y = 0

for i in range(1, x + 1):
    if (n - i) // i == (n - i) / i:
        if (n - i) // i!= i:
            y += (n - i) // i

print(y)",minor,Meta-Llama-2-7b-chat,0.9319
76,python_77,Python,"from collections import Counter

N = int(input())
a = list(map(int, input().split()))

num_removal = 0
for digit, count in Counter(a).items():
    if digit > count:
        num_removal += count
    else:
        num_removal += (count - digit)
print(num_removal)
","```
from collections import Counter

n = int(input())
a = list(map(int, input().split()))

num_removal = sum(count - min(count, digit) for digit, count in Counter(a).items())
print(num_removal)
```",minor,Meta-Llama-2-7b-chat,0.7843
77,python_78,Python,"D,N = map(int,input().split())

if N < 100:
    X = (100 ** D) * N
else:
    X = (100 ** D) * (N+1)

print(X)
","```
d, n = map(int, input().split())

x = (100 ** d) * (1 if n < 100 else n + 1)

print(x)
```",minor,Meta-Llama-2-7b-chat,0.8735
78,python_79,Python,"N,A,B = map(int,input().split())
S = input()

cnt = A + B

for i in range(N):
    if cnt == 0:
        print('No')
    elif cnt > 0 and B == 0 and S[i] == 'b':
        print('No')
    elif S[i] == 'a':
        print('Yes')
        cnt -= 1
    elif S[i] == 'b':
        print('Yes')
        cnt -= 1
        B -= 1
    else:
        print('No')","```
N, a, b = map(int, input().split())
S = input()

for char in S:
    if a == 0 and b == 0:
        print('No')
        break
    elif char == 'a':
        print('Yes')
        a -= 1
    elif char == 'b':
        if b > 0:
            print('Yes')
            b -= 1
        else:
            print('No')
            break
    else:
        print('No')
        break
else:
    print('Yes')
```",minor,Meta-Llama-2-7b-chat,0.8365
79,python_80,Python,"from collections import Counter,defaultdict,deque
from bisect import bisect_left
import sys,math,itertools,pprint,fractions,time
sys.setrecursionlimit(10**8)
mod = 10**9+7
INF = float('inf')
def inp(): return int(sys.stdin.readline())
def inpl(): return list(map(int, sys.stdin.readline().split()))

st = time.time()
n = inp()
a = []
for i in range(n):
    b = inpl()
    a.append(deque(b))
zan = n*(n-1)//2
res = 0
while True:
    res += 1
    now = zan
    s = set()
    for i in range(n):
        if i in s or a[i] == deque([]): continue
        end = True
        chk = a[i][0] - 1
        if not chk in s and a[chk][0] == i+1:
            zan -= 1
            if not zan: 
                print(res); quit()
            a[i].popleft(); a[chk].popleft()
            s.add(i); s.add(chk)
        # print(res,i,chk,a)
        nnn = time.time()
    if now == zan:
        print(-1)
        quit()
    if nnn - st > 1.7:
        print(n*(n-1)//2)
        quit()

            
","Here is the polished code:

```
from collections import Counter, defaultdict, deque
from bisect import bisect_left
import sys, math, itertools, pprint, fractions, time
sys.setrecursionlimit(10**8)
mod = 10**9 + 7
INF = float('inf')

def inp(): return int(input())
def inpl(): return list(map(int, input().split()))

start_time = time.time()
n = inp()
a = [deque() for _ in range(n)]
for i in range(n):
    a[i] = deque(map(int, input().split()))

half = n * (n - 1) // 2
result = 0
while True:
    result += 1
    current = half
    visited = set()
    for i in range(n):
        if i in visited or not a[i]: continue
        end = True
        prev = a[i].popleft() - 1
        if prev not in visited and a[prev][0] == i + 1:
            current -= 1
            if not current:
                print(result)
                quit()
            a[i].popleft()
            a[prev].popleft()
            visited.add(i)
            visited.add(prev)
        # print(result, i, prev, a)
    if current == half:
        print(-1)
        quit()
    if time.time() - start_time > 1.7:
        print(half)
        quit()
```",minor,Meta-Llama-2-7b-chat,0.8455
80,python_81,Python,"n = int(input())
a = list(map(int, input().split()))

print(sum(a)-n)","```
num_students = int(input())
scores = list(map(int, input().split()))

print(sum(scores) - num_students)
```",minor,Meta-Llama-2-7b-chat,0.6958
81,python_82,Python,"from collections import Counter
N,A,B = map(int, input().split())
v = list(map(int, input().split()))
v.sort(reverse=True)

c = Counter(v)
ans_num = sum(v[:A]) / A
ans_cnt = 0

from operator import mul
from functools import reduce

def cmb(n,r):
    r = min(n-r,r)
    if r == 0: return 1
    over = reduce(mul, range(n, n - r, -1))
    under = reduce(mul, range(1,r + 1))
    return over // under

num = v[A-1]
num_all = c[num]
cc = Counter(v[:A])
tmp = cc[num]

for i in range(A-1, B):
    last = v[i]
    if i != A-1:
        if last != v[0]:
            break
    ans_cnt += cmb(num_all, (i+1)-(A-tmp))


print(ans_num)
print(ans_cnt)
","```
from collections import Counter
N, A, B = map(int, input().split())
v = sorted(map(int, input().split()), reverse=True)

c = Counter(v)
ans_num = sum(v[:A]) / A
ans_cnt = 0

from operator import mul
from functools import reduce

def cmb(n, r):
    r = min(n-r, r)
    if r == 0: return 1
    over = reduce(mul, range(n, n - r, -1), 1)
    under = reduce(mul, range(1, r + 1), 1)
    return over // under

num = v[A-1]
num_all = c[num]
cc = Counter(v[:A])
tmp = cc[num]

for i in range(A-1, B):
    last = v[i]
    if i!= A-1 and last!= v[0]:
        break
    ans_cnt += cmb(num_all, i+1-A+tmp)

print(ans_num)
print(ans_cnt)
```",minor,Meta-Llama-2-7b-chat,0.875
82,python_83,Python,"import collections
A = input()
cnt = collections.defaultdict(int)
ans = 1
for i, a in enumerate(A):
    ans += i - cnt[a]
    cnt[a] += 1
print(ans)
","```
import collections
a_string = input()
count_dict = collections.defaultdict(int)
running_total = 0
for i, char in enumerate(a_string):
    running_total += i - count_dict[char]
    count_dict[char] += 1
print(running_total)
```",minor,Meta-Llama-2-7b-chat,0.8291
83,python_84,Python,"s = input()
#print(s[-7:])
if s[0:7] == ""keyence"":
  print(""YES"")
elif s[-7:] == ""keyence"":
  print(""YES"")
elif s[0:1]==""k"" and s[-6:] == ""eyence"":
  print(""YES"")
elif s[0:2] ==""ke"" and s[-5:] == ""yence"":
  print(""YES"")
elif s[0:3] == ""key"" and s[-4:] == ""ence"":
  print(""YES"")
elif s[0:4] == ""keye"" and s[-3:] == ""nce"":
  print(""YES"")
elif s[0:5] == ""keyen"" and s[-2:] ==""ce"":
  print(""YES"")
elif s[0:6] == ""keyenc"" and s[-1:] == ""e"":
  print(""YES"")
else:
  print(""NO"")","```
s = input()
if s.startswith(""keyence"") or s.endswith(""keyence""):
    print(""YES"")
elif s.startswith(""k"") and s.endswith(""eyence""):
    print(""YES"")
elif s.startswith(""ke"") and s.endswith(""yence""):
    print(""YES"")
elif s.startswith(""key"") and s.endswith(""ence""):
    print(""YES"")
elif s.startswith(""keye"") and s.endswith(""nce""):
    print(""YES"")
elif s.startswith(""keyen"") and s.endswith(""ce""):
    print(""YES"")
elif s.startswith(""keyenc"") and s.endswith(""e""):
    print(""YES"")
else:
    print(""NO"")
```",minor,Meta-Llama-2-7b-chat,0.8259
84,python_85,Python,"s =input()
t = input()

minmin = len(t)
for i in range( 0, ( len(s) - len(t)) +1 ):
    tigamoji = 0
    for j in range( len(t)  ):
        if s[j+i] != t[j]:
            tigamoji += 1
    if tigamoji < minmin:
        minmin = tigamoji
print(minmin)","```
s = input()
t = input()

min_mismatches = float('inf')
for i in range(len(s) - len(t) + 1):
    mismatches = 0
    for j in range(len(t)):
        if s[j + i]!= t[j]:
            mismatches += 1
    if mismatches < min_mismatches:
        min_mismatches = mismatches
print(min_mismatches)
```",minor,Meta-Llama-2-7b-chat,0.8128
85,python_86,Python,"S = input()
A = S[0:len(S)//2]
B = S[len(A):len(S)]
B = B[::-1]
count = 0
for i,j in zip(A,B):
    if i != j:
        count+=1
print(count)","```
s = input()
a = s[:len(s) // 2]
b = s[len(s) // 2:][::-1]
count = sum(1 for i, j in zip(a, b) if i!= j)
print(count)
```",minor,Meta-Llama-2-7b-chat,0.7965
86,python_87,Python,"class UnionFind():
  def __init__(self,n):
    self.n=n
    self.root=[-1]*(n+1)
    self.rank=[0]*(n+1)
  def FindRoot(self,x):
    if self.root[x]<0:
      return x
    else:
      self.root[x]=self.FindRoot(self.root[x])
      return self.root[x]
  def Unite(self,x,y):
    x=self.FindRoot(x)
    y=self.FindRoot(y)
    if x==y:
      return
    else:
      if self.rank[x]>self.rank[y]:
        self.root[x]+=self.root[y]
        self.root[y]=x
      elif self.rank[x]<=self.rank[y]:
        self.root[y]+=self.root[x]
        self.root[x]=y
        if self.rank[x]==self.rank[y]:
          self.rank[y]+=1
  def isSameGroup(self,x,y):
    return self.FindRoot(x)==self.FindRoot(y)
  def Count(self,x):
    return -self.root[self.FindRoot(x)]

n,m=map(int,input().split())
arr=list(map(int,input().split()))
t=UnionFind(n+1)
for _ in range(m):
  a,b=map(int,input().split())
  t.Unite(a,b)
ans=0
for i in range(n):
  if arr[i]==(i+1):
    ans+=1
  else:
    if t.isSameGroup((i+1),arr[i]):
      ans+=1
print(ans)","```
class UnionFind:
  def __init__(self, n):
    self.n = n
    self.parent = [-1] * (n + 1)
    self.rank = [0] * (n + 1)

  def find(self, x):
    if self.parent[x] < 0:
      return x
    self.parent[x] = self.find(self.parent[x])
    return self.parent[x]

  def unite(self, x, y):
    x = self.find(x)
    y = self.find(y)
    if x == y:
      return
    if self.rank[x] > self.rank[y]:
      self.parent[y] += self.parent[x]
      self.parent[x] = y
    elif self.rank[x] <= self.rank[y]:
      self.parent[x] += self.parent[y]
      self.parent[y] = x
      if self.rank[x] == self.rank[y]:
        self.rank[y] += 1

  def is_same_group(self, x, y):
    return self.find(x) == self.find(y)

  def count(self, x):
    return -self.parent[self.find(x)]

n, m = map(int, input().split())
arr = list(map(int, input().split()))
uf = UnionFind(n + 1)
for _ in range(m):
  a, b = map(int, input().split())
  uf.unite(a, b)
ans = 0
for i in range(n):
  if arr[i] == i + 1:
    ans += 1
  else:
    if uf.is_same_group(i + 1, arr[i]):
      ans += 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.9352
87,python_88,Python,"import collections
N =int(input())
A = [int(input()) for _ in range(N)]
A_col = collections.Counter(A)
ans = 0
#valueが奇数なら追加
for v in A_col.values():
    if v % 2 == 1:
      ans += 1
print(ans)      ","```
import collections
N = int(input())
A = [int(input()) for _ in range(N)]
A_col = collections.Counter(A)
odd_values = [v for v in A_col.values() if v % 2 == 1]
ans = len(odd_values)
print(ans)",minor,Meta-Llama-2-7b-chat,0.9203
88,python_89,Python,"x = int(input())
if x == 7 or x == 5 or x == 3:
    print('YES')
else:
    print('NO')","```
x = int(input())
if x in (3, 5, 7):
    print('YES')
else:
    print('NO')
```",minor,Meta-Llama-2-7b-chat,0.8694
89,python_90,Python,"def max2(x,y):
    return x if x > y else y

def divisors(n):
    i = 1
    table = set()
    while i * i <= n:
        if not n % i:
            table.add(i)
            table.add(n//i)
        i += 1
    table = list(table)
    return table

import sys
input = sys.stdin.readline

N, K = map(int, input().split())
A = list(map(int, input().split()))
S = sum(A)
D = divisors(S)
D.sort()
res = 0
for k in D:
    B = []
    for a in A:
        B.append(a%k)
    B.sort()
    cnt = sum(B)//k
    if k*cnt - sum(B[-cnt:]) <= K:
        res = max2(res, k)

print(res)","```
def max_divisor(x, y):
    return x if x > y else y

def get_divisors(n):
    divisors = set()
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    return sorted(list(divisors))

N, K = map(int, input().split())
A = list(map(int, input().split()))
S = sum(A)
divisors = get_divisors(S)
result = 0
for divisor in divisors:
    remainder = [a % divisor for a in A]
    remainder.sort()
    count = sum(remainder) // divisor
    if divisor * count - sum(remainder[-count:]) <= K:
        result = max_divisor(result, divisor)

print(result)
```",minor,Meta-Llama-2-7b-chat,0.858
90,python_91,Python,"N = int(input())

for x in range(N+10):
    if (x*(x+1))//2 >= N:
        break

ans = list(range(1, x+1))
rem = (x*(x+1))//2 - N
for a in ans:
    if a != rem:
        print(a)","```
n = int(input())

for x in range(n+10):
    if x * (x + 1) // 2 >= n:
        break

ans = list(range(1, x + 1))
remainder = x * (x + 1) // 2 - n
for num in ans:
    if num!= remainder:
        print(num)
```",minor,Meta-Llama-2-7b-chat,0.8304
91,python_92,Python,"h,w,k = map(int,input().split())
dp = [[0]*w for i in range(h+1)]
mod = 1000000007
dp[0][k-1] = 1
a = [1,1,2,3,5,8,13,21]
for i in range(h):
  for j in range(w):
    if j != 0:
      if j == w-1 or j == 1:
        dp[i+1][j] += dp[i][j-1]*(a[w-2])%mod
      else:
        dp[i+1][j] += dp[i][j-1]*(a[j-1]*a[w-1-j])%mod
    if j != w-1:
      if j == 0 or j == w-2:
        dp[i+1][j] += dp[i][j+1]*(a[w-2])%mod
      else:
        dp[i+1][j] += dp[i][j+1]*(a[j]*a[w-2-j])%mod
    if j == 0 or j == w-1:
      dp[i+1][j] += dp[i][j]*(a[w-1])%mod
    else:
      dp[i+1][j] += dp[i][j]*(a[j]*a[w-1-j])%mod
print(dp[h][0]%mod)","```
h, w, k = map(int, input().split())
dp = [[0] * w for _ in range(h + 1)]
mod = 10**9 + 7
dp[0][k - 1] = 1
fib = [1, 1]
for _ in range(2, w):
    fib.append((fib[-1] + fib[-2]) % mod)
for i in range(h):
    for j in range(1, w):
        if j == 1 or j == w - 1:
            dp[i + 1][j] += dp[i][j - 1] * fib[w - 2] % mod
        else:
            dp[i + 1][j] += dp[i][j - 1] * (fib[j - 1] * fib[w - 1 - j]) % mod
    for j in range(w - 2, 0, -1):
        if j == 1 or j == w - 2:
            dp[i + 1][j] += dp[i][j + 1] * fib[w - 2] % mod
        else:
            dp[i + 1][j] += dp[i][j + 1] * (fib[j] * fib[w - 2 - j]) % mod
    for j in range(w):
        dp[i + 1][j] += dp[i][j] * fib[w - 1] % mod
print(dp[h][0] % mod)
```",minor,Meta-Llama-2-7b-chat,0.8567
92,python_93,Python,"from collections import deque

N = int(input())
Monsters = deque(map(int, input().split()))
Fighters = deque(map(int, input().split()))

Knockouts = 0
prev_ftr = 0

while len(Monsters) > 0:
  mon = Monsters.popleft()
  ko1 = min(mon, prev_ftr)
  #print(mon, prev_ftr, ko1)
  Knockouts += ko1
  mon -= ko1

  if len(Fighters) > 0:
    ftr = Fighters.popleft()
    ko2 = min(mon, ftr)
    #print(mon, ftr, ko2)
    Knockouts += ko2
    mon -= ko2
    prev_ftr = ftr - ko2

print(Knockouts)","```
from collections import deque

n = int(input())
monsters = deque(map(int, input().split()))
fighters = deque(map(int, input().split()))

knockouts = 0
prev_fighter = 0

while monsters:
    monster = monsters.popleft()
    knockout = min(monster, prev_fighter)
    knockouts += knockout
    monster -= knockout

    if fighters:
        fighter = fighters.popleft()
        knockout = min(monster, fighter)
        knockouts += knockout
        monster -= knockout
        prev_fighter = fighter - knockout

print(knockouts)
```",minor,Meta-Llama-2-7b-chat,0.8238
93,python_94,Python,"N, S = map(int, input().split())
A = [int(i) for i in input().split()]

mod = 998244353

dp = [0] * (S + 1)
dp[0] = 1
for a in A :
  for i in range(S, -1, -1) :
    if i >= a :
      dp[i] = dp[i] * 2 + dp[i - a]
    else :
      dp[i] = dp[i] * 2
    dp[i] %= mod
print(dp[-1])","```
N, S = map(int, input().split())
A = list(map(int, input().split()))

mod = 998244353

dp = [0] * (S + 1)
dp[0] = 1
for a in A:
    for i in range(S, a - 1, -1):
        dp[i] = (dp[i] * 2 + dp[i - a]) % mod
print(dp[-1])
```",minor,Meta-Llama-2-7b-chat,0.8124
94,python_95,Python,"import re


s = str(input())

pattern = r""A.*Z""

X = re.search(pattern, s)

print(len(X.group()))
","```
import re

s = input()
pattern = r""A.*?Z""
match = re.search(pattern, s)
print(len(match.group()) if match else 0)
```",minor,Meta-Llama-2-7b-chat,0.8396
95,python_96,Python,"M = int(input())

print(24+(24-M))
","```
M = int(input())

print(48 - M)
```",minor,Meta-Llama-2-7b-chat,0.8188
96,python_97,Python,"N = int(input())
*A, = map(int, input().split())
max_A, min_A = max(A), min(A)
max_idx, min_idx = A.index(max_A), A.index(min_A)
mode = None
if min_A >= 0: mode = 2
elif max_A <= 0: mode = 3
elif max_A >= abs(min_A): mode = 0
else: mode = 1
actions = []
if mode == 0:
    for i in range(N):
        if i != max_idx:
            A[i] += A[max_idx]; actions.append((max_idx+1, i+1))
    mode += 2
elif mode == 1:
    for i in range(N):
        if i != min_idx:
            A[i] += A[min_idx]; actions.append((min_idx+1, i+1))
    mode += 2
if mode == 2:
    for i in range(N-1):
        A[i+1] += A[i]; actions.append((i+1, i+2))
elif mode == 3:
    for i in range(N-1, 0, -1):
        A[i-1] += A[i]; actions.append((i+1, i))
print(len(actions))
for a in actions: print(*a)","```
N = int(input())
numbers = list(map(int, input().split()))
max_num, min_num = max(numbers), min(numbers)
max_idx, min_idx = numbers.index(max_num), numbers.index(min_num)
mode = None
if min_num >= 0: mode = 2
elif max_num <= 0: mode = 3
elif max_num >= abs(min_num): mode = 0
else: mode = 1
actions = []
if mode == 0:
    for i in range(N):
        if i!= numbers.index(max_num):
            numbers[i] += max_num; actions.append((numbers.index(max_num)+1, i+1))
    mode += 2
elif mode == 1:
    for i in range(N):
        if i!= numbers.index(min_num):
            numbers[i] += min_num; actions.append((numbers.index(min_num)+1, i+1))
    mode += 2
if mode == 2:
    for i in range(N-1):
        numbers[i+1] += numbers[i]; actions.append((i+1, i+2))
elif mode == 3:
    for i in range(N-1, 0, -1):
        numbers[i-1] += numbers[i]; actions.append((i+1, i))
print(len(actions))
for action in actions: print(*action)
```",minor,Meta-Llama-2-7b-chat,0.9399
97,python_98,Python,"n = int(input())
a_n = list(map(int,input().split("" "")))
k = 0
t = 0
while True:
  for i in range(len(a_n)):
    if a_n[i] % 2 == 0:
      a_n[i] = a_n[i] / 2
    else:
      t = -1
      break
  if t == -1:
    break
  k += 1
print(k)","```
n = int(input())
a_n = list(map(int, input().split()))
k = 0
while True:
    for i in range(len(a_n)):
        if a_n[i] % 2 == 0:
            a_n[i] /= 2
        else:
            k = -1
            break
    if k == -1:
        break
    k += 1
print(k)
```",minor,Meta-Llama-2-7b-chat,0.8747
98,python_99,Python,"n = input().split()

if '1' in n and '7' in n and '9' in n and '4' in n :
    print('YES')
else:
    print('NO')","```
numbers = input().split()

if all(i in numbers for i in ['1', '7', '9', '4']):
    print('YES')
else:
    print('NO')
```",minor,Meta-Llama-2-7b-chat,0.837
99,python_100,Python,"n = int(input())
lst = [input().split() for i in range(n)]
# print(lst)

# float型に変換
for i in range(0, len(lst)):
    lst[i][0] = float(lst[i][0])

ans_sum = 0
for i in range(0, len(lst)):
    if lst[i][1] == 'JPY':
        ans_sum += lst[i][0]
    else:
        ans_sum += lst[i][0]*380000

print(ans_sum)","```
n = int(input())
data = [input().split() for _ in range(n)]

for row in data:
    row[0] = float(row[0])

result = sum(float(row[0]) if row[1] == 'JPY' else float(row[0]) * 380000 for row in data)

print(result)
```",minor,Meta-Llama-2-7b-chat,0.8053
100,python_101,Python,"# ABC056C - Go Home (ARC070C)
x = int(input())
for i in range(1, x + 1):
    if i * (i + 1) * 0.5 >= x:
        print(i)
        break","```
x = int(input())
for i in range(1, x + 1):
    if i * (i + 1) // 2 >= x:
        print(i)
        break
```",minor,Meta-Llama-2-7b-chat,0.8755
101,python_102,Python,"x,a,b = list(map(int, input().split()))
if abs(x-a) > abs(x-b):
    print(""B"")
else:
    print(""A"")","```
a, b, x = map(int, input().split())
if abs(x - a) > abs(x - b):
    print(""B"")
else:
    print(""A"")
```",minor,Meta-Llama-2-7b-chat,0.8479
102,python_103,Python,"n = int(input())
d = list(map(int, input().split()))

cnt = 0
for i in range(len(d)):
    #print(d[i],d[i+1:])
    cnt += d[i] * (sum(d[i+1:]))
print(cnt)","```
n = int(input())
data = list(map(int, input().split()))

count = 0
for i in range(len(data)):
    count += data[i] * sum(data[i+1:])
print(count)
```",minor,Meta-Llama-2-7b-chat,0.8054
103,python_104,Python,"t=""abcdefghijklmnopqrstuvwxyz""
h,w=map(int,input().split())
a=[list(input())for _ in range(h)]
b=[0]*26
for i in a:
  for j in i:b[t.index(j)]+=1
x,y,z=(h//2)*(w//2),(h%2)*(w//2)+(h//2)*(w%2),(h%2)*(w%2)
for i in b:
  j=i
  while x and j>3:
    x-=1
    j-=4
  while y and j>1:
    y-=1
    j-=2
  z-=j
if not(x==y==z==0):print(""No"")
else:print(""Yes"")
""""""#一例出力、問題誤読して実装した
c=[w*[0]for _ in range(h)]
fi=ti=0
for i in range(27):
  while b[i]:
    if b[i]>=4:
      j,k=fi//(w//2),fi%(w//2)
      c[j][k]=c[j][w-k-1]=c[h-j-1][k]=c[h-j-1][w-k-1]=t[i]
      fi+=1
      b[i]-=4
    if b[i]==2:
      if ti<h//2 and w%2:c[ti][w//2]=c[h-ti-1][w//2]=t[i]
      else:c[h//2][ti]=c[h//2][w-1-ti]=t[i]
      ti+=1
      b[i]-=2
    if b[i]==1:
      c[h//2][w//2]=t[i]
      b[i]-=1
for i in c:print("""".join(i))
""""""","```
t = ""abcdefghijklmnopqrstuvwxyz""
h, w = map(int, input().split())
a = [list(input()) for _ in range(h)]
b = [0] * 26
for row in a:
    for char in row:
        b[t.index(char)] += 1

x, y, z = (h // 2) * (w // 2), (h % 2) * (w // 2) + (h // 2) * (w % 2), (h % 2) * (w % 2)
for i in range(26):
    j = b[i]
    while x and j > 3:
        x -= 1
        j -= 4
    while y and j > 1:
        y -= 1
        j -= 2
    z -= j

if not (x == y == z == 0):
    print(""No"")
else:
    print(""Yes"")

    c = [[0] * w for _ in range(h)]
    fi, ti = 0, 0
    for i in range(26):
        while b[i]:
            if b[i] >= 4:
                j, k = fi // (w // 2), fi % (w // 2)
                c[j][k] = c[j][w - k - 1] = c[h - j - 1][k] = c[h - j - 1][w - k - 1] = t[i]
                fi += 1
                b[i] -= 4
            elif b[i] == 2:
                if ti < h // 2 and w % 2:
                    c[ti][w // 2] = c[h - ti - 1][w // 2] = t[i]
                else:
                    c[h // 2][ti] = c[h // 2][w - 1 - ti] = t[i]
                ti += 1
                b[i] -= 2
            elif b[i] == 1:
                c[h // 2][w // 2] = t[i]
                b[i] -= 1
    for row in c:
        print("""".join(row))",minor,Meta-Llama-2-7b-chat,0.8732
104,python_105,Python,"MOD = 10 ** 9 + 7
n, m, k = [int(item) for item in input().split()]


ans = 1
for i in range(2, k):
    ans = (ans * (n * m - i)) % MOD

for i in range(1, k - 2 + 1):
    ans = (ans * pow(i, MOD - 2, MOD)) % MOD

print((ans * (m ** 2 * n * (n ** 2 - 1) // 6 + n * (n - 1) * m
              * (m ** 2 - 1) // 6 + n * m * (m ** 2 - 1) // 6)) % MOD)


# pairs = []
# for i in range(1, n + 1):
#     for j in range(1, m + 1):
#         pairs.append((i, j))
#
# pairs.sort()
# print(pairs)
#
# brute = 0
# for i in range(len(pairs)):
#     for j in range(i + 1, len(pairs)):
#         brute += abs(pairs[i][0] - pairs[j][0]) + \
#                      abs(pairs[i][1] - pairs[j][1])
#
# print(ans * brute)
","```
MOD = 10**9 + 7
n, m, k = map(int, input().split())

ans = 1
for i in range(2, k):
    ans = (ans * (n * m - i)) % MOD

for i in range(1, k - 2 + 1):
    ans = (ans * pow(i, MOD - 2, MOD)) % MOD

print((ans * ((n * m * (n * n - 1) // 6 + n * (n - 1) * m * (m * m - 1) // 6 + n * m * (m * m - 1) // 6) % MOD)) % MOD)
```",minor,Meta-Llama-2-7b-chat,0.8866
105,python_106,Python,"X, Y = map(int, input().split())
ans = 0
if X == 3:
    ans += 100000
elif X == 2:
    ans += 200000
elif X == 1:
    ans += 300000

if Y == 3:
    ans += 100000
elif Y == 2:
    ans += 200000
elif Y == 1:
    ans += 300000

if X == 1 and Y == 1:
    ans += 400000

print(ans)
","```
x, y = map(int, input().split())
answer = 0
if x == 1:
    answer += 300000
    if y == 1:
        answer += 400000
elif x == 2:
    answer += 200000
elif x == 3:
    answer += 100000
    if y == 3:
        answer += 100000
    elif y == 2:
        answer += 200000
    elif y == 1:
        answer += 300000

print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8268
106,python_107,Python,"from itertools import combinations, permutations

n = int(input())
balls = []
cost = n
for _ in range(n):
    x, y = map(int, input().split())
    balls.append((x, y))

for b1, b2 in combinations(balls, 2):
    p, q = b1[0] - b2[0], b1[1] - b2[1]
    if p != 0 or q != 0:
        sub = 0
        for b3, b4 in permutations(balls, 2):
            dx, dy = b3[0] - b4[0], b3[1] - b4[1]
            if dx == p and dy == q:
                sub += 1
        cost = min(cost, n - sub)

print(max(cost, 1))
","```
from itertools import combinations, permutations

n = int(input())
balls = [(int(x), int(y)) for _ in range(n) for x, y in [map(int, input().split())]]
cost = n
for b1, b2 in combinations(balls, 2):
    p, q = b1[0] - b2[0], b1[1] - b2[1]
    if p!= 0 or q!= 0:
        sub = sum(1 for b3, b4 in permutations(balls, 2) if (b3[0] - b4[0], b3[1] - b4[1]) == (p, q))
        cost = min(cost, n - sub)
print(max(cost, 1))
```",minor,Meta-Llama-2-7b-chat,0.8821
107,python_108,Python,"a, b = input().split()

if a < b:
  print(a * int(b))
else:
  print(b * int(a))","```
small, large = input().split()

if int(small) < int(large):
    print(int(small) * int(large))
else:
    print(int(large) * int(small))
```",minor,Meta-Llama-2-7b-chat,0.7647
108,python_109,Python,"N, K = map(int, input().split())
ab = [[int(_) for _ in input().split()] for _ in range(N)]
ab = sorted(ab, key=lambda x: x[0])
tmp = 0

for i in ab:
    tmp += i[1]
    if tmp >= K:
        ans = i[0]
        break
print(ans)","```
N, K = map(int, input().split())
ab = [[int(x) for x in input().split()] for _ in range(N)]
ab.sort(key=lambda x: x[0])
total = 0

for i in ab:
    total += i[1]
    if total >= K:
        ans = i[0]
        break
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8748
109,python_110,Python,"# coding: utf-8
X,Y=map(int,input().split())

if X%Y==0:
    print(-1)
else:
    print(X)

","```
# coding: utf-8
x, y = map(int, input().split())

if x % y == 0:
    print(-1)
else:
    print(x)
```",minor,Meta-Llama-2-7b-chat,0.8559
110,python_111,Python,"N = int(input())
A = [int(_) for _ in input().split()]
s = 0
for a in A:
    if a == s + 1:
        s = a
if s == 0:
    print(-1)
else:
    print(N-s)
","```
n = int(input())
a = list(map(int, input().split()))
s = 0
for num in a:
    if num == s + 1:
        s = num
if s == 0:
    print(-1)
else:
    print(n - s)
```",minor,Meta-Llama-2-7b-chat,0.8411
111,python_112,Python,"n=input()
a = list(map(int,input().split()))
suma = sum(a)
r = 0

for i in range(0, len(a) - 1):
  suma -= a[i]
  r += a[i] * suma
print(r % (10 ** 9 + 7))","```
n = int(input())
numbers = list(map(int, input().split()))
total_sum = sum(numbers)
result = 0

for num in numbers[:-1]:
    total_sum -= num
    result += num * total_sum
print(result % (10 ** 9 + 7))
```",minor,Meta-Llama-2-7b-chat,0.8067
112,python_113,Python,"N, X, M = map(int, input().split())
cnt = [0] * M
cnt[X] = 1
start = -1
seq = [X]
for i in range(1, N):
    X = X * X % M
    if cnt[X] > 0:
        start = X
        break
    seq.append(X)
    cnt[X] += 1

if start < 0:
    print(sum(seq))
    exit()

cycle_start_idx = seq.index(start)
header = seq[:cycle_start_idx]
cycle = seq[cycle_start_idx:]
in_cycle_N = N - len(header)
q, r = divmod(in_cycle_N, len(cycle))
ans = sum(header) + sum(cycle) * q + sum(cycle[:r])
print(ans)
","```
n, x, m = map(int, input().split())
count = [0] * m
count[x] = 1
start = -1
sequence = [x]
for i in range(1, n):
    x = (x * x) % m
    if count[x] > 0:
        start = x
        break
    sequence.append(x)
    count[x] += 1

if start < 0:
    print(sum(sequence))
    exit()

cycle_start_index = sequence.index(start)
header = sequence[:cycle_start_index]
cycle = sequence[cycle_start_index:]
in_cycle_n = n - len(header)
q, r = divmod(in_cycle_n, len(cycle))
answer = sum(header) + sum(cycle) * q + sum(cycle[:r])
print(answer)
```",minor,Meta-Llama-2-7b-chat,0.9118
113,python_114,Python,"S=int(input())
x1 = y1 = 0
x2 = 10**9
y2 = 1
y3 = -(-S // (10**9))
x3 = y3 * 10**9 - S
print(x1,y1,x2,y2,x3,y3)","```
S = int(input())
x1, y1, x2, y2, x3, y3 = 0, 0, 10**9, 1, -(-S // (10**9)) * 10**9 - S, -(-S // (10**9))
print(x1, y1, x2, y2, x3, y3)
```",minor,Meta-Llama-2-7b-chat,0.8034
114,python_115,Python,"N = int(input())
a = list(map(int, input().split()))

cnt = 0

for i in range(N):
    x = 1
    while True:
        if a[i] % 2**x:
            cnt += x - 1
            break
        x += 1

print(cnt)","```
n = int(input())
numbers = list(map(int, input().split()))

count = 0

for num in numbers:
    x = 1
    while True:
        if num % (2 ** x):
            count += x - 1
            break
        x += 1

print(count)
```",minor,Meta-Llama-2-7b-chat,0.8602
115,python_116,Python,"#119  Still TBD

S = input()

if int(S[5]+S[6]) >= 5:
    print(""TBD"")
else:
    print(""Heisei"")","```
S = input()

if int(S[4:6]) >= 5:
    print(""TBD"")
else:
    print(""Heisei"")
```",minor,Meta-Llama-2-7b-chat,0.8535
116,python_117,Python,"N = int(input())
A = list(map(int,input().split()))
L = [0]
R = [0]
import fractions
def GCD(a,b):
    if a*b != 0:
        return fractions.gcd(a,b)
    else:
        return max(a,b)
for i in range(N-1):
    x = A[i]
    y = A[-i-1]
    L.append(GCD(L[i],x))
    R.append(GCD(R[i],y))
ans = 0
for i in range(N):
    x = L[i]
    y = R[-i-1]
    ans = max(GCD(x,y),ans)
print(ans)","```
N = int(input())
A = list(map(int, input().split()))
L, R = [0], [0]
import fractions

def gcd(a, b):
    if a * b!= 0:
        return fractions.gcd(a, b)
    else:
        return max(a, b)

for i in range(N - 1):
    x, y = A[i], A[N - i - 1]
    L.append(gcd(L[-1], x))
    R.append(gcd(R[-1], y))

ans = 0
for i in range(N):
    x, y = L[-i - 1], R[i]
    ans = max(gcd(x, y), ans)

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.9098
117,python_118,Python,"n = int(input())
disadd = []
disminus = []
for i in range(n):
    x, y = map(int, input().split())
    disadd.append(x+y)
    disminus.append(x-y)

print(max(max(disadd)-min(disadd), max(disminus) - min(disminus)))","```
n = int(input())
additions = []
subtractions = []
for _ in range(n):
    x, y = map(int, input().split())
    additions.append(x+y)
    subtractions.append(x-y)

print(max(max(additions) - min(additions), max(subtractions) - min(subtractions)))
```",minor,Meta-Llama-2-7b-chat,0.7777
118,python_119,Python,"import sys
input = lambda : sys.stdin.readline().rstrip()
sys.setrecursionlimit(max(1000, 10**9))
write = lambda x: sys.stdout.write(x+""\n"")


n = int(input())
a = list(map(int, input().split()))
val = 0
for num in a:
    val = val ^ num
ans = [None]*n
for i,num in enumerate(a):
    ans[i] = val^num
write("" "".join(map(str, ans)))","```
import sys

read = lambda: sys.stdin.readline().rstrip()
write = lambda x: sys.stdout.write(str(x) + '\n')

n = int(read())
a = list(map(int, read().split()))
val = 0
for num in a:
    val ^= num
ans = [val ^ num for num in a]
write(' '.join(map(str, ans)))
```",minor,Meta-Llama-2-7b-chat,0.8517
119,python_120,Python,"H, W = map(int, input().split())
a = [0 for i in range(H)]
for i in range(H):
    a[i] = list(map(int, input().split()))
result = []
for i in range(H):
    for j in range(W):
        if i == H-1 and j == W-1:
            continue
        if j == W-1 and a[i][j] % 2 == 1 and i < H-1:
            a[i][j] -= 1
            a[i+1][j] += 1
            result.append([i+1, j+1, i+2, j+1])

        elif a[i][j] % 2 == 1:
            a[i][j] -= 1
            a[i][j+1] += 1
            result.append([i+1, j+1,i+1, j+2])
#print(a)
print(len(result))
for i in range(len(result)):
    print('%d %d %d %d' % (result[i][0],result[i][1],result[i][2],result[i][3]))
","```
height, width = map(int, input().split())
arr = [[0] * width for _ in range(height)]
for i in range(height):
    arr[i] = list(map(int, input().split()))

result = []
for i in range(height):
    for j in range(width):
        if i == height - 1 and j == width - 1:
            continue
        if j == width - 1 and arr[i][j] % 2 == 1 and i < height - 1:
            arr[i][j] -= 1
            arr[i + 1][j] += 1
            result.append([i + 1, j + 1, i + 2, j + 1])
        elif arr[i][j] % 2 == 1:
            arr[i][j] -= 1
            arr[i][j + 1] += 1
            result.append([i + 1, j + 1, i + 1, j + 2])

print(len(result))
for i in range(len(result)):
    print('%d %d %d %d' % (result[i][0], result[i][1], result[i][2], result[i][3]))
```",minor,Meta-Llama-2-7b-chat,0.7659
120,python_121,Python,"import sys
S = input()
K = int(input())

letter_set = sorted(set(S))

ans_list = []

for letter in letter_set:
    letters = letter
    while letters in S:
        ans_list.append(letters)
        if len(ans_list) == K:
            print(ans_list[K - 1])
            sys.exit()
        for i in range(len(letter_set)):
            if letters + letter_set[i] in S:
                letters = letters + letter_set[i]
                break
        else:
            break
print(ans_list[K - 1])
","```
import sys

S = input()
K = int(input())

unique_letters = sorted(set(S))
ans_list = []

for letter in unique_letters:
    temp = letter
    while temp in S:
        ans_list.append(temp)
        if len(ans_list) == K:
            print(ans_list[-1])
            sys.exit()
        temp += unique_letters[(unique_letters.index(temp) + 1) % len(unique_letters)]
print(ans_list[-1])
```",minor,Meta-Llama-2-7b-chat,0.8452
121,python_122,Python,"import bisect
n = int(input())
a = list(map(int, input().split()))
a = sorted(a)
if n == 2:
    print(max(a),min(a))
    exit()
ans_n = a[n-1]
bestr = ans_n//2
kouho = bisect.bisect_left(a,bestr)
if abs(bestr-a[kouho-1]) < abs(bestr-a[kouho]) and abs(bestr-a[kouho-1]) < abs(bestr-a[kouho+1]):
    ans_r = a[kouho-1]
elif abs(bestr-a[kouho]) < abs(bestr-a[kouho+1]):
    ans_r = a[kouho]
else:
    ans_r = a[kouho+1]
print(ans_n, ans_r)
","```
import bisect

n = int(input())
a = sorted(map(int, input().split()))
if n == 2:
    print(max(a), min(a))
    exit()

ans_n = a[-1]
best_r = ans_n // 2
index = bisect.bisect_left(a, best_r)
if abs(best_r - a[index - 1]) < abs(best_r - a[index]) < abs(best_r - a[index + 1]):
    ans_r = a[index - 1]
elif abs(best_r - a[index]) < abs(best_r - a[index + 1]):
    ans_r = a[index]
else:
    ans_r = a[index + 1]

print(ans_n, ans_r)
```",minor,Meta-Llama-2-7b-chat,0.8924
122,python_123,Python,"x,y = map(int,input().split())
if x*y == 0:
    if x<0:
        print(-x)
    elif x>0:
        print(1+x)
    else:
        if y >= 0:
            print(y)
        else:
            print(1-y)
elif x*y >0:
    if x>y:
        print(2+abs(x-y))
    else:
        print(abs(y-x))
else:
    print(1+abs(x+y))","```
x, y = map(int, input().split())
if x * y == 0:
    if x < 0:
        print(-x)
    else:
        print(1 + x)
        if y < 0:
            print(-y)
        else:
            print(y)
elif x * y > 0:
    if x > y:
        print(2 + abs(x - y))
    else:
        print(abs(y - x))
else:
    print(1 + abs(x + y))",minor,Meta-Llama-2-7b-chat,0.9408
123,python_124,Python,"N = int(input())
A = [int(input()) for i in range(N)]

if A[0] != 0:
    print(-1)
    exit()

for i in range(N - 1):
    if A[i] < A[i + 1] and A[i + 1] - A[i] != 1:
        print(-1)
        exit()
    if A[i] > i + 1:
        print(-1)
        exit()

ans = 0
i = 1
old = 0
while i != N:
    if A[i] <= old:
        ans += old
    old = A[i]
    i += 1

print(ans + A[-1])
","```
n = int(input())
a = [int(input()) for _ in range(n)]

if a[0]!= 0:
    print(-1)
    exit()

for i in range(n - 1):
    if a[i] < a[i + 1] and a[i + 1] - a[i]!= 1:
        print(-1)
        exit()
    if a[i] > i + 1:
        print(-1)
        exit()

ans = 0
old = a[0]
for i in range(1, n):
    if a[i] <= old:
        ans += old
    old = a[i]

print(ans + a[-1])
```",minor,Meta-Llama-2-7b-chat,0.9098
124,python_125,Python,"n = int(input())
a = list(map(int,input().split()))
b = [0]*n

for i in range(n-1):
    b[a[i]-1] += 1

for i in range(n):
    print(b[i])
","```
n = int(input())
numbers = list(map(int, input().split()))
counts = [0] * n

for i in range(n-1):
    counts[numbers[i]-1] += 1

for count in counts:
    print(count)
```",minor,Meta-Llama-2-7b-chat,0.8044
125,python_126,Python,"import sys


inint = lambda: int(sys.stdin.readline())
inintm = lambda: map(int, sys.stdin.readline().split())
inintl = lambda: list(inintm())
instrm = lambda: map(str, sys.stdin.readline().split())
instrl = lambda: list(instrm())

n, k, s = inintm()

ans = [str(s)]*k

if s != 10**9:
    for i in range(n-k):
        ans.append(str(s+1))
else:
    for i in range(n-k):
        ans.append(str(s-1))

print("" "".join(ans))","```
import sys

read_int = lambda: int(sys.stdin.readline())
read_ints = lambda: list(map(int, sys.stdin.readline().split()))
read_strs = lambda: list(map(str, sys.stdin.readline().split()))

n, k, s = read_ints()

result = [str(s)] * k

if s!= 10**9:
    result.extend(map(str, [s+1] * (n-k)))
else:
    result.extend(map(str, [s-1] * (n-k)))

print("" "".join(result))
```",minor,Meta-Llama-2-7b-chat,0.8863
126,python_127,Python,"N, T = map(int, input().split())
M = 10000
for n in range(N):
    c, t = map(int, input().split())
    if T >= t:
        M = min(M, c)
if M == 10000:
    print(""TLE"")
else:
    print(M)
","```
N, T = map(int, input().split())
M = float('inf')
for _ in range(N):
    c, t = map(int, input().split())
    if T >= t:
        M = min(M, c)
if M == float('inf'):
    print(""TLE"")
else:
    print(M)
```",minor,Meta-Llama-2-7b-chat,0.84
127,python_128,Python,"n = int(input())
s = input()

res = 1 << 40
num_black = 0
num_white = s.count('.')
for i in range(n):
    res = min(res, num_black + num_white)
    if s[i] == '.':
        num_white -= 1
    else:
        num_black += 1
        
res = min(res, num_black + num_white)
print(res)","```
n = int(input())
s = input()

result = 1 << 40
black, white = 0, s.count('.')
for i in range(n):
    result = min(result, black + white)
    if s[i] == '.':
        white -= 1
    else:
        black += 1
        
result = min(result, black + white)
print(result)
```",minor,Meta-Llama-2-7b-chat,0.823
128,python_129,Python,"n = int(input())
A = [int(x) for x in input().split()]
A_ = sorted([a - i for i, a in enumerate(A, 1)])
i = len(A) // 2
b = A_[i]
ans = sum([abs(a - b) for a in A_])
print(ans)
","```
n = int(input())
A = list(map(int, input().split()))
A_ = sorted([a - i for i, a in enumerate(A, 1)])
mid = len(A_) // 2
b = A_[mid]
ans = sum(abs(a - b) for a in A_)
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8517
129,python_130,Python,"#F
import math
N = int(input())

m = int(math.sqrt(N-1))
Myaku = []
for i in range(1,m+1):
    if (N-1)%i == 0:
        if i != 1:
            Myaku.append(i)
        if (N-1)//i != i:
            Myaku.append((N-1)//i)
            
ans = len(Myaku)

n = int(math.sqrt(N))
Nyaku = []
for i in range(1,n+1):
    if N%i == 0:
        if i != 1:
            Nyaku.append(i)
        if N//i != i:
            Nyaku.append(N//i)
            
for ny in Nyaku:
    X = N
    while X%ny == 0:
        X //= ny
    if X%ny == 1:
        ans+=1
        
print(ans)
#print(Myaku,Nyaku)


","```
#F
import math
n = int(input())

m = int(math.sqrt(n-1))
divisors = []
for i in range(1, m+1):
    if (n-1) % i == 0:
        if i!= 1:
            divisors.append(i)
        if (n-1)//i!= i:
            divisors.append((n-1)//i)

ans = len(divisors)

n = int(math.sqrt(n))
for i in range(1, n+1):
    if n % i == 0:
        if i!= 1:
            divisors.append(i)
        if n//i!= i:
            divisors.append(n//i)

for d in divisors:
    x = n
    while x % d == 0:
        x //= d
    if x % d == 1:
        ans += 1

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8562
130,python_131,Python,"n = input()
ans = n.replace(""1"", ""t"").replace(""9"", ""1"").replace(""t"", ""9"")
print(ans)","```
n = input()
ans = n.replace(""1"", ""t"").replace(""t"", ""9"").replace(""9"", ""1"")
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8433
131,python_132,Python,"x = int(input())

if x >= 30:
    print(""Yes"")
else:
    print(""No"")","```
threshold = 30
user_input = int(input())

if user_input >= threshold:
    print(""Yes"")
else:
    print(""No"")
```",minor,Meta-Llama-2-7b-chat,0.802
132,python_133,Python,"# https://codeforces.com/blog/entry/71482
# https://atcoder.jp/contests/abc145/submissions/8473167

import numpy
n, t = map(int, input().split())
time = []
for i in range(n):
    x, y = map(int, input().split())
    time.append((x, y))


dp = numpy.zeros(t, dtype=int)
time.sort()
ans = 0
for a, b in time:
    ans = max(ans, dp[-1]+b)
    dp[a:] = numpy.maximum(dp[a:], dp[:-a]+b)

print(ans)","```
import numpy

n, t = map(int, input().split())
time_points = []
for _ in range(n):
    x, y = map(int, input().split())
    time_points.append((x, y))

dp = numpy.zeros(t+1, dtype=int)
for x, y in sorted(time_points):
    dp[max(0, x):] = numpy.maximum(dp[max(0, x):], dp[:x]+y)
print(max(dp))
```",minor,Meta-Llama-2-7b-chat,0.8049
133,python_134,Python,"H, W, D = map(int, input().split())
A_where = [0] * (H*W+1)
A_where[0] = (-1, -1)
for p in range(H):
    A = list(map(int, input().split()))
    for q in range(W):
        A_where[A[q]] = (p, q)

Q = int(input())

DP = [0] * (H*W+1)

for i in range(D+1, H*W+1):
    y1, x1 = A_where[i]
    y2, x2 = A_where[i-D]

    DP[i] = DP[i-D] + abs(y1-y2) + abs(x1-x2)

for i in range(Q):
    l, r = map(int, input().split())
    print(DP[r] - DP[l])
","```
height, width, days = map(int, input().split())
location_map = [0] * (height * width + 1)
location_map[0] = (-1, -1)
for row in range(height):
    row_data = list(map(int, input().split()))
    for col in range(width):
        location_map[row_data[col]] = (row, col)

queries = int(input())

dp = [0] * (height * width + 1)

for i in range(days + 1, height * width + 1):
    prev_row, prev_col = location_map[i]
    prev_row_prev_col = location_map[i - days]
    prev_row_prev, prev_col_prev = prev_row_prev_col

    dp[i] = dp[i - days] + abs(prev_row - prev_row_prev) + abs(prev_col - prev_col_prev)

for _ in range(queries):
    left, right = map(int, input().split())
    print(dp[right] - dp[left])
```",minor,Meta-Llama-2-7b-chat,0.7507
134,python_135,Python,"N = int(input())
# 愚直に求めるならば
# f(n) = n(n-2)(n-4)...(n%2+4)(n%2+2)f(n%2)

if N % 2:
    print(0)
    exit()
# n が奇数ならば0を出力すればよい

# nが偶数ならば
# f(n) = n(n-2)(n-4)...(n%2+4)(n%2+2)

# 小問題
# n , n-2, n-4, ... , n%2+4, n%2+2
# の中に含まれるNの倍数の数を求めよ
def a(n,N):
    n -= n % (2 * N)
    return n // N // 2

s = 0
result = 1
NN = 5
while result:
    result = a(N,NN)
    s += result
    NN *= 5

print(s)","```
n = int(input())
if n % 2:
    print(0)
    exit()

def calculate(n):
    result = 1
    for i in range(n // 2 + 1):
        result *= n - 2 * i
    return result

s = 0
nn = 5
while nn <= n:
    s += calculate(nn)
    nn *= 5

print(s)
```",minor,Meta-Llama-2-7b-chat,0.7707
135,python_136,Python,"n = int(input())
G = [[] for _ in range(n)]
for _ in range(n-1):
    a, b = tuple(map(lambda x: int(x)-1, input().split()))
    G[a].append(b)
    G[b].append(a)

color = [0] * n
color[0] = 1
color[n-1] = -1
from collections import deque
q = deque([])
q.append(0)
q.append(n-1)
while q:
    node = q.popleft()
    c = color[node]
    for to in G[node]:
        if color[to] == 0:
            color[to] = c
            q.append(to)

cb = color.count(1)
cw = color.count(-1)

if cb > cw:
    print('Fennec')
else:
    print('Snuke')
","```
n = int(input())
graph = [[] for _ in range(n)]
for _ in range(n-1):
    a, b = map(lambda x: int(x)-1, input().split())
    graph[a].append(b)
    graph[b].append(a)

color = [0] * n
color[0] = 1
color[-1] = -1
from collections import deque
queue = deque([0, n-1])
while queue:
    node = queue.popleft()
    if color[node] == 0:
        color[node] = 1 if node == 0 else -1
        queue.extend(neighbor for neighbor in graph[node] if color[neighbor] == 0)

fennec, snuke = color.count(1), color.count(-1)
print('Fennec' if fennec > snuke else 'Snuke')
```",minor,Meta-Llama-2-7b-chat,0.8942
136,python_137,Python,"n = input()
print('ABC' + n)","```
name = input()
print('ABC' + name)
```",minor,Meta-Llama-2-7b-chat,0.8718
137,python_138,Python,"# AtCoder Beginner Contest 146
# E - Rem of Sum is Num
# https://atcoder.jp/contests/abc146/tasks/abc146_e
from collections import defaultdict
N, K = map(int, input().split())
*A, = map(int, input().split())

A = [0]+A
d = []
c = defaultdict(int)
x = 0
ans = 0
for i, a in enumerate(A):
    x += a - 1
    x %= K

    d.append(x)
    if i-K >= 0:
        c[d[i-K]] -= 1
    ans += c[x]
    c[x] += 1

print(ans)","```
from collections import defaultdict

N, K = map(int, input().split())
*A, = map(int, input().split())

A = [0] + A
d = []
c = defaultdict(int)
for i, a in enumerate(A):
    x = (x + a - 1) % K
    d.append(x)
    c[x] += 1
    if i >= K:
        c[d[i - K]] -= 1
    ans = sum(c.values())

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8743
138,python_139,Python,"n = int(raw_input())
a = map(int, raw_input().split())
b = map(int, raw_input().split())
c = [a[i] - b[i] for i in xrange(n)]
f = -sum(c)
if f < 0:
    print 'No'
    quit()
t = f
for i in xrange(n):
    if c[i] < 0:
        k = (-c[i] + 1) / 2
        t -= k
        c[i] += k * 2
if t < 0:
    print 'No'
    quit()
s = f
for i in xrange(n):
    s -= c[i]
if s < 0:
    print 'No'
    quit()
if t * 2 == s:
    print 'Yes'
else:
    print 'No'
","```
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
c = [a[i] - b[i] for i in range(n)]
f = -sum(c)
if f < 0:
    print('No')
    exit()
t = f
for i in range(n):
    if c[i] < 0:
        k = (-c[i] + 1) // 2
        t -= k
        c[i] += k * 2
if t < 0:
    print('No')
    exit()
s = f
for i in range(n):
    s -= c[i]
if s < 0:
    print('No')
    exit()
if t * 2 == s:
    print('Yes')
else:
    print('No')
```",minor,Meta-Llama-2-7b-chat,0.9094
139,python_140,Python,"n=int(input())
a=list(map(int,input().split()))
a.sort()
temp=[a[0]]
for i in range(n-1): temp.append(temp[i]+a[i+1])
a.sort(reverse=True)
temp.reverse()
flag=1
for i in range(n-1):
    if a[i]>2*a[i+1] and a[i]>2*temp[i+1]:
        flag=0
        print(i+1)
        break
if flag: print(n)","```
n = int(input())
a = sorted(map(int, input().split()))
temp = [a[0]]
for i in range(n - 1):
    temp.append(temp[i] + a[i + 1])
temp = sorted(temp, reverse=True)
temp.reverse()
flag = 1
for i in range(n - 1):
    if a[i] > 2 * a[i + 1] and a[i] > 2 * temp[i + 1]:
        flag = 0
        print(i + 1)
        break
if flag:
    print(n)
```",minor,Meta-Llama-2-7b-chat,0.8795
140,python_141,Python,"s = input().replace(""?"", ""D"")
print(s)","```
s = input().replace(""?"", ""D"")
print(s)
```",minor,Meta-Llama-2-7b-chat,0.8554
141,python_142,Python,"import sys
input = sys.stdin.readline
from operator import itemgetter
sys.setrecursionlimit(10000000)

a = []
f = []
n = 0

def rec(l, r, k):
    if l+1 < r:
        mid = (l + r) // 2
        s = 0
        for i in range(n):
            s += max(a[i] - mid // f[i], 0)
        if s <= k:
            return rec(l, mid, k)
        else:
            return rec(mid, r, k)
    else:
        return r

def main():
    global a, f, n
    n, k = map(int, input().strip().split())
    a = list(map(int, input().strip().split()))
    f = list(map(int, input().strip().split()))
    a = sorted(a)
    f = sorted(f, reverse=True)
    print(rec(-1, 10**12, k))

if __name__ == '__main__':
    main()
","```
import sys
from operator import itemgetter

input = sys.stdin.readline

def main():
    n, k = map(int, input().strip().split())
    a = sorted(map(int, input().strip().split()))
    f = sorted(map(int, input().reverse=True), key=itemgetter(0))
    print(rec(-1, 10**12, k))

def rec(l, r, k):
    if l + 1 < r:
        mid = (l + r) // 2
        s = sum(max(a[i] - mid // f[i], 0) for i in range(n))
        if s <= k:
            return rec(l, mid, k)
        else:
            return rec(mid, r, k)
    else:
        return r

if __name__ == '__main__':
    main()
```",minor,Meta-Llama-2-7b-chat,0.8766
142,python_143,Python,"n = int(input())
print (n*(n+1))/2","```
n = int(input())
print((n*(n+1))/2)",minor,Meta-Llama-2-7b-chat,0.8826
143,python_144,Python,"S,T = map(str,input().split())
A,B = map(int,input().split())
U = str(input())
if S == U:
    print(A-1,B)
else:
    print(A,B-1)
","```
source, target = map(str, input().split())
a, b = map(int, input().split())
user_input = str(input())
if source == user_input:
    print(a-1, b)
else:
    print(a, b-1)
```",minor,Meta-Llama-2-7b-chat,0.7903
144,python_145,Python,"N = int(input())
A = list(map(int, input().split()))
 
money = 1000
stock = 0
 
for i in range(N):
    if i == N - 1:
        money += stock * A[i]
        break
    if A[i] < A[i + 1]:
        buy_stock = money // A[i]
        money -= A[i] * buy_stock
        stock += buy_stock
    elif A[i] > A[i + 1]:
        money += A[i] * stock
        stock = 0
 
print(money)","```
N = int(input())
prices = list(map(int, input().split()))
 
initial_money = 1000
initial_stock = 0
 
for i in range(N - 1):
    if prices[i] < prices[i + 1]:
        buy_amount = initial_money // prices[i]
        initial_money -= prices[i] * buy_amount
        initial_stock += buy_amount
    elif prices[i] > prices[i + 1]:
        initial_money += prices[i] * initial_stock
        initial_stock = 0
 
initial_money += initial_stock * prices[-1]
print(initial_money)
```",minor,Meta-Llama-2-7b-chat,0.8215
145,python_146,Python,"def make_burger(i, x):
    if i == 0:
        return 1 if x > 0 else 0
    mid = (b[i] + 1) // 2
    if mid > x:
        return make_burger(i - 1, x - 1)
    elif mid == x:
        return p[i - 1] + 1
    else:
        return p[i - 1] + 1 + make_burger(i - 1, x - mid)
    

n, x = map(int, input().split())
p = [1]
b = [1]

for _ in range(n):
    p.append(p[-1] * 2 + 1)
    b.append(b[-1] * 2 + 3)

print(make_burger(n, x))","```
def make_burger(index, remaining):
    if index == 0:
        return 1 if remaining > 0 else 0
    mid = (b[index] + 1) // 2
    if mid > remaining:
        return make_burger(index - 1, remaining - 1)
    elif mid == remaining:
        return p[index - 1] + 1
    else:
        return p[index - 1] + 1 + make_burger(index - 1, remaining - mid)

n, x = map(int, input().split())
prefixes = [1]
bases = [1]

for _ in range(n):
    prefixes.append(prefixes[-1] * 2 + 1)
    bases.append(bases[-1] * 2 + 3)

print(make_burger(n, x))
```",minor,Meta-Llama-2-7b-chat,0.9069
146,python_147,Python,"from bisect import bisect_left
N=int(input())
S=input()
li=[[] for i in range(10)]
for i in range(N):
    n=int(S[i])
    li[n].append(i)
ans=0
for i in range(10**3):
    a=i//100
    b=(i-100*a)//10
    c=i-100*a-10*b
    tmpn=[0 for i in range(10)]
    if not li[a]:
        continue
    tmpi=li[a][0]
    #print(tmpi)
    tmpn[a]+=1
    if tmpn[b]>len(li[b])-1:
        continue
    indin=bisect_left(li[b],tmpi,tmpn[b],len(li[b]))
    if indin==len(li[b]):
        continue
    tmpi=li[b][indin]
    #print(tmpi)
    #tmpn[b]+=1
    tmpn[b]=indin+1
    #print(tmpn)
    if tmpn[c]>len(li[c])-1:
        continue
    indin=bisect_left(li[c],tmpi,tmpn[c],len(li[c]))
    #print(""indin"",indin)
    if indin!=len(li[c]):
        ans+=1
        #print(i)
print(ans)
","```
from bisect import bisect_left

n = int(input())
s = input()
li = [[] for _ in range(10)]
for i in range(n):
    num = int(s[i])
    li[num].append(i)

ans = 0
for i in range(10**3):
    a, b, c = i // 100, (i - 100 * a) // 10, i - 100 * a - 10 * b
    tmpn = [0] * 10
    if not li[a]:
        continue
    tmpi = li[a][0]
    tmpn[a] += 1
    if tmpn[b] > len(li[b]) - 1:
        continue
    indin = bisect_left(li[b], tmpi, tmpn[b], len(li[b]))
    if indin == len(li[b]):
        continue
    tmpi = li[b][indin]
    tmpn[b] = indin + 1
    if tmpn[c] > len(li[c]) - 1:
        continue
    indin = bisect_left(li[c], tmpi, tmpn[c], len(li[c]))
    if indin!= len(li[c]):
        ans += 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.7453
147,python_148,Python,"A,B,C = map(int,input().split())
if A==B:
  print(C)
elif A==C:
  print(B)
else:
  print(A)","```
a, b, c = map(int, input().split())
if a == b:
    print(c)
elif a == c:
    print(b)
else:
    print(a)
```",minor,Meta-Llama-2-7b-chat,0.8183
148,python_149,Python,"n = int(input())
a,b = map(int,input().split())
p = list(map(int,input().split()))
cnt1 = 0
cnt2 = 0
cnt3 =0

for i in range(n):
    if p[i] <= a:
        cnt1 +=1
    elif a < p[i] <= b:
        cnt2+=1
    else:
        cnt3+=1
ans = min(cnt1,cnt2,cnt3)
print(ans)
","```
n = int(input())
a, b = map(int, input().split())
p = list(map(int, input().split()))
counts = [0, 0, 0]

for x in p:
    if x <= a:
        counts[0] += 1
    elif a < x <= b:
        counts[1] += 1
    else:
        counts[2] += 1

print(min(counts))
```",minor,Meta-Llama-2-7b-chat,0.8013
149,python_150,Python,"num = int(input())
check_list = [0] * num * num

def make_bridge(island1, island2):
    if(island1 < island2):
        check_list[(island1-1)*num + (island2-1)]=1;
    else:
        check_list[(island2-1)*num + (island1-1)]=1;

if num%2==0:
    sum_pair = num+1
else:
    sum_pair = num

for i in range(num):
    for j in range(i):
        if (i+1 + j+1 != sum_pair):
            check_list[j*num + i]=1;

bridge_num=0;

for i in range(num*num):
    if(check_list[i]==1):
        bridge_num+=1;

print(bridge_num);

for i in range(num*num):
    if(check_list[i]==1):
        left = i // num
        right = i % num
        print(str(left+1)+"" ""+str(right+1));
","```
n = int(input())
bridge_map = [0] * n * n

def connect_islands(island1, island2):
    if island1 < island2:
        bridge_map[(island1 - 1) * n + island2 - 1] = 1
    else:
        bridge_map[(island2 - 1) * n + island1 - 1] = 1

if n % 2 == 0:
    pair_sum = n + 1
else:
    pair_sum = n

for i in range(n):
    for j in range(i):
        if i + j + 2!= pair_sum:
            bridge_map[j * n + i] = 1

bridge_count = 0

for i in range(n * n):
    if bridge_map[i] == 1:
        bridge_count += 1

print(bridge_count)

for i in range(n * n):
    if bridge_map[i] == 1:
        left = i // n
        right = i % n
        print(f""{left + 1} {right + 1}"")
```",minor,Meta-Llama-2-7b-chat,0.848
150,python_151,Python,"import math
x = int(input())

tmp = 100

for i in range(3761):
    if tmp < x:
        tmp = math.floor(tmp * 1.01)
    else:
        print(i)
        break","```
import math

x = int(input())

target = 100

for i in range(3761):
    target = math.floor(target * 1.01) if target < x else print(i) and break",minor,Meta-Llama-2-7b-chat,0.9418
151,python_152,Python,"data = int(input())
array = list(map(int, input().split()))
counter = 0
l = sum(array)
r = []
for a in array[:-1]:
  counter += a
  k = abs(l - 2*counter)
  r.append(k)
r.sort()
print(r[0])","```
n = int(input())
numbers = list(map(int, input().split()))
total = sum(numbers)
result = []
for num in numbers[:-1]:
    total -= num
    result.append(abs(total))
result.sort()
print(result[0])
```",minor,Meta-Llama-2-7b-chat,0.8117
152,python_153,Python,"x = int(input())
def ans(x):
    for a in range(0, 1000)[::-1]:
        for b in range(-1000, 1000)[::-1]:
            if a**5 - b**5 == x:
                return a, b
a,b = ans(x)
print(a,b)","```
x = int(input())
def find_ab(x):
    for a in range(1000, -1, -1):
        for b in range(-1000, 1001):
            if a**5 - b**5 == x:
                return a, b
a, b = find_ab(x)
print(a, b)
```",minor,Meta-Llama-2-7b-chat,0.818
153,python_154,Python,"# -*- coding: utf-8 -*-

def dfs(s, mx, N):
    if len(s) == N:
        print(s)
    else:
        for i in range(97, ord(mx) + 1):
            dfs(s + chr(i), chr(max(i + 1, ord(mx))), N)

N = int(input())

dfs('', 'a', N)","```
# -*- coding: utf-8 -*-

def generate_strings(length):
    if length == 0:
        print("""")
    else:
        for char in range(ord('a'), ord('z') + 1):
            generate_strings(length - 1)(chr(char) + """")

N = int(input())

generate_strings(N)
```",minor,Meta-Llama-2-7b-chat,0.8105
154,python_155,Python,"s = ''.join(list(map(lambda x: x[0].upper(),input().split())))
print(s)
","```
s = ''.join([x[0].upper() for x in input().split()])
print(s)
```",minor,Meta-Llama-2-7b-chat,0.8875
155,python_156,Python,"s = input().split()
A=int(s[0])
B=int(s[1])

def factorization(n):
    p=[]
    arr = []
    temp = n
    for i in range(2, int(-(-n**0.5//1))+1):
        if temp%i==0:
            cnt=0
            while temp%i==0:
                cnt+=1
                temp //= i
            arr.append([i, cnt])
            p.append(i)

    if temp!=1:
        arr.append([temp, 1])
        p.append(temp)

    if arr==[]:
        arr.append([n, 1])
        p.append(n)

    return p
A_fact=[]
B_fact=[]
answer=[]
count=0

A_fact=factorization(A)
B_fact=factorization(B)

for p in A_fact:
    if p in B_fact:
            answer.append(p)
            count+=1
if A==1 and B==1:
    print(count)
else:
    print(count+1)
","```
s = input().split()
a, b = map(int, s)

def factorization(n):
    factors = []
    temp = n
    for i in range(2, int(-(-n**0.5//1))+1):
        if temp % i == 0:
            count = 0
            while temp % i == 0:
                count += 1
                temp //= i
            factors.append((i, count))
    if temp!= 1:
        factors.append((temp, 1))
    if not factors:
        factors.append((n, 1))
    return factors

a_factors = factorization(a)
b_factors = factorization(b)

common_factors = [factor for factor in a_factors if factor in b_factors]
print(len(common_factors) + (1 if a == 1 and b == 1 else 0))",minor,Meta-Llama-2-7b-chat,0.9248
156,python_157,Python,"MOD = 10**9 + 7
N = int(input())

ATCG = ""ATCG""

memo = {}
def dfs(i, last):
    if i == N:
        return 1
    key = (i, last)
    if key in memo:
        return memo[key]
    p = None
    l2 = last[-2:]
    if l2 == ""AC"":
        p = ""G""
    elif l2 == ""AG"":
        p = ""C""
    elif l2 == ""GA"":
        p = ""C""
    elif last == ""AGG"" or last == ""ATG"" or last == ""AGT"":
        p = ""C""
    res = 0
    for c in ATCG:
        if c == p:
            continue
        res += dfs(i+1, last[1:] + c)
    memo[key] = res = res % MOD
    return res
print(dfs(0, ""***""))","```
MOD = 10**9 + 7
N = int(input())

ATCG = ""ATCG""

memo = {}
def dfs(i, last):
    if i == N:
        return 1
    key = (i, last)
    if key in memo:
        return memo[key]
    if i + 1 == N:
        p = ""A"" if last[0] == ""A"" else ""T"" if last[0] == ""T"" else ""C"" if last[0] == ""G"" else ""G""
    else:
        if last[0:2] in [""AC"", ""AG""]:
            p = ""G""
        elif last[0:2] in [""GA"", ""AT""]:
            p = ""C""
        elif last in [""AGG"", ""ATG"", ""AGT""]:
            p = ""C""
        else:
            p = ""A"" if last[0] == ""A"" else ""T"" if last[0] == ""T"" else ""C"" if last[0] == ""G"" else ""G""
    res = 0
    for c in ATCG:
        if c == p:
            continue
        res += dfs(i+1, last[1:] + c)
    memo[key] = res %= MOD
    return res
print(dfs(0, ""***""))
```",minor,Meta-Llama-2-7b-chat,0.8072
157,python_158,Python,"N, M = map(int, input().split())
KA = [list(map(int, input().split())) for _ in range(N)]

res = [0] * 31
for i in range(N):
    for a in KA[i][1:]:
        res[a] += 1
ans = 0
for r in res:
    if r == N:
        ans += 1
print(ans)
","```
N, M = map(int, input().split())
KA = [[*map(int, input().split())] for _ in range(N)]

result = [0] * 31
for row in KA:
    for value in row[1:]:
        result[value] += 1
answer = sum(1 for count in result if count == N)
print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8114
158,python_159,Python,"import io, os
input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline
import sys

# sys.stdout.write(str(n)+""\n"")
MODULO = 1000000007
# INF = 1e18+10

def gcd(a, b):
	while b != 0:
		a, b = b, a % b
	return a

n = int(input())

a_b = [() for i in range(n)]
m_b_a = [() for i in range(n)]

# a_b_value_indices = {}
# m_b_a_value_indices = {}

a_b_value_count = {}
m_b_a_value_count = {}

a_b_value_rep = {}
m_b_a_value_rep = {}

used = [False for _ in range(n)]
zeroes = 0
is_zero = [False for _ in range(n)]

for i in range(n):
	a, b = map(int, input().split())

	if a == 0 and b == 0:
		zeroes += 1
		used[i] = True
		is_zero[i] = True
	else:
		if a == 0:
			a_b[i] = (0, 1)
			m_b_a[i] = (1, 0)
		elif b == 0:
			a_b[i] = (1, 0)
			m_b_a[i] = (0, 1)
		else:
			neg = False
			if a*b < 0:
				neg = True
			d = gcd(abs(a), abs(b))
			a = abs(a) // d
			b = abs(b) // d

			if neg:
				a_b[i] = (-a, b)
				m_b_a[i] = (b, a)
			else:
				a_b[i] = (a, b)
				m_b_a[i] = (-b, a)

		a_b_value_count[a_b[i]] = a_b_value_count.get(a_b[i], 0) + 1
		# a_b_value_indices[a_b[i]] = a_b_value_indices.get(a_b[i], []) + [i]
 
		m_b_a_value_count[m_b_a[i]] = m_b_a_value_count.get(m_b_a[i], 0) + 1
		# m_b_a_value_indices[m_b_a[i]] = m_b_a_value_indices.get(m_b_a[i], []) + [i]
		if a_b[i] not in a_b_value_rep:
			a_b_value_rep[a_b[i]] = i
		if m_b_a[i] not in m_b_a_value_rep:
			m_b_a_value_rep[m_b_a[i]] = i

ans = 1
for i in range(n):
	if not is_zero[i] and not used[a_b_value_rep[a_b[i]]]:
		# if not connected
		if a_b[i] not in m_b_a_value_count:
			ans *= pow(2, a_b_value_count[a_b[i]], MODULO)
			ans %= MODULO
			used[a_b_value_rep[a_b[i]]] = True
			# for j in a_b_value_indices[a_b[i]]:
			# 	used[j] = True
		else:
			s = a_b_value_count[a_b[i]]
			t = m_b_a_value_count[a_b[i]]
			ans *= ((1*pow(2, s, MODULO) + 1*pow(2, t, MODULO) -1) % MODULO)
			ans %= MODULO

			used[a_b_value_rep[a_b[i]]] = True
			used[m_b_a_value_rep[a_b[i]]] = True
			# for j in m_b_a_value_indices[a_b[i]]:
			# 	used[j] = True
 
			# used_a_b_keys.add(a_b_key)
			# used_a_b_keys.add(-1/a_b_key)
 
 
# -1 is for empty
print((ans-1+zeroes) % MODULO)","```
import io, os
import sys

MODULO = 1000000007

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n = int(input())

a_b = []
m_b_a = []

a_b_value_count = {}
m_b_a_value_count = {}

a_b_value_rep = {}
m_b_a_value_rep = {}

used = [False] * n
zeroes = 0
is_zero = [False] * n

for i in range(n):
    a, b = map(int, input().split())

    if a == 0 and b == 0:
        zeroes += 1
        used[i] = True
        is_zero[i] = True
    else:
        if a == 0:
            a_b.append((0, 1))
            m_b_a.append((1, 0))
        elif b == 0:
            a_b.append((1, 0))
            m_b_a.append((0, 1))
        else:
            neg = a * b < 0
            d = gcd(abs(a), abs(b))
            a //= d
            b //= d

            if neg:
                a_b.append((-a, b))
                m_b_a.append((b, a))
            else:
                a_b.append((a, b))
                m_b_a.append((-b, a))

        a_b_value_count.setdefault(a_b[-1], 0)
        a_b_value_count[a_b[-1]] += 1

        m_b_a_value_count.setdefault(m_b_a[-1], 0)
        m_b_a_value_count[m_b_a[-1]] += 1

        if a_b[-1] not in a_b_value_rep:
            a_b_value_rep[a_b[-1]] = i
        if m_b_a[-1] not in m_b_a_value_rep:
            m_b_a_value_rep[m_b_a[-1]] = i

ans = 1
for i in range(n):
    if not is_zero[i] and not used[a_b_value_rep.get(a_b[i], -1)]:
        if a_b[i] not in m_b_a_value_count:
            ans *= pow(2, a_b_value_count[a_b[i]], MODULO)
            ans %= MODULO
            used[a_b_value_rep.get(a_b[i], -1)] = True
        else:
            s = a_b_value_count[a_b[i]]
            t = m_b_a_value_count[a_b[i]]
            ans *= ((1 * pow(2, s, MODULO) + 1 * pow(2, t, MODULO) - 1) % MODULO)
            ans %= MODULO

            used[a_b_value_rep.get(a_b[i], -1)] = True
            used[m_b_a_value_rep.get(a_b[i], -1)] = True

print((ans - 1 + zeroes) % MODULO)",minor,Meta-Llama-2-7b-chat,0.964
159,python_160,Python,"# -*- coding: utf-8 -*-
import sys
sys.setrecursionlimit(10**9)
INF=10**18
MOD=10**9+7
input=lambda: sys.stdin.readline().rstrip()
YesNo=lambda b: bool([print('Yes')] if b else print('No'))
YESNO=lambda b: bool([print('YES')] if b else print('NO'))
int1=lambda x:int(x)-1

R,C,K=map(int,input().split())
V=[[0]*C for _ in range(R)]
for i in range(K):
    r,c,v=map(int,input().split())
    r-=1
    c-=1
    V[r][c]=v
dp=[[0]*C for _ in range(4)]
for y in range(R):
    for x in range(C):
        for i in range(2,-1,-1):
            dp[i+1][x]=max(dp[i+1][x],dp[i][x]+V[y][x])
        if x<C-1:
            for i in range(3,-1,-1):
                dp[i][x+1]=max(dp[i][x+1],dp[i][x])
    if y+1<R:
        MAX=0
        for x in range(C):
            for i in range(4):
                MAX=max(MAX,dp[i][x])
                dp[i][x]=0
            dp[0][x]=MAX
print(max(dp[0][-1],dp[1][-1],dp[2][-1],dp[3][-1]))","```
# -*- coding: utf-8 -*-
import sys
sys.setrecursionlimit(10**9)
INF = 10**18
MOD = 10**9 + 7
input = lambda: sys.stdin.readline().rstrip()
yesno = lambda b: print('Yes' if b else 'No')
yesno2 = lambda b: print('YES' if b else 'NO')
int1 = lambda x: int(x) - 1

R, C, K = map(int, input().split())
V = [[0] * C for _ in range(R)]
for i in range(K):
    r, c, v = map(int, input().split())
    r -= 1
    c -= 1
    V[r][c] = v
dp = [[0] * C for _ in range(4)]
for y in range(R):
    for x in range(C):
        for i in range(2, -1, -1):
            dp[i + 1][x] = max(dp[i + 1][x], dp[i][x] + V[y][x])
        if x < C - 1:
            for i in range(3, -1, -1):
                dp[i][x + 1] = max(dp[i][x + 1], dp[i][x])
    if y + 1 < R:
        max_val = 0
        for x in range(C):
            for i in range(4):
                max_val = max(max_val, dp[i][x])
                dp[i][x] = 0
        dp[0][x] = max_val
print(max(dp[0][-1], dp[1][-1], dp[2][-1], dp[3][-1]))
```",minor,Meta-Llama-2-7b-chat,0.8799
160,python_161,Python,"N = int(input())
for i in range(1,50001):
    if int(i * 1.08) == N:
        print(i)
        exit()
print("":("")","```
target = int(input())
for i in range(1, 50001):
    if round(i * 1.08) == target:
        print(i)
        break
else:
    print("":("")
```",minor,Meta-Llama-2-7b-chat,0.8413
161,python_162,Python,"s = input()
exitLower = list(set(list(s)))
m = len(s)

for alp in exitLower:
    SL = list(s)
    cnt = 0
    while len(set(SL)) > 1:
        for i in range(len(SL)-1):
            if SL[i+1] == alp:
                SL[i] = alp
        SL.pop()
        cnt += 1
    m = min(m,cnt)

print(m)

","```
s = input()
unique_chars = set(s)
min_steps = float('inf')

for char in unique_chars:
    remaining_chars = list(s)
    steps = 0
    while len(set(remaining_chars)) > 1:
        for i in range(len(remaining_chars) - 1):
            if remaining_chars[i + 1] == char:
                remaining_chars[i] = char
        remaining_chars.pop()
        steps += 1
    min_steps = min(min_steps, steps)

print(min_steps)
```",minor,Meta-Llama-2-7b-chat,0.7934
162,python_163,Python,"n = int(input())

c, s, f = [], [], []
for _ in range(n - 1):
    temp = [int(_) for _ in input().split()]
    c.append(temp[0])
    s.append(temp[1])
    f.append(temp[2])

for i in range(n):
    answer = 0
    for j in range(i, n - 1):
        if answer < s[j]:
            answer = s[j] + c[j]
        else:
            answer = ((answer - 1) // f[j] + 1) * f[j] + c[j]
    print(answer)
","```
n = int(input())

counts, speeds, fuel = [], [], []
for _ in range(n - 1):
    temp = [int(_) for _ in input().split()]
    counts.append(temp[0])
    speeds.append(temp[1])
    fuel.append(temp[2])

for i in range(n):
    current_speed = 0
    for j in range(i, n - 1):
        if current_speed < speeds[j]:
            current_speed = speeds[j] + counts[j]
        else:
            current_speed = ((current_speed - 1) // fuel[j] + 1) * fuel[j] + counts[j]
    print(current_speed)
```",minor,Meta-Llama-2-7b-chat,0.8082
163,python_164,Python,"n,k=map(int,input().split())
a=list(map(int,input().split()))
a.sort()
for i in range(1,31):
    if 2**i>=a[-1]+1:
        num=i
        break
ans=2**(num-1)
num1=2**(num-1)
l1=[]
for i in range(num+1):
    cnt=0
    for j in range(n):
        cnt+=-(a[j]//-ans)-1
    num1=num1//2
    if cnt>k:
        ans=min(a[-1],ans+num1)
    else:
        l1.append(ans)
        ans=max(1,ans-num1)
print(min(l1))
","```
n, k = map(int, input().split())
a = sorted(map(int, input().split()))
for i in range(1, 31):
    if 2 ** i >= a[-1] + 1:
        num = i
        break
ans = 2 ** (num - 1)
num1 = 2 ** (num - 1)
l1 = []
for _ in range(num + 1):
    cnt = sum(-(a[j] // ans) - 1 for j in range(n))
    num1 //= 2
    if cnt > k:
        ans = min(a[-1], ans + num1)
    else:
        l1.append(ans)
        ans = max(1, ans - num1)
print(min(l1))
```",minor,Meta-Llama-2-7b-chat,0.9301
164,python_165,Python,"import sys
N, M = list(map(int, input().split()))
S = set()
B = [False] * (N + 1)
for i in range(M):
    a, b = list(map(int, input().split()))
    if a == 1:
        S.add(b)
    elif b == N:
        B[a] = True
for s in S:
    if B[s]:
        print('POSSIBLE')
        sys.exit()
print('IMPOSSIBLE')
","```
import sys
N, M = map(int, input().split())
s = set()
b = [False] * (N + 1)
for _ in range(M):
    a, b = map(int, input().split())
    if a == 1:
        s.add(b)
    elif b == N:
        b[a] = True
for i in s:
    if b[i]:
        print('POSSIBLE')
        sys.exit()
print('IMPOSSIBLE')
```",minor,Meta-Llama-2-7b-chat,0.8409
165,python_166,Python,"n = int(input())
s = list(input())


v = []


stock = 0

for i in s:
    if i==""("":
        stock+=1
        v.append(""("")
    else:
        if stock ==0:
            v.insert(0,""("")
            v.append("")"")
        else:
            stock -= 1
            v.append("")"")

for i in range(stock):
    v.append("")"")

print(*v,sep='')
","```
n = int(input())
s = list(input())

balance = []
stock = 0

for char in s:
    if char == '(':
        stock += 1
        balance.append('(')
    else:
        if stock == 0:
            balance.insert(0, '(')
            balance.append(')')
        else:
            stock -= 1
            balance.append(')')

balance.extend(')' * stock)
print(*balance, sep='')
```",minor,Meta-Llama-2-7b-chat,0.8066
166,python_167,Python,"N = int(input())
A = list(map(int, input().split()))

L, R = 0, 0
S = A[0]
T = A[0]

answer = 0
while L < N and R < N:
  
  if S == T:
    answer += R - L + 1
    R += 1
    if R > N - 1:
      break
    S += A[R]
    T ^= A[R]
  else:
    S -= A[L]
    T ^= A[L]
    L += 1
  #print(L, R, answer)
print(answer)","```
n = int(input())
a = list(map(int, input().split()))

left, right = 0, 0
sum_left, sum_right = a[0], a[0]

answer = 0
while left < n and right < n:
    if sum_left == sum_right:
        answer += right - left + 1
        right += 1
        if right == n:
            break
        sum_right += a[right]
        sum_left ^= a[right]
    else:
        sum_left -= a[left]
        sum_right ^= a[left]
        left += 1
print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8244
167,python_168,Python,"import sys
import os
import math

ii = lambda: int(sys.stdin.buffer.readline().rstrip())
il = lambda: list(map(int, sys.stdin.buffer.readline().split()))
fl = lambda: list(map(float, sys.stdin.buffer.readline().split()))
iln = lambda n: [int(sys.stdin.buffer.readline().rstrip()) for _ in range(n)]

iss = lambda: sys.stdin.buffer.readline().decode().rstrip()
sl = lambda: list(map(str, sys.stdin.buffer.readline().decode().split()))
isn = lambda n: [sys.stdin.buffer.readline().decode().rstrip() for _ in range(n)]

MOD = 10 ** 9 + 7


def main():
    if os.getenv(""LOCAL""):
        sys.stdin = open(""input.txt"", ""r"")

    N = ii()
    S = iss()
    mx = S.count('R') * S.count('G') * S.count('B')
    for i in range(N):
        for j in range(i + 1, N):
            k = j + j - i
            if k < N:
                if S[i] != S[j] and S[i] != S[k] and S[j] != S[k]:
                    mx -= 1

    print(mx)


if __name__ == '__main__':
    main()
","```
import sys
import os
import math

ii = lambda: int(sys.stdin.buffer.readline().rstrip())
il = lambda: list(map(int, sys.stdin.buffer.readline().split()))
fl = lambda: list(map(float, sys.stdin.buffer.readline().split()))
iln = lambda n: [int(sys.stdin.buffer.readline().rstrip()) for _ in range(n)]

iss = lambda: sys.stdin.buffer.readline().decode().rstrip()
sl = lambda: list(map(str, sys.stdin.buffer.readline().decode().split()))
isn = lambda n: [sys.stdin.buffer.readline().decode().rstrip() for _ in range(n)]

MOD = 10**9 + 7

def main():
    if os.getenv('LOCAL'):
        sys.stdin = open('input.txt', 'r')

    n = ii()
    s = iss()
    mx = math.comb(s.count('R'), s.count('G')) * s.count('B')
    for i in range(n):
        for j in range(i + 1, n):
            k = j + j - i
            if k < n:
                if s[i]!= s[j] and s[i]!= s[k] and s[j]!= s[k]:
                    mx -= 1

    print(mx)

if __name__ == '__main__':
    main()
```",minor,Meta-Llama-2-7b-chat,0.9433
168,python_169,Python,"import numpy as np


N, M, C   = [int(i) for i in input().split()]

B = [int(i) for i in input().split()]


A = []
for i in range(N):
    A.append([int(i) for i in input().split()])

#print([N, M, C])

B = np.array(B)
#print(B)

A = np.array(A)
#print(A)


print(np.sum((np.sum(A * B, axis=1) + C) > np.array(0)))

","```
import numpy as np

N, M, C = map(int, input().split())
B = np.array([int(i) for i in input().split()])
A = np.array([list(map(int, input().split())) for _ in range(N)])

print((np.sum(A * B, axis=1) + C > 0).sum())
```",minor,Meta-Llama-2-7b-chat,0.7955
169,python_170,Python,"# B - Ordinary Number

n = int(input())
p = list(int(x) for x in input().split())

ans = 0
for i in range(1, n-1):
    if (p[i-1]<p[i] and p[i]<p[i+1]) or (p[i+1]<p[i] and p[i]<p[i-1]):
        ans += 1

print(ans)","```
n = int(input())
p = list(map(int, input().split()))

ans = 0
for i in range(1, n-1):
    if p[i-1] < p[i] < p[i+1] or p[i+1] < p[i] < p[i-1]:
        ans += 1

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8596
170,python_171,Python,"X, A, B = list(map(int, input().split()))

if B-A <= 0:
    print('delicious')
elif B-A <= X:
    print('safe')
else:
    print('dangerous')","```
x, a, b = map(int, input().split())

if b - a <= 0:
    print('delicious')
elif b - a <= x:
    print('safe')
else:
    print('dangerous')
```",minor,Meta-Llama-2-7b-chat,0.8599
171,python_172,Python,"n = int(input())

cnt_a = 0   # Bで始まらないがAで終わる
cnt_b = 0   # Bで始まるがAで終わらない
cnt_ba = 0  # Bで始まりAで終わる

ans = 0
for _ in range(n):
    s = input()
    ans += s.count('AB')
    if s.endswith('A') and s.startswith('B'):
        cnt_ba += 1
    else:
        if s.endswith('A'):
            cnt_a += 1
        if s.startswith('B'):
            cnt_b += 1

if cnt_ba == 0:
    ans += min(cnt_a, cnt_b)
else:
    ans += cnt_ba-1
    if cnt_a > 0:
        cnt_a -= 1
        ans += 1
    if cnt_b > 0:
        cnt_b -= 1
        ans += 1
    # 残ったxxAとBxxを組み合わせてABを作る
    ans += min(cnt_a, cnt_b)

print(ans)","```
n = int(input())

cnt_a, cnt_b, cnt_ba = 0, 0, 0

ans = 0
for _ in range(n):
    s = input()
    ans += s.count('AB')
    if s.startswith('B') and s.endswith('A'):
        cnt_ba += 1
    elif s.endswith('A'):
        cnt_a += 1
    elif s.startswith('B'):
        cnt_b += 1

if cnt_ba > 0:
    ans += cnt_ba - 1
    ans += min(cnt_a, cnt_b)
    cnt_a, cnt_b = 0, 0
else:
    ans += min(cnt_a, cnt_b)

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8222
172,python_173,Python,"INF = float(""inf"")

def bellman_ford(edges, n, s):
    d = [0] + [INF] * (n-1)
    for i in range(n):
        for f, t, c in edges:
            if d[f] == INF: continue
            if d[t] > d[f] + c:
                if i == n-1: d[t] = -INF
                else: d[t] = d[f] + c
    for i in range(n):
        for f, t, c in edges:
            if d[f] == INF: continue
            d[t] = min(d[t], d[f] + c)
    return d

n, m, p = map(int, input().split())
es = [None] * m
for i in range(m):
    f, t, c = map(int, input().split())
    es[i] = (f-1, t-1, -(c-p))

d = bellman_ford(es, n, 0)
print(-1 if d[n-1] == -INF else max(0, -d[n-1]))
","```
INF = float(""inf"")

def bellman_ford(edges, n, source):
    distance = [0] + [INF] * (n-1)
    for _ in range(n):
        for f, t, cost in edges:
            if distance[f] == INF: continue
            if distance[t] > distance[f] + cost:
                if _ == n-1: distance[t] = -INF
                else: distance[t] = distance[f] + cost
    for f, t, cost in edges:
        if distance[f] == INF: continue
        distance[t] = min(distance[t], distance[f] + cost)
    return distance

n, m, p = map(int, input().split())
edges = [(f-1, t-1, -(c-p)) for f, t, c in [map(int, input().split()) for _ in range(m)]]
distance = bellman_ford(edges, n, 0)
print(-1 if distance[n-1] == -INF else max(0, -distance[n-1]))
```",minor,Meta-Llama-2-7b-chat,0.8581
173,python_174,Python,"S = list(input())
l = len(S)

ans = 0

for bit in range(1 << (l-1)):
    # print(bit)
    f = S[0]
    for i in range(l-1):
        if bit & (1 << i):
            f += ""+""
        f += S[i+1]

    ans += sum(map(int, f.split(""+"")))
print(ans)
","```
S = list(input())
l = len(S)

ans = 0

for bit in range(1 << (l-1)):
    f = S[0]
    for i in range(l-1):
        if (bit >> i) & 1:
            f += ""+""
        f += S[i+1]

    ans += eval(''.join(map(str, filter(str.isdigit, f.split('+')))))
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8494
174,python_175,Python,"def main():
    MOD = 10 ** 9 + 7
    N, M = list(map(int, input().split(' ')))
    S = list(map(int, input().split(' ')))
    T = list(map(int, input().split(' ')))
    dp = [[0 for _ in range(M + 1)] for _ in range(N + 1)]
    sdp = [[0 for _ in range(M + 1)] for _ in range(N + 1)]
    for n, s in enumerate(S):
        for m, t in enumerate(T):
            sdp_val = sdp[n][m]
            new_dp_val = (sdp_val + 1) if s == t else 0
            dp[n + 1][m + 1] = new_dp_val % MOD
            sdp[n + 1][m + 1] = (sdp[n][m + 1] + sdp[n + 1][m] - sdp_val + new_dp_val) % MOD
    print((sdp[N][M] + 1) % MOD)  # 1: an empty sequence


if __name__ == '__main__':
    main()","```
def main():
    MOD = 10**9 + 7
    N, M = map(int, input().split())
    S, T = map(int, (input(), input()))
    dp = [[0] * (M + 1) for _ in range(N + 1)]
    sdp = [[0] * (M + 1) for _ in range(N + 1)]
    for n, s in enumerate(S):
        for m, t in enumerate(T):
            sdp_val = sdp[n][m]
            new_dp_val = sdp_val + (s == t)
            dp[n + 1][m + 1] = new_dp_val % MOD
            sdp[n + 1][m + 1] = (sdp[n][m + 1] + sdp[n + 1][m] - sdp_val + new_dp_val) % MOD
    print((sdp[N][M] + 1) % MOD)


if __name__ == '__main__':
    main()
```",minor,Meta-Llama-2-7b-chat,0.8872
175,python_176,Python,"n = int(input())

a = list(map(int,input().split()))
a.sort()
d = {}
for i in range(n):
    if(a[i] not in d):d[a[i]] = 1
    else:d[a[i]] += 1
if(len(d) == 1):
    if(a[0] == 0):
        print('Yes')
        exit()
elif(n%3 == 0):
    if(len(d) == 2):
        if(0 in d):
            if(d[0] == n // 3):
                print('Yes')
                exit()
    elif(len(d) == 3):
        k = list(d.keys())
        if(k[0]^k[1]^k[2] == 0):
            if(d[k[0]] == n // 3 and d[k[1]] == n // 3 and d[k[2]] == n // 3):
                print('Yes')
                exit()
print('No')","```
n = int(input())

numbers = list(map(int, input().split()))
numbers.sort()

frequency = {}
for num in numbers:
    if num not in frequency:
        frequency[num] = 1
    else:
        frequency[num] += 1

if len(frequency) == 1 and 0 in frequency:
    print('Yes')
    exit()
elif n % 3 == 0:
    if len(frequency) == 2:
        if 0 in frequency and frequency[0] == n // 3:
            print('Yes')
            exit()
    elif len(frequency) == 3:
        keys = list(frequency.keys())
        if keys[0] ^ keys[1] ^ keys[2] == 0:
            if frequency[keys[0]] == n // 3 and frequency[keys[1]] == n // 3 and frequency[keys[2]] == n // 3:
                print('Yes')
                exit()
print('No')
```",minor,Meta-Llama-2-7b-chat,0.862
176,python_177,Python,"# ABC077b
import sys
import math
input = sys.stdin.readline
sys.setrecursionlimit(10**6)

n = int(input())
print(math.floor(math.sqrt(n))**2)
","```
import sys
import math
input = sys.stdin.readline
sys.setrecursionlimit(10**6)

n = int(input())
print(int(math.sqrt(n)) ** 2)
```",minor,Meta-Llama-2-7b-chat,0.844
177,python_178,Python,"a = int(input())
v = {}
v[a] = True
ans = 1
while True:
    ans += 1
    if a % 2 == 1:
        a = (a * 3) + 1
    else:
        a = (a//2)
    if v.get(a): 
        break
    else:
        v[a] = True
 
print(ans)
","```
n = int(input())
seen = {n}
ans = 1
while n!= 1:
    if n % 2 == 1:
        n = n * 3 + 1
    else:
        n = n // 2
    if n in seen:
        break
    else:
        seen.add(n)
    ans += 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8222
178,python_179,Python,"X = int(input())

if 400 <= X <= 599:
    print(8)
elif X <= 799:
    print(7)
elif X <= 999:
    print(6)
elif X <= 1199:
    print(5)
elif X <= 1399:
    print(4)
elif X <= 1599:
    print(3)
elif X <= 1799:
    print(2)
elif X <= 1999:
    print(1)
","```
X = int(input())

if 400 <= X <= 599:
    print(8)
elif X <= 1399:
    print(X // 200 + 3)
else:
    print(1)
```",minor,Meta-Llama-2-7b-chat,0.8094
179,python_180,Python,"n,*cc = map(int, open(0).read().split())
MOD = 10**9+7

from collections import defaultdict
d = {}
dp = defaultdict(lambda: 1)

for i,c in enumerate(cc):
    dp[i] = dp[i-1]
    if c in d:
        j = d[c]
        if i - j > 1:
            dp[i] += dp[j]
            dp[i] %= MOD
    d[c] = i

print(dp[n-1])","```
n, *chars = map(int, open(0).read().split())
MOD = 10**9 + 7

from collections import defaultdict
dp = defaultdict(int)

for i, c in enumerate(chars):
    dp[i] = dp[i-1]
    if c in dp:
        j = dp[c]
        if i - j > 1:
            dp[i] = (dp[i] + dp[j]) % MOD
    dp[c] = i

print(dp[n-1])
```",minor,Meta-Llama-2-7b-chat,0.8502
180,python_181,Python,"n, l = map(int, input().split())
s_l = [ str(input()) for _ in range(n)  ]
s_l = sorted(s_l)
print(''.join(s_l))","```
strings, length = map(int, input().split())
strings = [input() for _ in range(length)]
strings.sort()
print('\n'.join(strings))
```",minor,Meta-Llama-2-7b-chat,0.8396
181,python_182,Python,"N, M = map(int, input().split())
S = input()

steps = [[] for i in range(N+1)]
steps[0] = [0]
num_steps = 0
root = [0] + [-1]*N
pos = 1

while pos <= N:
  starts = steps[num_steps]
  if not starts:
    break
  for start in starts:
    end = min(start+M+1, N+1)
    for i in range(pos, end):
      if S[i] == '0':
        steps[num_steps+1].append(i)
        root[i] = start
    
    pos = end
  
  num_steps += 1


if root[N] == -1:
  ans = -1
else:
  pos = N
  ans = []
  while pos > 0:
    pre_pos = root[pos]
    ans.append(str(pos - pre_pos))
    pos = pre_pos
  
  ans = ans[::-1]
  ans = ' '.join(ans)


print(ans)","```
N, M = map(int, input().split())
S = input()

steps = [[] for _ in range(N+1)]
steps[0] = [0]
num_steps = 0
root = [0] + [-1]*N
pos = 1

while pos <= N:
    starts = steps[num_steps]
    if not starts:
        break
    for start in starts:
        end = min(start+M+1, N+1)
        for i in range(pos, end):
            if S[i-1] == '0':
                steps[num_steps+1].append(i)
                root[i] = start
        pos = end
    num_steps += 1

if root[N] == -1:
    ans = -1
else:
    pos = N
    ans = []
    while pos > 0:
        pre_pos = root[pos]
        ans.append(str(pos - pre_pos))
        pos = pre_pos
    ans = ans[::-1]
    ans =''.join(ans)

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8776
182,python_183,Python,"N,K =map(int, input().split())
V=list(map(int, input().split()))
res=0
for l in range(K+1):
    for r in range(K+1-l):
        if l+r>N: continue
        t=V[:l]+V[N-r:]
        t.sort()
        S=sum(t)
        for c in range(min(K-l-r,l+r)):
            if t[c]<0:
                S-=t[c]
        res=max(res,S)
print(res)","```
n, k = map(int, input().split())
v = sorted(map(int, input().split()))
res = 0
for l in range(k+1):
    for r in range(1, k+1-l+1):
        if l+r > n: continue
        t = v[:l] + v[n-r:]
        t.sort()
        s = sum(t)
        for c in range(min(k-l-r, l+r)):
            if t[c] < 0:
                s -= t[c]
        res = max(res, s)
print(res)
```",minor,Meta-Llama-2-7b-chat,0.7967
183,python_184,Python,"a, b, x = map(int, input().split())

print(b // x - (a-1)// x)","```
a, b, x = map(int, input().split())

print((b - a) // x + 1)
```",minor,Meta-Llama-2-7b-chat,0.7856
184,python_185,Python,"def main(a,b):
  if (a*b) % 2 == 0:
    print('Even')
  else:
    print('Odd')

a,b = map(int, input().split())
main(a,b)","```
def check_number(a, b):
    product = a * b
    if product % 2 == 0:
        print('Even')
    else:
        print('Odd')

a, b = map(int, input().split())
check_number(a, b)
```",minor,Meta-Llama-2-7b-chat,0.8147
185,python_186,Python,"n, r = map(int, input().split())
if n < 10:
  r += 100*(10-n)
print(r)","```
n, _ = map(int, input().split())
if n < 10:
    print(100 * (10 - n) + _)
else:
    print(_)
```",minor,Meta-Llama-2-7b-chat,0.8824
186,python_187,Python,"n,m,l=map(int,input().split())
g=[[999999999999 if i!=j else 0 for j in range(n)] for i in range(n)]
for i in range(m):
    a,b,c=map(int,input().split())
    a,b=a-1,b-1
    if c>l:
        continue
    g[a][b]=c
    g[b][a]=c

for k in range(n):
    for i in range(n):
        for j in range(n):
            if g[i][j]>g[i][k]+g[k][j]:
                g[i][j] = g[i][k]+g[k][j]

for i in range(n):
    for j in range(n):
        if g[i][j]<=l:
            g[i][j]=1

for k in range(n):
    for i in range(n):
        for j in range(n):
            if g[i][j]>g[i][k]+g[k][j]:
                g[i][j] = g[i][k]+g[k][j]

for i in range(int(input())):
    s,t=map(int,input().split())
    s-=1
    t-=1
    print(g[s][t]-1 if g[s][t]-1<99999999999 else -1)

","```
n, m, l = map(int, input().split())
graph = [[float('inf') if i!= j else 0 for j in range(n)] for i in range(n)]
for _ in range(m):
    a, b, c = map(int, input().split())
    a, b = a - 1, b - 1
    if c > l:
        continue
    graph[a][b] = c
    graph[b][a] = c

for _ in range(n):
    for i in range(n):
        for j in range(n):
            if graph[i][j] > graph[i][k] + graph[k][j]:
                graph[i][j] = graph[i][k] + graph[k][j]

for i in range(n):
    for j in range(n):
        if graph[i][j] <= l:
            graph[i][j] = 1

for _ in range(n):
    for i in range(n):
        for j in range(n):
            if graph[i][j] > graph[i][k] + graph[k][j]:
                graph[i][j] = graph[i][k] + graph[k][j]

for _ in range(int(input())):
    s, t = map(int, input().split())
    s, t = s - 1, t - 1
    print(graph[s][t] - 1 if graph[s][t] - 1 < float('inf') else -1)
```",minor,Meta-Llama-2-7b-chat,0.9049
187,python_188,Python,"import numpy as np

H,N = list(map(int, input().split()))
As = []
Bs = []
for _ in range(N):
    a, b = list(map(int, input().split()))
    As.append(a)
    Bs.append(b)
As = np.array(As)
Bs = np.array(Bs)

dp = np.full((H+1), np.inf)
dp[0] = 0

for c in range(1,H+1):
    dp[c] = np.amin(dp[np.maximum(c - As, 0)] + Bs)

print(int(dp[-1]))
","```
import numpy as np

H, N = map(int, input().split())
As, Bs = np.array([*map(int, input().split()) for _ in range(N)]).T

dp = np.full(H+1, np.inf)
dp[0] = 0

for c in range(1, H+1):
    dp[c] = np.min(dp.max(0) - As + Bs)

print(int(dp[-1]))
```",minor,Meta-Llama-2-7b-chat,0.8309
188,python_189,Python,"x = input()
a = input()
b = input()
print (x - a) % b","```
numerator = int(input())
denominator1 = int(input())
denominator2 = int(input())
print((numerator - denominator1) % denominator2)
```",minor,Meta-Llama-2-7b-chat,0.7081
189,python_190,Python,"n,k=map(int,input().split())
ans=[i for i in range(n+1)]
cnt=0
mod=10**9+7
for i in range(k,n+2):
    x=(n-i+1)*i+1
    # sum_1=sum(ans[0:i])
    # sum_2=sum(ans[n-i+1:n+1])
    # print(sum_2)
    # print(sum_1)
    # x=sum_2-sum_1+1
    cnt+=x
print(cnt%mod)

","```
n, k = map(int, input().split())
ans = [i for i in range(n + 1)]
cnt = 0
mod = 10**9 + 7
for i in range(k, n + 2):
    x = (n - i + 1) * i
    cnt += x
print(cnt % mod)
```",minor,Meta-Llama-2-7b-chat,0.7989
190,python_191,Python,"from itertools import combinations_with_replacement

def main():
    n, m, q = map(int, input().split())
    abcd = [[int(i) for i in input().split()] for _ in range(q)]
    s = 0
    for p in combinations_with_replacement(range(1, m + 1), n):
        t = 0
        for a, b, c, d in abcd:
            t += d * (p[b - 1] - p[a - 1] == c)
        s = max(s, t)
    print(s)

if __name__ == '__main__':
    main()","```
from itertools import combinations_with_replacement

def main():
    n, m, q = map(int, input().split())
    queries = [[int(i) for i in input().split()] for _ in range(q)]
    max_score = 0
    for combination in combinations_with_replacement(range(1, m + 1), n):
        score = sum(d * ((b - 1) in combination and c == p[b - 1] - p[a - 1]) for a, b, c, d in queries)
        max_score = max(max_score, score)
    print(max_score)

if __name__ == '__main__':
    main()
```",minor,Meta-Llama-2-7b-chat,0.8519
191,python_192,Python,"N,K = map(int, input().split())

MOD = 998244353

PAT = []
for _ in range(K):
  l,r = map(int, input().split())
  PAT.append((l,r))
  
IMOS = [0] * (N+10)
IMOS[1] = 1
for i in range(0,N):
  if IMOS[i] == 0:
    continue
  for l,r in PAT:
    if i+l > N+1:
      continue
    IMOS[i+l] += IMOS[i]
    if i+r-1 > N+1:
      continue
    IMOS[i+r+1] -= IMOS[i]
  #print(i, IMOS)
  IMOS[i+1] += IMOS[i]
  IMOS[i+1] %= MOD
  
print((IMOS[N] - IMOS[N-1]) % MOD)
    ","```
N, K = map(int, input().split())
MOD = 998244353

pattern = []
for _ in range(K):
    l, r = map(int, input().split())
    pattern.append((l, r))

imos = [0] * (N + 10)
imos[1] = 1
for i in range(N):
    if not imos[i]:
        continue
    for l, r in pattern:
        if i + l > N + 1:
            continue
        imos[i + l] += imos[i]
        if i + r - 1 > N + 1:
            continue
        imos[i + r] -= imos[i]
    imos[i + 1] += imos[i]
    imos[i + 1] %= MOD

print((imos[N] - imos[N - 1]) % MOD)
```",minor,Meta-Llama-2-7b-chat,0.9004
192,python_193,Python,"N = int(input())
a = [int(x) for x in input().split()]

cnt = 0
for i in range(N):
    if a[i] % 2 == 0:
        if a[i] % 3 != 0 and a[i] % 5 != 0:
            cnt = 1

if cnt == 1:
    print(""DENIED"")
else:
    print(""APPROVED"")","```
N = int(input())
numbers = [int(x) for x in input().split()]

approved = all(num % 2 == 0 and (num % 3!= 0 or num % 5!= 0) for num in numbers)

print(""APPROVED"" if approved else ""DENIED"")
```",minor,Meta-Llama-2-7b-chat,0.8376
193,python_194,Python,"n,m = map(int,input().split())
mod = 10**9 + 7
l = n+1000
fac = [1]*l
facr = [1]*l

for i in range(l-1):
    fac[i+1] = fac[i]*(i+1)%mod
facr[l-1] = pow(fac[l-1],mod - 2,mod)
for i in range(1,l)[::-1]:
    facr[i-1] = facr[i]*i%mod

def combi(N,K):
    return fac[N]*facr[N-K]%mod*facr[K]%mod

prime = {}
i = 2
x = m
while i*i <= m:
    if x%i == 0:
        prime[i] = 0
        while x%i == 0:
            x = x//i
            prime[i] += 1
    i += 1
if x > 1:
    prime[x] = 1
ans = 1
for q in prime.values():
    ans *= combi(q+n-1,n-1)
    ans %= mod
print(ans)
","```
n, m = map(int, input().split())
mod = 10**9 + 7
l = n + 1000
fac = [1] * l
facr = [1] * l

for i in range(l - 1):
    fac[i + 1] = fac[i] * (i + 1) % mod

facr[l - 1] = pow(fac[l - 1], mod - 2, mod)
for i in range(l - 1, 0, -1):
    facr[i - 1] = facr[i] * i % mod

def combi(N, K):
    return fac[N] * facr[N - K] % mod * facr[K] % mod

prime = {}
i = 2
x = m
while i * i <= m:
    if x % i == 0:
        prime[i] = prime.get(i, 0)
        while x % i == 0:
            x //= i
            prime[i] += 1
    i += 1
if x > 1:
    prime[x] = prime.get(x, 0) + 1
ans = 1
for q in prime.values():
    ans *= combi(q + n - 1, n - 1)
    ans %= mod
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8745
194,python_195,Python,"h, w, k = (int(x) for x in input().split())
S = [input() for _ in range(h)]

ans = 10**18
for bit in range(1<<(h - 1)):
    segment = [0] * h
    seg_label = 0
    for i in range(h - 1):
        if bit & (1<<i):
            seg_label += 1
        segment[i + 1] = seg_label
    n = max(segment) + 1

    count = n - 1
    k_count = [0] * n
    for j in range(w):
        tmp_count = [0] * n
        for i in range(h):
            k_count[segment[i]] += int(S[i][j])
            tmp_count[segment[i]] += int(S[i][j])
            if k_count[segment[i]] > k:
                count += 1
                for seg in range(n):
                    k_count[seg] = tmp_count[seg]

    ans = min(ans, count)

print(ans)
","```
height, width, threshold = map(int, input().split())
image = [input() for _ in range(height)]

minimum_segments = 10**18
for mask in range(1 << (height - 1)):
    segment_labels = [0] * height
    segment_label = 0
    for i in range(height - 1):
        if mask & (1 << i):
            segment_label += 1
        segment_labels[i + 1] = segment_label
    max_segment_label = max(segment_labels) + 1

    count = max_segment_label
    segment_counts = [0] * max_segment_label
    for j in range(width):
        temporary_segment_counts = [0] * max_segment_label
        for i in range(height):
            segment_counts[segment_labels[i]] += int(image[i][j])
            temporary_segment_counts[segment_labels[i]] += int(image[i][j])
            if segment_counts[segment_labels[i]] > threshold:
                count += 1
                segment_counts = temporary_segment_counts

    minimum_segments = min(minimum_segments, count)

print(minimum_segments)
```",minor,Meta-Llama-2-7b-chat,0.8613
195,python_196,Python,"mod=10**9+7
import math
import sys
from collections import deque
import heapq
import copy
import itertools
from itertools import permutations
from itertools import combinations
import bisect
def mi() : return map(int,sys.stdin.readline().split())
def ii() : return int(sys.stdin.readline().rstrip())
def i() : return sys.stdin.readline().rstrip()
a=ii()
l=[list(mi()) for _ in range(3)]
ans=0
for i in range(a-1):
  ans+=l[1][l[0][i]-1]
  if l[0][i]+1==l[0][i+1]:
    ans+=l[2][l[0][i]-1]
print(ans+l[1][l[0][a-1]-1])","```
mod = 10**9 + 7
a = int(input())
l = [list(map(int, input().split())) for _ in range(3)]
ans = 0
for i in range(a-1):
    ans += l[1][l[0][i]-1]
    if l[0][i]+1 == l[0][i+1]:
        ans += l[2][l[0][i]-1]
print(ans + l[1][l[0][a-1]-1])
```",minor,Meta-Llama-2-7b-chat,0.8285
196,python_197,Python,"n, m = map(int, input() .split())

if n >= m//2:
	ans = m//2
else:
	ans = n + (m - 2 * n) // 4

print(ans)","```
n, m = map(int, input().split())

ans = m // 2 if n >= m // 2 else n + (m - 2 * n) // 4

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8467
197,python_198,Python,"import sys
sys.setrecursionlimit(10**9)

N,K = map(int,input().split())
edge = [[] for i in range(N)]
for i in range(N-1) :
    u,v = map(lambda x: int(x)-1, input().split())
    edge[u].append(v)
    edge[v].append(u)

deg = [len(E) for E in edge]

MOD = 10**9 + 7
u = 10**5 + 1

fact = [1] * (u+1)
for i in range(1, len(fact)) :
    fact[i] = (fact[i-1] * i) % MOD

fact_inv = [1] * (u+1)
fact_inv[u] = pow(fact[u], MOD-2, MOD)
for i in range(u-1,0,-1) :
    fact_inv[i] = (fact_inv[i+1] * (i+1)) % MOD

def perm(n, r) :
    if r < 0 or n < r :
        return 0
    return (fact[n] * fact_inv[n-r]) % MOD

def F(node, parent=None) :
    if parent is None :
        res = perm(K, deg[node] + 1)
    else :
        res = perm(K-2, deg[node] - 1)
    
    for next_node in edge[node] :
        if next_node == parent :
            continue
        
        res *= F(next_node, parent=node)
        res %= MOD
    return res

ans = F(0, parent=None)

print(ans)
","```
import sys
sys.setrecursionlimit(10**9)

N, K = map(int, input().split())
edge = [[] for _ in range(N)]
for _ in range(N - 1):
    u, v = map(lambda x: int(x) - 1, input().split())
    edge[u].append(v)
    edge[v].append(u)

deg = [len(edge[i]) for i in range(N)]

MOD = 10**9 + 7
u = 10**5 + 1

fact = [1] * (u + 1)
for i in range(1, len(fact)):
    fact[i] = (fact[i - 1] * i) % MOD

fact_inv = [1] * (u + 1)
fact_inv[u] = pow(fact[u], MOD - 2, MOD)
for i in range(u - 1, 0, -1):
    fact_inv[i] = (fact_inv[i + 1] * (i + 1)) % MOD

def perm(n, r):
    if r < 0 or n < r:
        return 0
    return (fact[n] * fact_inv[n - r]) % MOD

def f(node, parent=None):
    if parent is None:
        res = perm(K, deg[node] + 1)
    else:
        res = perm(K - 2, deg[node] - 1)
    
    for next_node in edge[node]:
        if next_node == parent:
            continue
        
        res *= f(next_node, parent=node)
        res %= MOD
    return res

ans = f(0, None)

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.9299
198,python_199,Python,"# O(M + 4^N) 解
# 参考: https://twitter.com/ei1333/status/1177951676818325504

import sys
input = sys.stdin.readline
N, M = map(int, input().split())
dp = [float(""inf"")] * (1<<N)
for _ in range(M):
    a, _ = map(int, input().split())
    C = list(map(int, input().split()))
    s = 0
    for c in C:
        s |= 1 << c-1
    dp[s] = min(dp[s], a)
for i in range(1<<N):
    for j in range(1<<N):
        dp[i|j] = min(dp[i|j], dp[i]+dp[j])
ans = dp[-1]
print(ans if ans!=float(""inf"") else -1)
","```
import sys
input = sys.stdin.readline
N, M = map(int, input().split())
dp = [float('inf')] * (1 << N)
for _ in range(M):
    a, _ = map(int, input().split())
    C = list(map(int, input().split()))
    s = 0
    for c in C:
        s |= 1 << c - 1
    dp[s] = min(dp[s], a)
for i in range(1 << N):
    for j in range(i):
        dp[i | j] = min(dp[i | j], dp[i] + dp[j])
ans = dp[-1]
print(ans if ans!= float('inf') else -1)
```",minor,Meta-Llama-2-7b-chat,0.8704
199,python_200,Python,"N = int(input())
A = list(map(int, input().split()))
seki = 1
if A.count(0) == 0:
    for i in range(N):
        seki = seki*A[i]
        if seki > 10**18:
            seki = -1
            break
else:
    seki = 0
print(seki)","```
n = int(input())
a = list(map(int, input().split()))
seki = 1
zero_count = 0
for num in a:
    if num == 0:
        zero_count += 1
    else:
        seki *= num
        if seki > 10**18:
            seki = -1
            break
if zero_count > 0:
    seki = 0
print(seki)
```",minor,Meta-Llama-2-7b-chat,0.8574
200,python_201,Python,"a, b = map(int, input().split())
a = a + 13 if a == 1 else a
b = b + 13 if b == 1 else b
print('Alice' if a > b else 'Bob' if a < b else 'Draw')","```
a, b = map(int, input().split())
a = a + 13 if a == 1 else a
b = b + 13 if b == 1 else b
winner = 'Alice' if a > b else 'Bob' if a < b else 'Draw'
print(winner)
```",minor,Meta-Llama-2-7b-chat,0.8373
201,python_202,Python,"n = int(input())
s = input()

check_list = [ [ 0 for i in range(n) ] for i in range(n) ]


ans = 0
for i in range(n-1):
    for j in range(i+1,n):
        if check_list[i][j] == 0:
            p = 0
            for k in range(min(j-i,n-1-j+1)):
                if s[i+k] == s[j+k]:
                    p += 1
                else:
                    break
            for k in range(1,p):
                check_list[i+k][j+k] = p - k
        ans = max(ans,p)

print(ans)
","```
n = int(input())
s = input()

check_list = [[0]*n for _ in range(n)]


ans = 0
for i in range(n-1):
    for j in range(i+1, n):
        if check_list[i][j] == 0:
            p = 0
            for k in range(min(j-i, n-1-j+1)):
                if s[i+k] == s[j+k]:
                    p += 1
                else:
                    break
            for k in range(1, p):
                check_list[i+k][j+k] = p - k
        ans = max(ans, p)

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8928
202,python_203,Python,"import sys

N, M = list(map(int, input().split()))
if M == 0:
  h = []
else:
  h = sys.stdin.readlines()
  h = set(map(int, list(set(h))))

if N==1:
  print(1)
elif N==2:
  if M==1:
    print(1)
  else:
    print(2)
else:
  DP = []
  DP.append(1)
  if 1 in h:
    DP.append(-1)
  else:
    DP.append(1)
  for i in range(2,N+1):
    if DP[i-2]<0 and DP[i-1]<0:
      print(0)
      exit()
    DP.append(0)
    if i in h:
      DP[i] = -1
    else:
      if DP[i-1]>=0:
        DP[i] += DP[i-1]
      if DP[i-2]>=0:
        DP[i] += DP[i-2]
      DP[i] = DP[i] % 1000000007
  print(int(DP[N]))","```
import sys

n, m = map(int, input().split())
if m == 0:
    h = set()
else:
    h = set(int(line.strip()) for line in sys.stdin.readlines())

if n == 1:
    print(1)
elif n == 2:
    if m == 1:
        print(1)
    else:
        print(2)
else:
    dp = [0] * (n + 1)
    dp[1] = 1
    if 1 in h:
        dp[1] = -1
    else:
        dp[1] = 1
    for i in range(2, n + 1):
        if dp[i - 2] < 0 and dp[i - 1] < 0:
            print(0)
            exit()
        dp[i] = 0
        if i in h:
            dp[i] = -1
        else:
            dp[i] += dp[i - 1]
            if i >= 2 and dp[i - 2] >= 0:
                dp[i] += dp[i - 2]
            dp[i] %= 1000000007
    print(dp[n])
```",minor,Meta-Llama-2-7b-chat,0.8715
203,python_204,Python,"D, T, S = map(int, input().split())
if D//S == T and D % S == 0:
  print(""Yes"")
elif D//S<T:
  print(""Yes"")
else:
  print(""No"")
","```
D, S, T = map(int, input().split())
if D % S == 0 and D // S <= T:
  print(""Yes"")
else:
  print(""No"")
```",minor,Meta-Llama-2-7b-chat,0.8496
204,python_205,Python,"k, t = list(map(int, input().split()))
a = list(map(int, input().split()))

largest = max(a)
print(max(largest-(k-largest+1), 0))","```
k, t = map(int, input().split())
a = list(map(int, input().split()))
max_val = max(a)
print(max(0, max_val - (k - max_val + 1)))
```",minor,Meta-Llama-2-7b-chat,0.7112
205,python_206,Python,"import heapq

N,M = map(int,(input().split()))
A = [0]*N
B = [0]*N
mission = [[] for _ in range(M+1)]
work = 0

for i in range(N):
    if i <= M:
        heapq.heapify(mission[i])
    A[i],B[i] = map(int,(input().split()))
    if A[i] <= M:
        mission[A[i]].append(-B[i])

for day in range(1,M+1):
    for i in range(len(mission[day])):
        heapq.heappush(mission[0],mission[day][i])
    if mission[0]:
        work += heapq.heappop(mission[0])

print(-work)","```
import heapq

n, m = map(int, input().split())
a = [0] * n
b = [0] * n
mission = [[] for _ in range(m + 1)]
work = 0

for i in range(n):
    if i <= m:
        heapq.heapify(mission[i])
    a[i], b[i] = map(int, input().split())
    if a[i] <= m:
        heapq.heappush(mission[a[i]], -b[i])

for day in range(1, m + 1):
    while mission[day]:
        heapq.heappush(mission[0], heapq.heappop(mission[day]))
    if mission[0]:
        work -= heapq.heappop(mission[0])

print(-work)
```",minor,Meta-Llama-2-7b-chat,0.9189
206,python_207,Python,"from collections import Counter
H, W, M = map(int, input().split())
YX = [tuple(map(int, input().split())) for i in range(M)]
yx_set = set(YX)

xc = Counter()
yc = Counter()

for y, x in YX:
    yc[y] += 1
    xc[x] += 1

ans = 0
for y, x in YX:
    ans = max(ans, yc[y] + xc[x] - 1)

xmc = xc.most_common()
ymc = yc.most_common()
xmx = xmc[0][1]
ymx = ymc[0][1]
for xk, xv in xmc:
    if xv < xmx:
        break
    for yk, yv in ymc:
        if yv < ymx:
            break
        if (yk, xk) in yx_set:
            continue
        ans = max(ans, yv + xv)
        break
print(ans)
","```
from collections import Counter

H, W, M = map(int, input().split())
coordinates = [tuple(map(int, input().split())) for _ in range(M)]
unique_coordinates = set(coordinates)

x_counts = Counter()
y_counts = Counter()

for y, x in coordinates:
    y_counts[y] += 1
    x_counts[x] += 1

max_value = 0
for y, x in coordinates:
    max_value = max(max_value, y_counts[y] + x_counts[x] - 1)

x_most_common = x_counts.most_common()
y_most_common = y_counts.most_common()
max_x, _ = x_most_common[0]
max_y, _ = y_most_common[0]

for x, count in x_most_common:
    if count < max_x:
        break
    for y, count in y_most_common:
        if count < max_y:
            break
        if (y, x) in unique_coordinates:
            continue
        max_value = max(max_value, count + max_x)
        break

print(max_value)",minor,Meta-Llama-2-7b-chat,0.9242
207,python_208,Python,"from pprint import pprint
from collections import deque

import sys

n, q = map(int, sys.stdin.readline().strip().split("" ""))
edges = [[] for _ in range(n)]
for _ in range(n-1):
    a_i, b_i = map(int, sys.stdin.readline().strip().split("" ""))
    edges[a_i-1].append(b_i-1)
    edges[b_i-1].append(a_i-1)

counter = [0] * n
p = [0] * n
for _ in range(q):
    p_i, x_i = map(int, sys.stdin.readline().strip().split("" ""))
    counter[p_i-1] += x_i


parents = deque()
parents.append(0)
visited = set()
while parents:
    parent = parents.popleft()
    if parent in visited:
        continue
    visited.add(parent)
    for child in edges[parent]:
        if child in visited:
            continue
        counter[child] += counter[parent]
        parents.append(child)

print("" "".join(list(map(str, counter))))","```
from collections import deque

n, q = map(int, input().split())
edges = [[] for _ in range(n)]
for _ in range(n-1):
    a, b = map(int, input().split())
    edges[a-1].append(b-1)
    edges[b-1].append(a-1)

counter = [0] * n
for _ in range(q):
    p, x = map(int, input().split())
    counter[p-1] += x

parents = deque([0])
visited = set()
while parents:
    parent = parents.popleft()
    if parent in visited:
        continue
    visited.add(parent)
    for child in edges[parent]:
        if child in visited:
            continue
        counter[child] += counter[parent]
        parents.append(child)

print("" "".join(map(str, counter)))
```",minor,Meta-Llama-2-7b-chat,0.9045
208,python_209,Python,"from fractions import gcd
N=int(input())
A=list(map(int,input().split(' ')))
ans = 0
l_1 = 1
l_2 = 1
mod = 10**9+7
def lcm(x,y):
    return x*y//gcd(x,y)
for i in A[:N//2]:
    l_1 = lcm(l_1,i)
for j in A[N//2:]:
    l_2 = lcm(l_2,j)
l = lcm(l_1,l_2)
out1 = sum([l_1//i for i in A[:N//2]])
out2 = sum([l_2//i for i in A[N//2:]])
out1 *= l//l_1
out2 *= l//l_2
print((out1+out2)%mod)","```
from fractions import gcd
N = int(input())
A = list(map(int, input().split()))
mod = 10**9 + 7

def lcm(x, y):
    return x * y // gcd(x, y)

l1 = 1
l2 = 1
for num in A[:N//2]:
    l1 = lcm(l1, num)
for num in A[N//2:]:
    l2 = lcm(l2, num)
l = lcm(l1, l2)

out1 = sum(l1 // num for num in A[:N//2])
out2 = sum(l2 // num for num in A[N//2:])
out1 *= l // l1
out2 *= l // l2
print((out1 + out2) % mod)
```",minor,Meta-Llama-2-7b-chat,0.908
209,python_210,Python,"N, A, B = map(int, input().split())
hs = [int(input()) for i in range(N)]

INF = int(1e9)
l, m, r = 0, INF//2, INF + 1

def calc(n):
    global N, A, B
    d = A - B
    remain = n
    for h in hs:
        tmp = h - B * n
        if tmp > 0:
            remain -= (tmp + d - 1) // d
    return remain >= 0

while r - l > 1:
    if calc(m):
        r = m
    else:
        l = m
    m = (r + l + 1) // 2

print(m)","```
N, A, B = map(int, input().split())
hs = [int(input()) for _ in range(N)]

INF = 10**9
left, right = 0, INF

def check(mid):
    d = A - B
    remaining = N
    for height in hs:
        tmp = height - B * mid
        if tmp > 0:
            remaining -= (tmp + d - 1) // d
    return remaining >= 0

while right - left > 1:
    if check(left + (right - left) // 2):
        right = left + (right - left) // 2
    else:
        left = left + (right - left) // 2 + 1

print(left)
```",minor,Meta-Llama-2-7b-chat,0.8725
210,python_211,Python,"a,b,c,d=map(int,input().split())
print(b+c-d,-a+c+d,a+b-d,-a+b+c)","```
x, y, z, w = map(int, input().split())
print(y + z - w, -(x + z + w), y - z + w, -(x + y - w))
```",minor,Meta-Llama-2-7b-chat,0.736
211,python_212,Python,"N = input()
if N[0] == N[2]:
  print('Yes')
else:
  print('No')","```
n = input()
if n[0] == n[2]:
    print('Yes')
else:
    print('No')
```",minor,Meta-Llama-2-7b-chat,0.8533
212,python_213,Python,"N,A,B = map(int,input().split())
X = list(map(int,input().split()))

ans = 0
for i in range(1,N):
    if (X[i]-X[i-1])*A > B:
        ans += B
    else:
        ans += (X[i]-X[i-1])*A
print(ans)","```
N, A, B = map(int, input().split())
X = list(map(int, input().split()))

answer = 0
for i in range(1, N):
    diff = X[i] - X[i-1]
    if diff * A > B:
        answer += B
    else:
        answer += diff * A
print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8425
213,python_214,Python,"s = input()
n = len(s)
k = int(input())
dp = [[[0 for _ in range(2)] for _ in range(k + 1)] for _ in range(n + 1)]
dp[0][0][0] = 1

for a in range(n):
  for b in range(k + 1):
    for c in range(2):
      nd = int(s[a])
      for d in range(10):
        na, nb, nc = a + 1, b, c
        if d != 0:
          nb += 1
        if nb > k:
          break
        if nc == 0:
          if d < nd:
            nc = 1
          if d > nd:
            break
        dp[na][nb][nc] += dp[a][b][c]
print(sum(dp[-1][-1]))","```
s = input()
n = len(s)
k = int(input())
dp = [[[0 for _ in range(2)] for _ in range(k + 1)] for _ in range(n + 1)]
dp[0][0][0] = 1

for a in range(n):
  for b in range(k + 1):
    for c in range(2):
      nd = int(s[a])
      for d in range(10):
        if d == 0:
          na, nb, nc = a + 1, b, c
        else:
          na, nb, nc = a + 1, min(b + 1, k), 1 if d < nd else 0
        dp[na][nb][nc] += dp[a][b][c]

print(sum(dp[-1][-1]))
```",minor,Meta-Llama-2-7b-chat,0.8919
214,python_215,Python,"n,u,v=map(int,input().split())
anss=0
u-=1
v-=1
d=[[]for _ in range(n)]
inf=float('inf')
aoki=[inf]*n
for i in range(n-1):
  a,b=map(int,input().split())
  a-=1
  b-=1
  d[a].append(b)
  d[b].append(a)
Q=d[v]
aoki[v]=0
dis=1
visited={v}
while Q:
  P=[]
  for i in Q:
    visited.add(i)
    for j in d[i]:
      if j not in visited:P.append(j)
    aoki[i]=dis
  dis+=1
  Q=P
Q=d[u]
chokudai=[-1]*n
chokudai[u]=0
dis=1
visited={u}
point=-1
while Q:
  P=[]
  for i in Q:
    visited.add(i)
    for j in d[i]:
      if aoki[j]<=dis+1:
        if aoki[j]==dis+1:anss=1
        if point<0:point=i
        continue
      if j not in visited:P.append(j)
    chokudai[i]=dis
  dis+=1
  Q=P
Q=d[point]
dis=chokudai[point]+1
visited={point}
while Q:
  P=[]
  for i in Q:
    visited.add(i)
    if chokudai[i]==-1:continue
    chokudai[i]=max(dis,chokudai[i])
    for j in d[i]:
      if j not in visited:P.append(j)
  dis+=1
  Q=P
ans=0
for i in range(n):
  if aoki[i]>chokudai[i]:ans=max(ans,chokudai[i])
print(ans+anss)
#print(aoki)
#print(chokudai)","```
n, u, v = map(int, input().split())
ans = 0
u, v = u - 1, v - 1
graph = [[] for _ in range(n)]
inf = float('inf')
distance = [inf] * n
for i in range(n - 1):
    a, b = map(int, input().split())
    a, b = a - 1, b - 1
    graph[a].append(b)
    graph[b].append(a)
queue = graph[v]
distance[v] = 0
visited = {v}
while queue:
    new_queue = []
    for node in queue:
        visited.add(node)
        for neighbor in graph[node]:
            if neighbor not in visited:
                new_queue.append(neighbor)
        distance[node] = len(visited)
    queue = new_queue
queue = graph[u]
parent_distance = [-1] * n
parent_distance[u] = 0
point = -1
while queue:
    new_queue = []
    for node in queue:
        visited.add(node)
        for neighbor in graph[node]:
            if distance[neighbor] <= parent_distance[node] + 1:
                if distance[neighbor] == parent_distance[node] + 1:
                    ans = 1
                if point < 0:
                    point = node
                continue
            if neighbor not in visited:
                new_queue.append(neighbor)
        parent_distance[node] = len(visited)
    queue = new_queue
queue = graph[point]
distance[point] += 1
visited = {point}
while queue:
    new_queue = []
    for node in queue:
        visited.add(node)
        if parent_distance[node] == -1:
            continue
        parent_distance[node] = max(distance[point], parent_distance[node])
        for neighbor in graph[node]:
            if neighbor not in visited:
                new_queue.append(neighbor)
    distance[point] += 1
    queue = new_queue
ans = 0
for i in range(n):
    if distance[i] > parent_distance[i]:
        ans = max(ans, parent_distance[i])
print(ans + ans)",minor,Meta-Llama-2-7b-chat,0.898
215,python_216,Python,"import sys

N, Y = map(int,input().split())

for x in range(N+1):
    if x*10000 > Y:
        break
    for y in range(N+1-x):
        z = N - (x + y)
        if (x*10000 + y*5000 + z*1000) == Y:
            print(x,y,z)
            sys.exit()

print(-1,-1,-1)
","```
import sys

N, Y = map(int, input().split())

for x in range(N + 1):
    for y in range(N + 1 - x):
        z = N - (x + y)
        if x * 10000 + y * 5000 + z * 1000 == Y:
            print(x, y, z)
            sys.exit()

print(-1, -1, -1)
```",minor,Meta-Llama-2-7b-chat,0.8531
216,python_217,Python,"import sys
read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines

MOD = 10**9+7

fac = [1, 1]
f_inv = [1, 1]
inv = [0, 1]

def prepare(n, mod):
    for i in range(2, n+1):
        fac.append((fac[-1] * i) % mod)
        inv.append((-inv[mod % i] * (mod//i)) % mod)
        f_inv.append((f_inv[-1] * inv[-1]) % mod)


def modcmb(n, r, mod):
    if n < 0 or r < 0 or r > n:
        return 0

    return fac[n] * f_inv[r] * f_inv[n-r] % mod


def main():
    N,K = map(int, readline().split())

    prepare(N, MOD)

    ans = 0
    for i in range(min(N-1, K)+1):
        ans += modcmb(N, i, MOD) * modcmb(N-1, i, MOD)
        ans %= MOD

    print(ans)


if __name__ == ""__main__"":
    main()
","```
import sys

MOD = 10**9+7

fac, f_inv, inv = [1, 1], [1, 1], [0, 1]

def prepare(n, mod):
    for i in range(2, n+1):
        fac.append((fac[-1] * i) % mod)
        inv.append((-inv[mod % i] * (mod//i)) % mod)
        f_inv.append((f_inv[-1] * inv[-1]) % mod)

def modcmb(n, r, mod):
    if n < 0 or r < 0 or r > n:
        return 0
    return fac[n] * pow(f_inv[r], mod-2, mod) * pow(f_inv[n-r], mod-2, mod) % mod

def main():
    N, K = map(int, input().split())

    prepare(N, MOD)

    ans = 0
    for i in range(min(N-1, K)+1):
        ans += modcmb(N, i, MOD) * modcmb(N-1, i, MOD)
        ans %= MOD

    print(ans)

if __name__ == ""__main__"":
    main()
```",minor,Meta-Llama-2-7b-chat,0.8146
217,python_218,Python,"arr = [5,5,7]
a = list(map(int,input().split()))
a.sort()

for i in range(3):
    if a[i] != arr[i]:
        print(""NO"")
        exit()
print(""YES"")
","```
arr = [5, 5, 7]
nums = list(map(int, input().split()))
nums.sort()

if nums!= arr:
    print(""NO"")
else:
    print(""YES"")
```",minor,Meta-Llama-2-7b-chat,0.8311
218,python_219,Python,"mod = 1000000007


s = raw_input()
n_a = n_ab = n_abc = 0
p = 1

for c in s:
    if c == ""A"":
        n_a = (n_a + p) % mod
    elif c == ""B"":
        n_ab = (n_ab + n_a) % mod
    elif c == ""C"":
        n_abc = (n_abc + n_ab) % mod
    elif c == ""?"":
        n_abc = (n_abc * 3 + n_ab) % mod
        n_ab = (n_ab * 3 + n_a) % mod
        n_a = (n_a * 3 + p) % mod
        p = (p * 3) % mod

    # print n_a, n_ab, n_abc

print n_abc % mod
","```
mod = 1000000007

s = input()
a, ab, abc = 0, 0, 0
p = 1

for c in s:
    if c == ""A"":
        a = (a + p) % mod
    elif c == ""B"":
        ab = (ab + a) % mod
    elif c == ""C"":
        abc = (abc + ab) % mod
    elif c == ""?"":
        abc = (abc * 3 + ab) % mod
        ab = (ab * 3 + a) % mod
        a = (a * 3 + p) % mod
        p = (p * 3) % mod

print(abc % mod)
```",minor,Meta-Llama-2-7b-chat,0.8531
219,python_220,Python,"A, B, C = map(int, input().split())
print(min(C, A + B + 1) + B)
","```
a, b, c = map(int, input().split())
print(min(c, a + b + 1) + b)
```",minor,Meta-Llama-2-7b-chat,0.7757
220,python_221,Python,"# code-festival-2017-qualcC - Inserting 'x'
def main():
    S = input().rstrip()
    ans, l, r = 0, 0, len(S) - 1
    while l < r:
        if S[l] == S[r]:
            l += 1
            r -= 1
        else:
            ans += 1
            if S[l] == ""x"":
                l += 1
            elif S[r] == ""x"":
                r -= 1
            else:
                print(-1)
                return
    print(ans)


if __name__ == ""__main__"":
    main()","```
def main():
    s = input().rstrip()
    ans, l, r = 0, 0, len(s) - 1
    while l < r:
        if s[l] == s[r]:
            l += 1
            r -= 1
        else:
            ans += 1
            if s[l] == 'x':
                l += 1
            elif s[r] == 'x':
                r -= 1
            else:
                print(-1)
                return
    print(ans)


if __name__ == ""__main__"":
    main()
```",minor,Meta-Llama-2-7b-chat,0.8788
221,python_222,Python,"n,m = map(int,input().split())
H = [int(i) for i in input().split()]
H_max = [True for i in range(n)]
for i in range(m):
    a,b = map(int,input().split())
    if H[a-1]>H[b-1]:
        H_max[b-1] = False
    elif H[a-1]<H[b-1]:
        H_max[a-1] = False
    else:
        H_max[a-1] = False
        H_max[b-1] = False
ans = 0
for i in range(n):
    if H_max[i] == True:
        ans += 1
print(ans)","```
n, m = map(int, input().split())
H = list(map(int, input().split()))
H_max = [True] * n
for i in range(m):
    a, b = map(int, input().split())
    H_max[max(a-1, b-1)] = False
ans = sum(H_max)
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.7922
222,python_223,Python,"D,G = map(int,input().split())
p,c = [],[]
for i in range(D):
  tmp0 ,tmp1 = map(int,input().split())
  p.append(tmp0)
  c.append(tmp1)
  
min_ans = float('inf')

for bit in range(1<<D):
  dont_solved = [i for i in range(D)]
  ans = 0
  sum_point = 0
  for i in range(D):
    if bit & 1<<i:
      ans += p[i]
      sum_point += (i+1)*100*p[i]+c[i]
      dont_solved.remove(i)
  if sum_point < G:
    for i in  dont_solved[::-1]:
      for j in range(p[i]):
        ans += 1
        sum_point += (i+1)*100
        if sum_point >= G:
          break
      else:
        continue
      break
  
  if ans <= min_ans:
    min_ans = ans
print(min_ans)
  


","```
d, g = map(int, input().split())
p, c = [], []
for _ in range(d):
    tmp = list(map(int, input().split()))
    p.append(tmp[0])
    c.append(tmp[1])

min_ans = float('inf')

for bit in range(1 << d):
    dont_solved = set(range(d))
    ans = 0
    sum_point = 0
    for i in range(d):
        if bit & (1 << i):
            ans += p[i]
            sum_point += (i + 1) * 100 * p[i] + c[i]
            dont_solved.discard(i)
    if sum_point < g:
        for i in sorted(dont_solved, reverse=True):
            for _ in range(p[i]):
                ans += 1
                sum_point += (i + 1) * 100
                if sum_point >= g:
                    break
            else:
                continue
            break
    if ans < min_ans:
        min_ans = ans

print(min_ans)
```",minor,Meta-Llama-2-7b-chat,0.8654
223,python_224,Python,"N = input()
n = [0]*(len(N) + 1)
ans = 0
for i in range(len(N)):
    n[i] = int(N[len(N) - 1 - i])
for i in range(len(n)):
    if n[i] < 5:
        ans += n[i]
    elif n[i] == 5:
        if n[i+1] >= 5:
            ans += 10 - n[i]
            n[i+1] += 1
        else:
            ans += 5
    else:
        ans += 10 - n[i]
        n[i+1] += 1
print(ans)","```
n = [int(d) for d in reversed(input())]
ans = 0
for i, digit in enumerate(n):
    if digit < 5:
        ans += digit
    elif digit == 5:
        if i < len(n) - 1 and n[i + 1] >= 5:
            ans += 5
            n[i + 1] += 1
        else:
            ans += 5
    else:
        ans += 5
        n[i + 1] += 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.806
224,python_225,Python,"from numba import njit, i8, void
import numpy as np


mod = 10**9+7
k = int(input())
n = len(input())


@njit(i8(i8), cache=True)
def pow(n):
    l, now, mod, k = np.ones(64, np.int64), 1, 10**9+7, 10**9+5
    l[0] = n
    for i in range(1, 64):
        l[i] = l[i-1]*l[i-1] % mod
    for i in range(64):
        if k & 1:
            now = now*l[i] % mod
        k >>= 1
    return now


@njit(void(i8, i8), cache=True)
def num_calc(n, k):
    fact, mod = np.ones(n+k+1, dtype=np.int64), 10**9+7
    for i in range(2, n+k+1):
        fact[i] = fact[i-1]*i % mod

    power = np.ones(k+1, dtype=np.int64)
    power[0] = fact[n+k]
    for i in range(1, k+1):
        power[i] = power[i-1]*25 % mod

    fact = fact[n+k:n-1:-1]*fact[:k+1] % mod
    ans = 0
    for i in range(k+1):
        ans = (ans+pow(fact[i])*power[i]) % mod
    print(ans)


num_calc(n, k)
","```
from numba import njit, i8, void
import numpy as np


mod = 10**9+7
k = int(input())
n = len(str(input()))


@njit(i8(i8), cache=True)
def pow(n):
    l, now, mod = np.ones(64, np.int64), 1, 10**9+7
    l[0] = n
    for i in range(1, 64):
        l[i] = l[i-1]*l[i-1] % mod
    for i in range(64):
        if n & 1:
            now = now*l[i] % mod
        n >>= 1
    return now


@njit(void(i8, i8), cache=True)
def num_calc(n, k):
    fact, mod = np.ones(n+k+1, dtype=np.int64), 10**9+7
    for i in range(2, n+k+1):
        fact[i] = fact[i-1]*i % mod

    power = np.ones(k+1, dtype=np.int64)
    power[0] = fact[n+k]
    for i in range(1, k+1):
        power[i] = power[i-1]*25 % mod

    fact = np.fliplr(fact[:n+k+1])[k:]*fact[:k+1] % mod
    ans = 0
    for i in range(k+1):
        ans = (ans+pow(fact[i])*power[i]) % mod
    print(ans)


num_calc(n, k)
```",minor,Meta-Llama-2-7b-chat,0.8856
225,python_226,Python,"N=int(input())
V=list(map(int,input().split()))
V.sort()

while len(V) > 1:
    v1=V.pop(0)
    v2=V.pop(0)
    
    v_mean = (v1+v2)/2
    
    V.append(v_mean)
    V.sort()
print(V[0])","```
n = int(input())
v = list(map(int, input().split()))
v.sort()

while len(v) > 1:
    v1, v2 = v.pop(0), v.pop(0)
    v_mean = (v1 + v2) / 2
    v.append(v_mean)
    v.sort()

print(v[0])
```",minor,Meta-Llama-2-7b-chat,0.7958
226,python_227,Python,"n=int(input())
lr=[list(map(int,input().split())) for i in range(n)]
ans=0
for i in lr:
  ans += i[1]-i[0]+1
print(ans)","```
n = int(input())
lr = [[int(x) for x in input().split()] for _ in range(n)]
ans = 0
for i in lr:
    ans += i[1] - i[0] + 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8638
227,python_228,Python,"a, b, c, d = map(int, input().split())
print(max(a*c, a*d, b*c, b*d))","```
a, b, c, d = map(int, input().split())
print(max(a*c, a*d, b*c, b*d))
```",minor,Meta-Llama-2-7b-chat,0.8026
228,python_229,Python,"n = list(input())
if ""a"" in n and ""b"" in n and ""c"" in n:
  print(""Yes"")
else:
  print(""No"")
","```
n = list(input())
if set(""abc"").issubset(set(n)):
    print(""Yes"")
else:
    print(""No"")
```",minor,Meta-Llama-2-7b-chat,0.7953
229,python_230,Python,"A = int(input())
B = int(input())

X = [1, 2, 3]

X.remove(A)
X.remove(B)

print(X[0])
","```
a, b = map(int, input().split())
x = [1, 2, 3]
x = [i for i in x if i not in (a, b)]
print(x[0])
```",minor,Meta-Llama-2-7b-chat,0.8074
230,python_231,Python,"N =int(input())
a = [0] * N
b = [0] * N
for i in range(N):
    A, B = map(int, input().split())
    a[i], b[i] = A, B
    
ans = 0
for i in range(N-1,-1,-1):
  if (a[i]+ans)%b[i]==0:
    push = 0
  else:
    push = b[i] - (a[i]+ans)%b[i]
  ans += push
print(ans)","```
N = int(input())
a, b = [], []
for _ in range(N):
    A, B = map(int, input().split())
    a.append(A)
    b.append(B)
ans = 0
for i in range(N-1, -1, -1):
    if (a[i] + ans) % b[i] == 0:
        push = 0
    else:
        push = b[i] - (a[i] + ans) % b[i]
    ans += push
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8187
231,python_232,Python,"n = int(input())
arr = list(map(int,input().split()))
ans = 0
for i in range(n):
    if i%2==0 and arr[i]%2!=0:
        ans+=1
print(ans)","```
n = int(input())
arr = list(map(int, input().split()))
odd_count = 0
for i in range(n):
    if i % 2 == 0 and arr[i] % 2!= 0:
        odd_count += 1
print(odd_count)
```",minor,Meta-Llama-2-7b-chat,0.8476
232,python_233,Python,"x,y,z = [int(x) for x in input().split()]
print((x-z) // (y+z))
","```
x, y, z = map(int, input().split())
print((x - z) // (y + z))
```",minor,Meta-Llama-2-7b-chat,0.8047
233,python_234,Python,"A = sorted(list(map(int, input().split())))
print(A[0] + A[1])","```
numbers = sorted(map(int, input().split()))
print(sum(numbers[:2]))
```",minor,Meta-Llama-2-7b-chat,0.7865
234,python_235,Python,"N = int(input())
print(N//3)","```
n = int(input())
print(n // 3)
```",minor,Meta-Llama-2-7b-chat,0.8
235,python_236,Python,"N, K = map(int, input().split())
S = [0] * N
for _ in range(K):
  n = int(input())
  for a in [int(x) for x in input().split()]:
    S[a - 1] += 1
print(sum([1 for s in S if s == 0]))","```
n, k = map(int, input().split())
s = [0] * n
for _ in range(k):
    index = int(input())
    values = list(map(int, input().split()))
    for value in values:
        s[value - 1] += 1
print(s.count(0))
```",minor,Meta-Llama-2-7b-chat,0.7856
236,python_237,Python,"import math
n,h = map(int, input().split())
a, b = [], []
for _ in range(n):
    c,d = map(int, input().split())
    a.append(c)
    b.append(d)
mx = max(a)
ups = [x for x in b if mx < x]
if sum(ups) >= h:
    tmp = 0
    cnt = 0
    for up in sorted(ups)[::-1]:
        tmp += up
        cnt += 1
        if tmp >= h:
            print(cnt)
            exit()
h -= sum(ups)
ans = len(ups) + math.ceil(h / mx)
print(ans)","```
import math

n, h = map(int, input().split())
points = [], []
for _ in range(n):
    x, y = map(int, input().split())
    points.append((x, y))

max_x = max(x for x, _ in points)
high_points = [y for x, y in points if x < max_x]
if sum(high_points) >= h:
    total, count = 0, 0
    for high in sorted(high_points, reverse=True):
        total += high
        count += 1
        if total >= h:
            print(count)
            exit()

h -= sum(high_points)
print(len(high_points) + math.ceil(h / max_x))
```",minor,Meta-Llama-2-7b-chat,0.8453
237,python_238,Python,"n = int(input())
dp = [0] * 3
for i in range(n):
    a, b, c = map(int, input().split())
    dp = [a + max(dp[1], dp[2]), b + max(dp[0], dp[2]), c + max(dp[0], dp[1])]
print(max(dp))","```
n = int(input())
dp = [0, 0, 0]
for _ in range(n):
    a, b, c = map(int, input().split())
    dp[0], dp[1], dp[2] = a + max(dp[1], dp[2]), b + max(dp[0], dp[2]), c + max(dp[0], dp[1])
print(max(dp))
```",minor,Meta-Llama-2-7b-chat,0.8109
238,python_239,Python,"# ABC084C - Snuke Festival
from bisect import bisect_left, bisect_right

n = int(input())
lst_a = sorted(list(map(int, input().rstrip().split())))
lst_b = list(map(int, input().rstrip().split()))
lst_c = sorted(list(map(int, input().rstrip().split())))
lgth = len(lst_c)
ans = 0
for i in lst_b:
    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))
print(ans)","```
from bisect import bisect_left, bisect_right

n = int(input())
a = sorted(map(int, input().rstrip().split()))
b = list(map(int, input().rstrip().split()))
c = sorted(map(int, input().rstrip().split()))
length = len(c)
answer = 0
for i in b:
    answer += bisect_left(a, i) * (length - bisect_right(c, i))
print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8124
239,python_240,Python,"n, m = map(int, input().split())
cnt = [0 for _ in range(n)]

for _ in range(m):
    a, b = map(int, input().split())
    a -= 1
    b -= 1
    cnt[a] = (cnt[a] + 1) % 2
    cnt[b] = (cnt[b] + 1) % 2
if 1 in cnt:
    print(""NO"")
else:
    print(""YES"")
","```
n, m = map(int, input().split())
alternates = [0] * n

for _ in range(m):
    a, b = map(int, input().split())
    a -= 1
    b -= 1
    alternates[a] = 1 - alternates[a]
    alternates[b] = 1 - alternates[b]

print(""NO"" if 1 in alternates else ""YES"")
```",minor,Meta-Llama-2-7b-chat,0.814
240,python_241,Python,"N = int(input())
b = list(map(int, input().split()))
ans = []
for i in range(N):
    # それぞれの数字の余裕度を計算し、余裕度0で一番後ろのやつをとる
    d = -1
    for j in range(N-i):
        if (j+1)-b[j] == 0:
            d = j
    if d == -1:
        print(-1)
        exit()
    else:
        ans.append(b[d])
        del b[d]
[print(a) for a in ans[::-1]]","```
N = int(input())
b = list(map(int, input().split()))
ans = []
for i in range(N):
    d = next((j for j in range(N - i) if j + 1 - b[j] == 0), -1)
    if d == -1:
        print(-1)
        exit()
    else:
        ans.append(b.pop(d))
print(*ans[::-1], sep='\n')",minor,Meta-Llama-2-7b-chat,0.9164
241,python_242,Python,"from collections import deque
 
N, M = map(int,input().split())
 
edges = [[] for _ in range(N)]
for _ in range(M):
    u, v = map(int,input().split())
    edges[u-1].append(v-1)
 
S, T = map(int,input().split())
S -= 1
T -= 1
 
visited = {}
q = deque()
q.append((S, 0))
d = -1
while q:
    s, c = q.popleft()
    if s in visited and (c % 3) in visited[s]:
        continue
    if s not in visited:
        visited[s] = set()
    visited[s].add(c % 3)
    for n in edges[s]:
        if n == T and c % 3 == 2:
            d = c + 1
            break
        q.append((n, c+1))
 
    if d % 3 == 0:
        break
 
if d == -1:
    print(-1)
else:
    print(d//3)
","```
from collections import deque
 
N, M = map(int, input().split())
 
edges = [[] for _ in range(N)]
for _ in range(M):
    u, v = map(int, input().split())
    edges[u-1].append(v-1)
 
S, T = map(int, input().split())
S -= 1
T -= 1
 
visited = {}
q = deque()
q.append((S, 0))
while q:
    s, c = q.popleft()
    if (c % 3) in visited.get(s, set()):
        continue
    visited.setdefault(s, set()).add(c % 3)
    if s == T and c % 3 == 2:
        d = c + 1
        break
    for n in edges[s]:
        q.append((n, c+1))
 
if d is None:
    print(-1)
else:
    print(d//3)
```",minor,Meta-Llama-2-7b-chat,0.8819
242,python_243,Python,"N = int(input())

for n in [111, 222, 333, 444, 555, 666, 777, 888, 999]:
    if N <= n:
        print(str(n))
        break


","```
numbers = [111, 222, 333, 444, 555, 666, 777, 888, 999]
N = int(input())

for n in numbers:
    if N <= n:
        print(str(n))
        break
```",minor,Meta-Llama-2-7b-chat,0.8641
243,python_244,Python,"import sys
input = sys.stdin.readline

n, m = map(int, input().split(' '))

WAs = [0] * n
correct = 0
penalty = 0
for i in range(m):
    p, s = input().strip().split(' ')
    p = int(p) - 1
    if WAs[p] == -1:
        continue
    if s == 'AC':
        penalty += WAs[p]
        correct += 1
        WAs[p] = -1
    else:
        WAs[p] += 1

print(correct, penalty)
","```
import sys
input = sys.stdin.readline

n, m = map(int, input().split())
wasted_attempts = [0] * n
correct, penalty = 0, 0
for _ in range(m):
    p, s = input().strip().split()
    p = int(p) - 1
    if wasted_attempts[p] == -1:
        continue
    if s == 'AC':
        penalty += wasted_attempts[p]
        correct += 1
        wasted_attempts[p] = -1
    else:
        wasted_attempts[p] += 1

print(correct, penalty)
```",minor,Meta-Llama-2-7b-chat,0.8285
244,python_245,Python,"import sys;input = lambda : sys.stdin.readline()
import collections
n = int(input())
a = sorted(list(map(int, input().split())))
d = collections.Counter(a)
need = {}
for k,v in d.items():
    if v>1:
        need[k]=v
if (sum(list(need.values()))-len(need))%2==0:
    print(len(set(a)))
else:
    print(len(set(a))-1)
","```
import sys;input = lambda : sys.stdin.readline()
import collections
n = int(input())
a = sorted(map(int, input().split()))
d = collections.Counter(a)
need = {k: v for k, v in d.items() if v > 1}
print(len(set(a)) if sum(need.values()) % 2 == 0 else len(set(a)) - 1)
```",minor,Meta-Llama-2-7b-chat,0.8249
245,python_246,Python,"S = raw_input()
T = raw_input()
d = dict()
d2 = dict()
ret = True
for s, t in zip(S, T):
    if s in d and d[s] != t:
        ret = False
        break
    if t in d2 and d2[t] != s:
        ret = False
        break
    d[s] = t
    d2[t] = s
        
print 'Yes' if ret else 'No'","```
s1, s2 = raw_input(), raw_input()
same_chars = {}
same_chars_reverse = {}
is_anagram = True
for c1, c2 in zip(s1, s2):
    if c1 in same_chars and same_chars[c1]!= c2:
        is_anagram = False
        break
    if c2 in same_chars_reverse and same_chars_reverse[c2]!= c1:
        is_anagram = False
        break
    same_chars[c1] = c2
    same_chars_reverse[c2] = c1

print('Yes' if is_anagram else 'No')
```",minor,Meta-Llama-2-7b-chat,0.7382
246,python_247,Python,"a,b,c=map(int,input().split())
if a+b==c or a+c==b or b+c==a:
    print(""Yes"")
else:
    print(""No"")","```
a, b, c = map(int, input().split())
if a + b == c or a + c == b or b + c == a:
    print(""Yes"")
else:
    print(""No"")
```",minor,Meta-Llama-2-7b-chat,0.8173
247,python_248,Python,"from sys import stdin, stdout
import math
import bisect
import datetime

n = int(stdin.readline().strip())
arr = list(map(int, stdin.readline().strip().split()))
arr.insert(0,0)
d={}
for i in range(len(arr)):
    d[i] = arr[i]
arr = sorted(d.items(), key=lambda a: a[1])

dp = [[0 for i in range(2005)] for j in range(2005)]

for i in range(1, n + 1):
    dp[i][i]=arr[1][1]*abs(arr[1][0]-i)

for l in range(2, n + 1):
    pos, val = arr[l]
    for left in range(1, n - l + 2):
        right = left + l - 1
        dp[left][right] = max(dp[left + 1][right] + val * abs(pos - left), dp[left][right - 1] + val * abs(pos - right))

stdout.writelines(str(dp[1][n]) + '\n')","```
from sys import stdin, stdout
import math

n = int(stdin.readline().strip())
arr = list(map(int, stdin.readline().strip().split()))
arr.insert(0, 0)
d = {i: val for i, val in enumerate(arr)}

arr = sorted(d.items(), key=lambda x: x[1])

dp = [[0] * 2005 for _ in range(2005)]

for i in range(1, n + 1):
    dp[i][i] = arr[1][1] * abs(arr[1][0] - i)

for length in range(2, n + 1):
    pos, val = arr[length]
    for left in range(1, n - length + 2):
        right = left + length - 1
        dp[left][right] = max(dp[left + 1][right] + val * abs(pos - left), dp[left][right - 1] + val * abs(pos - right))

stdout.write(str(dp[1][n]) + '\n')",minor,Meta-Llama-2-7b-chat,0.9833
248,python_249,Python,"N = int(input())
ratio = [tuple(map(int, input().split())) for _ in range(N)]
t,a = 1,1

for nt,na in ratio:
    if nt<t or na<a:
        r = max((t-1)//nt+1, (a-1)//na+1)
        nt *= r
        na *= r
    t,a = nt,na
    #print(t, a)
print(t+a)
","```
N = int(input())
ratio = [tuple(map(int, input().split())) for _ in range(N)]
t, a = 1, 1

for nt, na in ratio:
    if nt < t or na < a:
        r = max((t - 1) // nt + 1, (a - 1) // na + 1)
        t, a = t * r, a * r
print(t + a)
```",minor,Meta-Llama-2-7b-chat,0.8473
249,python_250,Python,"n = int(input())
a = list(map(int,input().split()))
m0 = 0
m1 = 0
m2 = 0

if n%2 == 0:
    for i,ai in enumerate(a):
        if i%2 == 0:
            m0 += ai
        else:
            m1 = max(m0,m1+ai)
    print(max(m0,m1))
else:
    for i,ai in enumerate(a):
        if i%2 == 0:
            if i > 0:
                m2 = max(m2+ai,m1,m0)
            if i < n-1:
                m0 += ai
        else:
            m1 = max(m0,m1+ai)
    print(max(m0,m1,m2))
","```
n = int(input())
a = list(map(int, input().split()))
m0, m1, m2 = 0, 0, 0

if n % 2 == 0:
    for i, ai in enumerate(a):
        if i % 2 == 0:
            m0 += ai
        else:
            m1 = max(m0, m1 + ai)
    print(max(m0, m1))
else:
    for i, ai in enumerate(a):
        if i % 2 == 0:
            if i > 0:
                m2 = max(m2 + ai, m1, m0)
            if i < n - 1:
                m0 += ai
        else:
            m1 = max(m0, m1 + ai)
    print(max(m0, m1, m2))
```",minor,Meta-Llama-2-7b-chat,0.8574
250,python_251,Python,"h, w = map(int, input().split())
c = [input() for _ in range(h)]

for i in range(h):
    print(c[i])
    print(c[i])","```
height, width = map(int, input().split())
canvas = [input() for _ in range(height)]

for row in canvas:
    print(row)
    print(row)
```",minor,Meta-Llama-2-7b-chat,0.7632
251,python_252,Python,"N, P = map(int, raw_input().split())
A = map(int, raw_input().split())

if all(a%2==0 for a in A):
  if P==0:
    print 2**N
  else:
    print 0
else:
  print 2**N/2
","```
n, p = map(int, input().split())
a = list(map(int, input().split()))

if all(a_i % 2 == 0 for a_i in a):
    print(2 ** n) if p == 0 else print(0)
else:
    print(2 ** n / 2)
```",minor,Meta-Llama-2-7b-chat,0.772
252,python_253,Python,"a=raw_input()
b=raw_input()
l=''
for i in range(len(a)):
    l+=a[i]
    if i<len(b):
        l+=b[i]
print l","```
a = input()
b = input()
result = ''
for i in range(min(len(a), len(b))):
    result += a[i]
    result += b[i]
print(result)
```",minor,Meta-Llama-2-7b-chat,0.8107
253,python_254,Python,"N = int(raw_input())
a = [int(i[-2:])for i in raw_input().split("" "")]

c1 = 0
c2 = 0

for ai in a:
    if ai % 2 != 0:
        c1 += 1
    elif ai % 4 == 0:
        c2 += 1
if c1 <= c2:
    print ""Yes""
elif c1 - 1 == c2 and N == c1 + c2:
    print ""Yes""
else:
    print ""No""
","```
n = int(input())
numbers = [int(num[-2:]) for num in input().split()]

odd_count = 0
multiple_of_four_count = 0

for num in numbers:
    if num % 2!= 0:
        odd_count += 1
    elif num % 4 == 0:
        multiple_of_four_count += 1

if odd_count <= multiple_of_four_count or (odd_count - 1 == multiple_of_four_count and n == odd_count + multiple_of_four_count):
    print(""Yes"")
else:
    print(""No"")
```",minor,Meta-Llama-2-7b-chat,0.7145
254,python_255,Python,"from operator import itemgetter
from itertools import chain


N = int(input())
L = []
R = []
for i in range(N):
    S = input()
    low = 0
    var = 0

    for s in S:
        if s == '(':
            var += 1
        else:
            var -= 1
        low = min(low, var)
    
    if var >= 0:
        L.append((low, var))
    else:
        R.append((low, var))

L.sort(key=itemgetter(0), reverse=True)
R.sort(key=lambda x: x[0] - x[1])
pos = 0
for i, (low, var) in enumerate(chain(L, R)):
    if pos + low < 0:
        ans = 'No'
        break
    pos += var
else:
    ans = 'Yes' if pos == 0 else 'No'
print(ans)
","```
from operator import itemgetter
from itertools import chain

n = int(input())
left = []
right = []
for _ in range(n):
    s = input()
    low = 0
    var = 0

    for char in s:
        if char == '(':
            var += 1
        else:
            var -= 1
        low = min(low, var)
    
    if var >= 0:
        left.append((low, var))
    else:
        right.append((low, var))

left.sort(key=itemgetter(0), reverse=True)
right.sort(key=itemgetter(0) - itemgetter(1))
position = 0
for i, (low, var) in enumerate(chain(left, right)):
    if position + low < 0:
        ans = 'No'
        break
    position += var
else:
    ans = 'Yes' if position == 0 else 'No'
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.9395
255,python_256,Python,"N = int(input())
d = list(map(int, input().split()))

d = sorted(d)
print(d[N//2] - d[N//2 - 1])","```
n = int(input())
numbers = list(map(int, input().split()))

numbers.sort()
print(numbers[n//2] - numbers[n//2 - 1])
```",minor,Meta-Llama-2-7b-chat,0.7617
256,python_257,Python,"s = input()
x,y = map(int,input().split())
x1 = 0
y1 = []
muki = 0
t = len(s)
x2 = []
for i in range(len(s)):
  a = s[i]
  if a == ""F"":
    x1 += 1
  else:
    t = i+0
    break
x3 = 0
y2 = 0
for i in range(t,len(s)):
  a = s[i]
  if a == ""F"":
    if muki%2 == 0:
      x3+= 1
    else:
      y2 += 1
  else:
    if muki%2 == 0:
      if x3 != 0:
        x2.append(x3)
      x3 = 0
      muki +=1
    else:
      if y2 != 0:
        y1.append(y2)
      y2 = 0
      muki += 1
if x3 != 0:
   x2.append(x3)
if y2 != 0:
   y1.append(y2)
ansx = set([x1])
for i in x2:
  g = len(ansx)
  ansx2 = list(ansx)
  ansx = set([])
  for j in range(g):
    ansx.add(ansx2[j]+i)
    ansx.add(ansx2[j]-i)
ansy = set([0])
for i in y1:
  g = len(ansy)
  ansy2 = list(ansy)
  ansy = set([])
  for j in range(g):
    ansy.add(ansy2[j]+i)
    ansy.add(ansy2[j]-i)
if (x in ansx and y in ansy):
  print(""Yes"")
else:
  print(""No"")","```
s = input()
x, y = map(int, input().split())
x1 = 0
y1 = []
muki = 0
t = len(s)
x2 = []
for i in range(len(s)):
    a = s[i]
    if a == ""F"":
        x1 += 1
    else:
        break
x3 = 0
y2 = 0
for i in range(t, len(s)):
    a = s[i]
    if a == ""F"":
        if muki % 2 == 0:
            x3 += 1
        else:
            y2 += 1
    else:
        if muki % 2 == 0:
            if x3:
                x2.append(x3)
                x3 = 0
            muki += 1
        else:
            if y2:
                y1.append(y2)
                y2 = 0
            muki += 1
if x3:
    x2.append(x3)
if y2:
    y1.append(y2)

ansx = {x1}
for i in x2:
    ansx.update({x - i for x in ansx})
    ansx.update({x + i for x in ansx})

ansy = {0}
for i in y1:
    ansy.update({y - i for y in ansy})
    ansy.update({y + i for y in ansy})

if x in ansx and y in ansy:
    print(""Yes"")
else:
    print(""No"")",minor,Meta-Llama-2-7b-chat,0.9662
257,python_258,Python,"import sys
import numpy as np
input = sys.stdin.readline

N,M,X = list(map(int,input().split()))
CA = [ list(map(int,input().split())) for _ in range(N)]
bit = 2**N
cost = float('inf')

for bi in range(1,bit):
    tmp=[]
    for i in range(N):
        if bi & 1<<i:
            tmp.append(CA[i-1])
    tmp = np.array(tmp)        
    a = sum(tmp)
    if all( [a[j]>=X for j in range(1,M+1)]):
        cost = min(cost,a[0])
print( -1 if cost == float('inf') else cost)
","```
import sys
import numpy as np
from functools import reduce

N, M, X = map(int, input().split())
CA = [list(map(int, input().split())) for _ in range(N)]
bit = 2 ** N
cost = float('inf')

for bi in range(1, bit):
    tmp = [CA[i - 1] for i in range(N) if bi & 1 << i]
    tmp = np.array(tmp)
    a = reduce(sum, tmp, 0)
    if all(a[j] >= X for j in range(1, M + 1)):
        cost = min(cost, a[0])
print(-1 if cost == float('inf') else cost)
```",minor,Meta-Llama-2-7b-chat,0.9374
258,python_259,Python,"from collections import deque
k = int(input())

ans = deque([i for i in range(1, 10)])


def generate_lunlun(x):
    y = x % 10
    if 0 <= y-1:
        yield 10*x + y-1
    yield 10*x + y
    if y+1 < 10:
        yield 10*x + y+1


cnt = 0
while True:
    x = ans.popleft()
    for i in generate_lunlun(x):
        ans.append(i)
    cnt += 1
    if cnt == k:
        print(x)
        break","```
from collections import deque

k = int(input())

answer = deque(range(1, 10))

def generate_lunlun(x):
    y = x % 10
    yield 10 * x + y - 1 if y - 1 >= 0 else None
    yield 10 * x + y
    yield 10 * x + y + 1 if y + 1 < 10 else None

count = 0
while True:
    x = answer.popleft()
    for i in generate_lunlun(x):
        if i is not None:
            answer.append(i)
    count += 1
    if count == k:
        print(x)
        break
```",minor,Meta-Llama-2-7b-chat,0.8869
259,python_260,Python,"# coding: utf-8
import sys

sr = lambda: sys.stdin.readline().rstrip()
ir = lambda: int(sr())
lr = lambda: list(map(int, sr().split()))

X, Y, A, B, C = lr()
P = lr(); P.sort(reverse=True)
Q = lr(); Q.sort(reverse=True)
R = lr(); R.sort(reverse=True)
P = P[:X]
Q = Q[:Y]
Z = P + Q + R
Z.sort(reverse=True)
answer = sum(Z[:X+Y])
print(answer)
","```
# coding: utf-8
import sys

readline = lambda: sys.stdin.readline().rstrip()
readint = lambda: int(readline())
readlist = lambda: list(map(int, readline().split()))

X, Y, A, B, C = readlist()
P = sorted(map(int, readline().split()), reverse=True)[:X]
Q = sorted(map(int, readline().split()), reverse=True)[:Y]
R = sorted(map(int, readline().split()), reverse=True)
Z = P + Q + R
Z.sort(reverse=True)
print(sum(Z[:X+Y]))
```",minor,Meta-Llama-2-7b-chat,0.8539
260,python_261,Python,"
a,b,k = map(int,input().split())

if a >= k:
    print(a-k,b)
elif a < k < a+b:
    print(0,b-k+a)
else:
    print(0,0)","```
a, b, k = map(int, input().split())

if a >= k:
    print(a - k, b)
elif k >= a:
    print(0, b - k + a)
else:
    print(0, 0)
```",minor,Meta-Llama-2-7b-chat,0.8245
261,python_262,Python,"""""""
https://atcoder.jp/contests/tokiomarine2020/submissions/14229099
""""""
N,K = map(int,input().split())
A = list(map(int,input().split()))

def update(A):
    b = [0]*N

    for i,a in enumerate(A):
        l = max(0,i-a)
        r = min(N-1,i+a)

        b[l] += 1
        if r+1 < N:
            b[r+1] -= 1
    
    res = []
    s = 0
    for i in b:
        s += i
        res.append(s)
    return res

for _ in range(min(K,75)):
    A = update(A)

print(*A)","```
""""""
https://atcoder.jp/contests/tokiomarine2020/submissions/14229099
""""""
N, K = map(int, input().split())
A = list(map(int, input().split()))

def update(arr):
    b = [0] * N
    for i, a in enumerate(arr):
        l = max(0, i - a)
        r = min(N - 1, i + a)
        b[l] += 1
        if r + 1 < N:
            b[r + 1] -= 1
    res = []
    s = 0
    for i in b:
        s += i
        res.append(s)
    return res

for _ in range(min(K, 75)):
    A = update(A)

print(*A)
```",minor,Meta-Llama-2-7b-chat,0.9125
262,python_263,Python,"from collections import Counter
n = int(input())
d = Counter(list(input()))
val = d.values()
ans = 1
for i in val:
    ans *= (i + 1)
    ans %= 10**9 + 7
print(ans - 1)","```
from collections import Counter
n = int(input())
d = Counter(input())
values = list(d.values())
ans = 1
for value in values:
    ans *= (value + 1)
    ans %= 10**9 + 7
print(ans - 1)
```",minor,Meta-Llama-2-7b-chat,0.8605
263,python_264,Python,"N = int(input())
R = [[int(i) for i in input().split()] for _ in range(N)]
B = [[int(i) for i in input().split()] for _ in range(N)]

R.sort()
B.sort()

count = 0
tmp = []
for bx, by in B:
    for rx, ry in R:
        if bx > rx and by > ry:
            tmp.append([rx, ry])
    if tmp != []:
        max_red = max(tmp, key=lambda r: r[1])
        count += 1
        R.remove(max_red)
        tmp = []
print(count)

","```
N = int(input())
rows = [[int(i) for i in input().split()] for _ in range(N)]
boxes = [[int(i) for i in input().split()] for _ in range(N)]

rows.sort()
boxes.sort()

count = 0
for bx, by in boxes:
    for rx, ry in rows[:]:
        if bx > rx and by > ry:
            rows.remove([rx, ry])
    if rows:
        count += 1
print(count)
```",minor,Meta-Llama-2-7b-chat,0.8824
264,python_265,Python,"import bisect

s = input()
t = input()

se = set(list(s))
for ti in t:
    if not ti in se:
        print(-1)
        exit()

word = [[] for _ in range(26)]
for i, si in enumerate(s):
    word[ord(si) - ord('a')].append(i)

ans = 0
now = 0
for i, ti in enumerate(t):
    j = bisect.bisect_left(word[ord(ti) - ord('a')], now)
    if j < len(word[ord(ti) - ord('a')]):
        j = word[ord(ti) - ord('a')][j]
        ans += j - now + 1
        now = (j + 1) % len(s)
    else:
        ans += len(s) - now
        now = 0
        j = bisect.bisect_left(word[ord(ti) - ord('a')], 0)
        j = word[ord(ti) - ord('a')][j]
        ans += j - now + 1
        now = j + 1


print(ans)
","```
import bisect

s = input()
t = input()

unique_chars = set(s)
if any(char not in unique_chars for char in t):
    print(-1)
    exit()

word_indices = [[] for _ in range(26)]
for i, char in enumerate(s):
    word_indices[ord(char) - ord('a')].append(i)

ans = 0
now = 0
for char in t:
    indices = word_indices[ord(char) - ord('a')]
    j = bisect.bisect_left(indices, now)
    if j < len(indices):
        j = indices[j]
        ans += j - now + 1
        now = (j + 1) % len(s)
    else:
        ans += len(s) - now
        now = 0
        j = bisect.bisect_left(indices, 0)
        j = indices[j]
        ans += j - now + 1
        now = j + 1

print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8508
265,python_266,Python,"N = input()
if '9' in N:
  print('Yes')
else:
  print('No')","```
n = input()
if '9' in n:
    print('Yes')
else:
    print('No')
```",minor,Meta-Llama-2-7b-chat,0.8644
266,python_267,Python,"from collections import deque

n = int(input())
ab = [list(map(int, input().split())) for i in range(n)]

for i in range(n):
  a, b=ab[i]
  ab[i].append(a+b)
ab.sort(key=lambda x:x[2], reverse=True)
ab=deque(ab)
count = 0
ans=0
while len(ab)>0:
  a, b, dif = ab.popleft()
  if count%2==0:
    ans+=a
  else:
    ans-=b
  count+=1
print(ans)","```
from collections import deque

n = int(input())
ab = [[*map(int, input().split()), sum(map(int, input().split()))] for _ in range(n)]
ab.sort(key=lambda x: x[2], reverse=True)
ab = deque(ab)
count = 0
ans = 0
while ab:
    a, b, _ = ab.popleft()
    ans += a if count % 2 == 0 else -b
    count += 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8526
267,python_268,Python,"from math import log2
n = int(input())
arr = list(map(int, input().split()))

if n == 0:
    if arr[0] == 1:
        print(1)
    else:
        print(-1)
    exit()

if arr[0] != 0:
    print(-1)
    exit()

arr.reverse()

ar2 = [None] * (n+1)

for i, e in enumerate(arr):
    if i == 0:
        ar2[0] = (e, e)
        continue

    ar2[i] = (ar2[i-1][0]+e, (ar2[i-1][1]+1) // 2 + e)

if ar2[-1][1] > 1:
    print(-1)
    exit()

ar2.reverse()

total = 0
acc = 1
for i, t in enumerate(ar2):
    acc = min(acc, t[0])

    total += acc
    acc -= arr[n-i]
    acc *= 2

print(total)
","```
from math import log2
n = int(input())
arr = list(map(int, input().split()))

if n == 0:
    if arr[0]!= 1:
        print(-1)
    else:
        print(1)
    exit()

if any(num!= 0 for num in arr):
    print(-1)
    exit()

arr.reverse()

ar2 = [(0, 0)] * (n + 1)

for i, e in enumerate(arr):
    if i == 0:
        ar2[0] = (e, e)
    else:
        ar2[i] = (ar2[i-1][0] + e, (ar2[i-1][1] + 1) // 2 + e)

if ar2[-1][1] > 1:
    print(-1)
    exit()

ar2.reverse()

total = 0
acc = 0
for i, t in enumerate(ar2):
    acc = min(acc, t[0])
    total += acc
    acc -= arr[n-i]
    acc *= 2

print(total)
```",minor,Meta-Llama-2-7b-chat,0.8987
268,python_269,Python,"import sys

N, X = map(int, sys.stdin.readline().split())
L = list(map(int, sys.stdin.readline().split()))

ans = 0
for i, l in enumerate(L):
    ans += l
    if ans > X:
        print(i+1)
        break
else:
    print(N+1)","```
import sys

n, x = map(int, sys.stdin.readline().split())
numbers = list(map(int, sys.stdin.readline().split()))

total = 0
for i, num in enumerate(numbers):
    total += num
    if total > x:
        print(i + 1)
        break
else:
    print(n + 1)
```",minor,Meta-Llama-2-7b-chat,0.8359
269,python_270,Python,"S = input()
c = S.find('C')
f = S[c:].find('F')+c
if c < 0 or f < 0:
    print('No')
    exit()
print('Yes' if f-c > 0 else 'No')
","```
S = input()
c = S.find('C')
f = S[c:].find('F') + c if c >= 0 else -1
if f < 0:
    print('No')
    exit()
print('Yes' if f - c > 0 else 'No')
```",minor,Meta-Llama-2-7b-chat,0.8253
270,python_271,Python,"import bisect
import copy
import heapq
import math
import sys
from collections import *
from functools import lru_cache
from itertools import accumulate, combinations, permutations, product
def input():
    return sys.stdin.readline()[:-1]
def ruiseki(lst):
    return [0]+list(accumulate(lst))
sys.setrecursionlimit(500000)
mod=pow(10,9)+7
al=[chr(ord('a') + i) for i in range(26)]
direction=[[1,0],[0,1],[-1,0],[0,-1]]

n=int(input())
a=[int(input()) for i in range(n)]

a.sort()

ans1=0
if n%2==0:
    for i in range(n):
        if i<n//2:
            ans1-=a[i]*2
        else:
            ans1+=a[i]*2
    ans1-=a[n//2]
    ans1+=a[n//2-1]
    print(ans1)
else:
    for i in range(n):
        if i<n//2:
            ans1-=a[i]*2
        elif i>n//2:
            ans1+=a[i]*2
    print(max(ans1+a[n//2]-a[n//2+1],ans1-a[n//2]+a[n//2-1]))","```
import bisect
import copy
import heapq
import math
import sys
from collections import *
from functools import lru_cache
from itertools import accumulate, combinations, permutations, product

def input():
    return sys.stdin.readline().strip()

def ruiseki(lst):
    return [0] + list(accumulate(lst))

sys.setrecursionlimit(500000)
mod = 10**9 + 7
al = [chr(ord('a') + i) for i in range(26)]
direction = [[1, 0], [0, 1], [-1, 0], [0, -1]]

n = int(input())
a = [int(input()) for _ in range(n)]

a.sort()

ans = 0
if n % 2 == 0:
    for i in range(n):
        if i < n // 2:
            ans -= a[i] * 2
        else:
            ans += a[i] * 2
    ans -= a[n // 2]
    ans += a[n // 2 - 1]
    print(ans)
else:
    for i in range(n):
        if i < n // 2:
            ans -= a[i] * 2
        elif i > n // 2:
            ans += a[i] * 2
    print(max(ans + a[n // 2] - a[n // 2 + 1], ans - a[n // 2] + a[n // 2 - 1]))
```",minor,Meta-Llama-2-7b-chat,0.9134
271,python_272,Python,"N, M = map(int, input().split())
E = []
for _ in range(M):
    a,b,c = map(int, input().split())
    E.append((a,b,c))
dist = [-N*10**9]*(N+1)
dist[1] = 0
flag = False
for i in range(N):
    for (a,b,c) in E:
        newlen = dist[a] + c
        if newlen > dist[b]:
            dist[b] = newlen
    if i == N-1 and dist[N] > predist:
        flag =True
    predist = dist[N]

if flag:
    print(""inf"")
else:
    print(dist[N])","```
n, m = map(int, input().split())
edges = []
for _ in range(m):
    a, b, c = map(int, input().split())
    edges.append((a, b, c))
distance = [float('-inf')] * (n + 1)
distance[1] = 0
for _ in range(n):
    for a, b, c in edges:
        new_length = distance[a] + c
        if new_length > distance[b]:
            distance[b] = new_length
predist = distance[n]
if predist > float('-inf'):
    print('inf')
else:
    print(predist)
```",minor,Meta-Llama-2-7b-chat,0.8455
272,python_273,Python,"import math
n,d = map(int, input().split())
cnt=0
for i in range(n):
    a,b=map(int, input().split())
    s = math.sqrt(a*a+b*b)
    if s<=d:
        cnt+=1
print(cnt)","```
import math
n, d = map(int, input().split())
count = 0
for _ in range(n):
    a, b = map(int, input().split())
    distance = math.sqrt(a**2 + b**2)
    if distance <= d:
        count += 1
print(count)
```",minor,Meta-Llama-2-7b-chat,0.8228
273,python_274,Python,"n,d = map(int, input().split())

t = n//(2*d+1)
if n > t*(2*d+1):
    print(t+1)
else:
    print(t)","```
n, d = map(int, input().split())
total = n // (2 * d + 1)
if n > total * (2 * d + 1):
    print(total + 1)
else:
    print(total)
```",minor,Meta-Llama-2-7b-chat,0.8459
274,python_275,Python,"a, b, c, d = map(int, input().split())

while a>0 and c>0:
    c-=b
    a-=d

if c<=0: 
    print('Yes')          
else:  
    print('No')  ","```
a, b, c, d = map(int, input().split())

while a > 0 and c > 0:
    c -= b
    a -= d

print('Yes' if c <= 0 else 'No')",minor,Meta-Llama-2-7b-chat,0.9029
275,python_276,Python,"n = int(input())
a = list(map(int, input().split()))
for i in range(1,n):
    if a[i-1] < a[i]:
        a[i] -=1
    if a[i-1] > a[i]:
        print(""No"")
        break
else:
    print(""Yes"")","```
n = int(input())
a = list(map(int, input().split()))
for i in range(1, n):
    if a[i-1] > a[i]:
        print(""No"")
        break
else:
    print(""Yes"")
```",minor,Meta-Llama-2-7b-chat,0.8468
276,python_277,Python,"import sys, re
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians
from itertools import accumulate, permutations, combinations, product
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left
from fractions import gcd
from heapq import heappush, heappop
from functools import reduce
def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7

N = INT()
S = list(input())
Q = INT()

class Bit:
   def __init__(self, n):
       self.size = n
       self.tree = [0] * (n + 1)
   def sum(self, i):
       s = 0
       while i > 0:
           s += self.tree[i]
           i -= i & -i
       return s
   def add(self, i, x):
       while i <= self.size:
           self.tree[i] += x
           i += i & -i

dic_char = defaultdict(int)
for i, char in enumerate(ascii_lowercase):
	dic_char[char] = i

bits = [None]*len(ascii_uppercase)
for i in range(len(ascii_uppercase)):
	bits[i] = Bit(N)

for i in range(N):
	bits[dic_char[S[i]]].add(i+1, 1)

for _ in range(Q):
	a, b, c = input().split()
	if a == ""1"":  # BITを更新
		b = int(b)
		char = S[b-1]
		bits[dic_char[char]].add(b, -1)
		bits[dic_char[c]].add(b, 1)
		S[b-1] = c
	if a == ""2"":
		cnt = 0
		b, c = int(b), int(c)
		for i in range(len(ascii_uppercase)):
			cnt += bits[i].sum(c)-bits[i].sum(b-1) >= 1
		print(cnt)
","```
import sys
from collections import defaultdict
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians
from itertools import accumulate, permutations, combinations, product
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left
from fractions import gcd
from heapq import heappush, heappop
from functools import reduce
def input(): return sys.stdin.readline().strip()
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(): return list(map(int, input().split()))
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7

N = INT()
S = list(input())
Q = INT()

class Bit:
   def __init__(self, n):
       self.size = n
       self.tree = [0] * (n + 1)
   def sum(self, i):
       s = 0
       while i > 0:
           s += self.tree[i]
           i -= i & -i
       return s
   def add(self, i, x):
       while i <= self.size:
           self.tree[i] += x
           i += i & -i

dic_char = {char: i for i, char in enumerate(ascii_lowercase)}
bits = [Bit(N) for _ in range(len(ascii_uppercase))]

for i in range(N):
    bits[dic_char[S[i]]].add(i+1, 1)

for _ in range(Q):
    a, b, c = input().split()
    if a == ""1"":
        b = int(b)
        char = S[b-1]
        bits[dic_char[char]].add(b, -1)
        bits[dic_char[c]].add(b, 1)
        S[b-1] = c
    elif a == ""2"":
        cnt = 0
        b, c = int(b), int(c)
        for i in range(len(ascii_uppercase)):
            cnt += bits[i].sum(c)-bits[i].sum(b-1) >= 1
        print(cnt)",minor,Meta-Llama-2-7b-chat,0.9895
277,python_278,Python,"N = int(input())
A = [int(input()) for _ in range(N)]
sorted_A = sorted(A)
for i in range(N):
    if A[i] == sorted_A[-1]:
        print(sorted_A[-2])
    else:
        print(sorted_A[-1])
","```
n = int(input())
numbers = [int(input()) for _ in range(n)]
sorted_numbers = sorted(numbers)
print(sorted_numbers[-2] if numbers[-1] == sorted_numbers[-1] else sorted_numbers[-1])
```",minor,Meta-Llama-2-7b-chat,0.8066
278,python_279,Python,"def solution():
    user_input = input()
    animals, legs = [int(x) for x in user_input.split()]

    turtles = (4*animals - legs) / 2
    condition = turtles >= 0 and turtles <= animals and turtles % 1 == 0 
    if condition:
        print(""Yes"")
    else:
        print(""No"")

solution()","```
def calculate_turtles(animals, legs):
    return (4*animals - legs) / 2

def solution():
    user_input = input().split()
    animals, legs = map(int, user_input)
    turtles = calculate_turtles(animals, legs)
    if 0 <= turtles <= animals and turtles.is_integer():
        print(""Yes"")
    else:
        print(""No"")

solution()
```",minor,Meta-Llama-2-7b-chat,0.8455
279,python_280,Python,"A, B, C = map(int, input().split())
print(C, A, B)","```
a, b, c = map(int, input().split())
print(c, a, b)
```",minor,Meta-Llama-2-7b-chat,0.7936
280,python_281,Python,"n = int(input())
a_list = list(map(int, input().split()))
a_list.sort()

cnt = 0
has_zero = False

for item in a_list:
    if item < 0:
        cnt += 1
    elif item == 0:
        has_zero = True

abs_list = list(map(abs, a_list))
abs_list.sort()

if has_zero:
    print(sum(abs_list))
elif cnt % 2 == 0:
    print(sum(abs_list))
else:
    print(sum(abs_list) - 2 * abs_list[0])
","```
n = int(input())
numbers = list(map(int, input().split()))
numbers.sort()

negatives = sum(1 for num in numbers if num < 0)
has_zero = any(num == 0 for num in numbers)

abs_numbers = list(map(abs, numbers))
abs_numbers.sort()

if has_zero:
    print(sum(abs_numbers))
elif negatives % 2 == 0:
    print(sum(abs_numbers))
else:
    print(sum(abs_numbers) - 2 * abs_numbers[0])
```",minor,Meta-Llama-2-7b-chat,0.8635
281,python_282,Python,"n = int(input())

print(0, flush=True)
s = input()
if s == 'Vacant':
    exit()
head_v = s
head_i = 0
print(n-1, flush=True)
s = input()
if s == 'Vacant':
    exit()
tail_v = s
tail_i = n-1

while True:
    mi = (head_i + tail_i) // 2
    print(mi, flush=True)
    mv = input()

    if mv == 'Vacant':
        exit()
    if tail_v == mv and (tail_i - mi) % 2 == 1 or tail_v != mv and (tail_i - mi) % 2 == 0:
        head_i = mi
        head_v = mv
    else:
        tail_i = mi
        tail_v = mv
","```
n = int(input())

print(0, flush=True)
s = input()
if s == 'Vacant':
    exit()

head = s
head_index = 0
print(n-1, flush=True)
s = input()
if s == 'Vacant':
    exit()
tail = s
tail_index = n-1

while True:
    mid_index = (head_index + tail_index) // 2
    print(mid_index, flush=True)
    move = input()

    if move == 'Vacant':
        exit()
    if tail == move and (tail_index - mid_index) % 2 == 1 or tail!= move and (tail_index - mid_index) % 2 == 0:
        head_index = mid_index
        head = move
    else:
        tail_index = mid_index
        tail = move
```",minor,Meta-Llama-2-7b-chat,0.8868
282,python_283,Python,"a = int(input())
s = input()

if a >= 3200:
    print(s)
else:
    print(""red"")","```
threshold = int(input())
color = input()

if threshold >= 3200:
    print(color)
else:
    print(""red"")
```",minor,Meta-Llama-2-7b-chat,0.8188
283,python_284,Python,"A, B = map(int, input().split())
print((A+B) % 24)","```
hour, minute = map(int, input().split())
print((hour + minute // 60) % 24)
```",minor,Meta-Llama-2-7b-chat,0.7756
284,python_285,Python,"def main():
    A, B, C, K = map(int, input().split())
    if K <= A + B:
        print(min([A, K]))
    else:
        print(A - (K - A - B))


if __name__ == '__main__':
    main()
","```
def main():
    a, b, c, k = map(int, input().split())
    if k <= a + b:
        print(min(a, k))
    else:
        print(a + c - k)


if __name__ == '__main__':
    main()
```",minor,Meta-Llama-2-7b-chat,0.8441
285,python_286,Python,"N = int(input())
L = list(map(int, input().split()))
# L.sort()
# print(L)
ans = 0
for i in range(N):
    for j in range(i+1, N):
        for k in range(j+1, N):
            if L[i] == L[k] or L[k] == L[j] or L[i] == L[j]:
                continue
            if L[i] + L[j] > L[k] and L[i] + L[k] > L[j] and L[k] + L[j] > L[i]:
                ans += 1
print(ans)
","```
N = int(input())
L = sorted(map(int, input().split()))
ans = 0
for i in range(N-2):
    if i > 0 and L[i] == L[i-1]:
        continue
    for j in range(i+1, N-1):
        if j > i+1 and L[j] == L[j-1]:
            continue
        if L[i] + L[j] > L[j+1] and L[i] + L[j+1] > L[j] and L[j+1] + L[j] > L[i]:
            ans += 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8842
286,python_287,Python,"a,b = map(int,input().split())

x = []
i = 1
n = int(a/0.08) + int(b/0.1) + 2

for i in range(0,n):
  if(int(0.08*i) == a and int(0.1*i) == b):
    x.append(i)
    
if(len(x) != 0):
  print(min(x))
else:
  print(-1)

  

","```
a, b = map(int, input().split())

n = int(a / 0.08) + int(b / 0.1) + 2

result = [i for i in range(n) if int(0.08 * i) == a and int(0.1 * i) == b]
print(min(result) if result else -1)
```",minor,Meta-Llama-2-7b-chat,0.8196
287,python_288,Python,"#!/usr/bin/env python3
from collections import defaultdict
import sys
sys.setrecursionlimit(10**8)
input = sys.stdin.readline

h, w, n = [int(item) for item in input().split()]
blk_cnt = defaultdict(int) 

for i in range(n):
    a, b = [int(item) - 1 for item in input().split()]
    for j in range(-1, 2):
        for k in range(-1, 2):
            blk_cnt[(a + j, b + k)] += 1
ans = [0] * 10 
for key in blk_cnt.keys():
    if key[0] < 1 or key[1] < 1 or key[0] >= h-1 or key[1] >= w-1:
        continue
    ans[blk_cnt[key]] += 1
total = (w - 2) * (h - 2)
ans[0] = total - sum(ans)
for item in ans:
    print(item)","```
#!/usr/bin/env python3
from collections import defaultdict
import sys

sys.setrecursionlimit(10**8)
input = sys.stdin.readline

h, w, n = map(int, input().split())
block_count = defaultdict(int)

for _ in range(n):
    a, b = map(int, input().split()) - 1
    for j in range(-1, 2):
        for k in range(-1, 2):
            block_count[(a + j, b + k)] += 1

result = [0] * 10
for block, count in block_count.items():
    if 1 <= block[0] < h - 1 and 1 <= block[1] < w - 1:
        result[count] += 1

total = (w - 2) * (h - 2)
result[0] = total - sum(result)
for item in result:
    print(item)",minor,Meta-Llama-2-7b-chat,0.9759
288,python_289,Python,"h1, m1, h2, m2, k = map(int, input().split())

time = (h2 * 60 + m2) - (h1 * 60 + m1)

print(time - k)
","```
hour1, minute1, hour2, minute2, minutes_to_subtract = map(int, input().split())

total_minutes1 = hour1 * 60 + minute1
total_minutes2 = hour2 * 60 + minute2

time_difference = total_minutes2 - total_minutes1

print(time_difference - minutes_to_subtract)
```",minor,Meta-Llama-2-7b-chat,0.7063
289,python_290,Python,"n = int(input())
P = list(map(int, input().split()))

ans = 0
for i in range(n):
    if P[i] == i+1:
        if i != n-1:
            P[i+1] = P[i]
            ans += 1
        else:
            ans += 1
print(ans)","```
n = int(input())
P = list(map(int, input().split()))

ans = 0
for i in range(n):
    if P[i] == i + 1:
        if i < n - 1:
            P[i + 1] = P[i]
            ans += 1
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8376
290,python_291,Python,"
N,A,B = list(map(int,input().split()))
if B<A:
    print(0)
elif B!=A and N==1:
    print(0)
else:
    print(B*(N-1) + A - A*(N-1) - B + 1)","```
n, a, b = map(int, input().split())
if b < a:
    print(0)
elif n == 1:
    print(0)
else:
    print(b * (n - 1) + a - a * (n - 1) - b + 1)
```",minor,Meta-Llama-2-7b-chat,0.8475
291,python_292,Python,"N = int(input().strip())

c = 0
for n in range(1, N+1, 2):
  d = 0
  for i in range(1, n+1):
    if i * i > n:
      break
    if n % i == 0:
      d += 2
      if d >= 9:
        break
  if d == 8:
    c += 1

print(c)
","```
n_count = int(input().strip())

count = 0
for n in range(1, n_count+1, 2):
    divisors = 0
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            if i * i!= n:
                divisors += 2
            else:
                divisors += 1
        if divisors >= 9:
            break
    if divisors == 8:
        count += 1

print(count)
```",minor,Meta-Llama-2-7b-chat,0.8005
292,python_293,Python,"'''input
3
1
30000
20000
'''
import time
import math

n = int(input())
print(""second"" if all([int(input()) % 2 == 0 for i in range(n)]) else ""first"")
","```
import time
import math

n = int(input())
numbers = [int(input()) for _ in range(n)]
print(""first"" if all(num % 2!= 0 for num in numbers) else ""second"")
```",minor,Meta-Llama-2-7b-chat,0.8636
293,python_294,Python,"a=int(input())

print(a+a**2+a**3)","```
num = int(input())

result = num + num**2 + num**3
print(result)
```",minor,Meta-Llama-2-7b-chat,0.7921
294,python_295,Python,"def binary(N, LIST, num):  # 二分探索 # N:探索要素数
    l, r = -1, N
    while r - l > 1:
        if LIST[(l + r) // 2] > num:  # 条件式を代入
            r = (l + r) // 2
        else:
            l = (l + r) // 2
    return r + 1


n, d, a = map(int, input().split())
xh = sorted(list(map(int, input().split())) for _ in range(n))
x = [i for i, j in xh]
h = [(j + a - 1) // a for i, j in xh]

bomb, bsum, ans = [0] * (n + 1), [0] * (n + 1), 0
for i in range(n):
    j = binary(n, x, x[i] + 2 * d) - 1
    bnum = max(h[i] - (bsum[i - 1] + bomb[i]), 0)
    bomb[i] += bnum
    bomb[j] -= bnum
    bsum[i] += bsum[i - 1] + bomb[i]
    ans += bnum
print(ans)
","```
def binary_search(N, LIST, num):
    low, high = 0, N
    while high - low > 1:
        mid = (low + high) // 2
        if LIST[mid] > num:
            high = mid
        else:
            low = mid
    return low + 1


n, d, a = map(int, input().split())
data = sorted([int(x) for x in input().split()] for _ in range(n))
x, h = zip(*data)
x, h = list(x), list(h)

bomb, bsum, ans = [0] * (n + 1), [0] * (n + 1), 0
for i, (x_i, h_i) in enumerate(zip(x, h)):
    j = binary_search(n, x, x_i + 2 * d) - 1
    bnum = max(h_i - (bsum[i - 1] + bomb[i]), 0)
    bomb[i] += bnum
    bomb[j] -= bnum
    bsum[i] = bsum[i - 1] + bomb[i] if i else 0
    ans += bnum
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8694
295,python_296,Python,"N = int(input())

if N == 0:
    print(0)
    exit()

ans = []
x = N

while x != 1:
    if x % 2 == 0:
        ans.append('0')
    else:
        ans.append('1')
        x -= 1
    x /= -2
ans.append('1')

r = """".join(ans[::-1])
print(r)","```
N = int(input())

if N == 0:
    print('0')
    exit()

binary = []
x = N

while x!= 1:
    if x % 2 == 0:
        binary.append('0')
    else:
        binary.append('1')
        x -= 1
    x //= -2
binary.append('1')

binary_str = ''.join(reversed(binary))
print(binary_str)
```",minor,Meta-Llama-2-7b-chat,0.8218
296,python_297,Python,"# coding: utf-8
r = int(input())
print(r**2)","```
# coding: utf-8
square_number = int(input())
print(square_number ** 2)
```",minor,Meta-Llama-2-7b-chat,0.8366
297,python_298,Python,"S = input()

if len(S) == 2:
  print(S)
if len(S) == 3:
  print(S[::-1])","```
S = input()

if len(S) <= 2:
    print(S)
else:
    print(S[::-1])
```",minor,Meta-Llama-2-7b-chat,0.8227
298,python_299,Python,"N = int(input())
An = list(map(int, input().split()))
An.sort(reverse=True)
answer = 0
t = N-1
for i, Ai in enumerate(An):
    lim = 2
    if i==0:
        lim = 1
    for j in range(lim):
        if t > 0:
            answer += Ai
        t -= 1
print(answer)
","```
N = int(input())
An = sorted(map(int, input().split()), reverse=True)
answer = 0
t = N
for i, Ai in enumerate(An):
    if i == 0:
        t -= 1
    else:
        answer += Ai * 2
        t -= 2
print(answer)
```",minor,Meta-Llama-2-7b-chat,0.8487
299,python_300,Python,"# -*- coding: utf-8 -*-

A, B, T = map(int, input().split())

print(T//A*B)","```
A, B, T = map(int, input().split())

print((T // A) * B)
```",minor,Meta-Llama-2-7b-chat,0.7722
300,python_301,Python,"mod = int(1e9+7)
def pot(a, b):
    result = 1
    while(b):
        if(b%2):
            result=(result*a)%mod
        a=(a*a)%mod
        b//=2
    return result

n = int(input())
print((2*(pot(10,n)-pot(9,n))-(pot(10,n)-pot(8,n)))%(mod))","```
mod = 10**9 + 7

def power(a, b):
    result = 1
    while b:
        if b % 2:
            result = (result * a) % mod
        a = (a * a) % mod
        b //= 2
    return result

n = int(input())
print((2 * (power(10, n) - power(9, n)) - (power(10, n) - power(8, n))) % mod)
```",minor,Meta-Llama-2-7b-chat,0.8004
301,python_302,Python,"a,b=map(int,input().split())

grid=[[""#""for i in range(100)]for j in range(50)]+[["".""for i in range(100)]for j in range(50)]
#print(grid)

print(100,100)
a-=1  #下半分がその色だから
for i in range(1,49):
    for j in range(1,99):
        if all([ grid[i+x][j+y]==""#"" for x,y in ((0,0),(0,1),(1,0),(-1,0),(0,-1),(1,1),(-1,1),(1,-1),(-1,-1))]):
            if a==0:
                break
            grid[i][j]="".""
            a-=1

            
    if a==0:
        break
b-=1
for i in range(51,99):
    for j in range(1,99):
        if all([ grid[i+x][j+y]==""."" for x,y in ((0,0),(0,1),(1,0),(-1,0),(0,-1),(1,1),(-1,1),(1,-1),(-1,-1))]):
            if b==0:
                break
            grid[i][j]=""#""
            b-=1

            
    if b==0:
        break
for i in grid:
    print("""".join(i))","```
a, b = map(int, input().split())

grid = [[""#"" for _ in range(100)] for _ in range(50)] + [[""."" for _ in range(100)] for _ in range(50)]

print(100, 100)

a -= 1
for i in range(1, 49):
    for j in range(1, 99):
        if all(grid[i+x][j+y] == ""#"" for x, y in [(0, 0), (0, 1), (1, 0), (-1, 0), (0, -1), (1, 1), (-1, 1), (1, -1), (-1, -1)]):
            if a == 0:
                break
            grid[i][j] = "".""
            a -= 1

    if a == 0:
        break

b -= 1
for i in range(51, 99):
    for j in range(1, 99):
        if all(grid[i+x][j+y] == ""."" for x, y in [(0, 0), (0, 1), (1, 0), (-1, 0), (0, -1), (1, 1), (-1, 1), (1, -1), (-1, -1)]):
            if b == 0:
                break
            grid[i][j] = ""#""
            b -= 1

    if b == 0:
        break

for row in grid:
    print("""".join(row))",minor,Meta-Llama-2-7b-chat,0.9575
302,python_303,Python,"# -*- coding: utf-8 -*-
import collections

def search_b(a_char, a_count, b_most_common, fixed_count):
  thres = fixed_count - a_count
  for (b_char, b_count) in [b for b in b_most_common if b[1] > thres]:
    if a_char != b_char:
      return a_count + b_count
  
  return fixed_count


def search(a_most_common, b_most_common):
  fixed_count = -1
  b_max = b_most_common[0][1]

  for (a_char, a_count) in a_most_common:
    if a_count <= fixed_count - b_max:
      break

    fixed_count = search_b(a_char, a_count, b_most_common, fixed_count)
  
  return fixed_count


def main():
  n = int(input())
  V = list(map(int, input().split()))

  a = V[::2]
  b = V[1::2]
  
  a_counter = collections.Counter(a)
  b_counter = collections.Counter(b)

  a_most_common = a_counter.most_common()
  b_most_common = b_counter.most_common()

  if len(a_most_common) == 1 and len(b_most_common) == 1 and a_most_common[0][0] == b_most_common[0][0]:
    print(n // 2)
    return

  print(n - search(a_most_common, b_most_common))


if __name__ == '__main__':
  main()
","```
# -*- coding: utf-8 -*-
import collections

def search_b(a_char, a_count, b_most_common, fixed_count):
  threshold = fixed_count - a_count
  for char, count in [item for item in b_most_common if item[1] > threshold]:
    if a_char!= char:
      return a_count + count
  
  return fixed_count


def search(a_most_common, b_most_common):
  fixed_count = -1
  max_b_count = b_most_common[0][1]

  for char, count in a_most_common:
    if count <= fixed_count - max_b_count:
      break

    fixed_count = search_b(char, count, b_most_common, fixed_count)
  
  return fixed_count


def main():
  n = int(input())
  V = list(map(int, input().split()))

  a = V[::2]
  b = V[1::2]
  
  a_counter = collections.Counter(a)
  b_counter = collections.Counter(b)

  a_most_common = a_counter.most_common()
  b_most_common = b_counter.most_common()

  if len(a_most_common) == 1 and len(b_most_common) == 1 and a_most_common[0][0] == b_most_common[0][0]:
    print(n // 2)
    return

  print(n - search(a_most_common, b_most_common))


if __name__ == '__main__':
  main()
```",minor,Meta-Llama-2-7b-chat,0.8544
303,python_304,Python,"n = int(input())
if n == 1:
	print (1)
	exit()
def make_divisors(N):
	divisors = []
	for i in range(1, int(N**0.5)+1):
		if N % i == 0:
			divisors.append(i)
			if i != N // i:
				divisors.append(N//i)

	# divisors.sort()
	return divisors
a = make_divisors(n)
a.sort()
c = 100
for i in a:
	if i > n//2:
		break
	j = n//i
	c = min(max(len(str(i)),len(str(j))),c)
print(c)","```
n = int(input())
if n == 1:
    print(1)
    exit()

def make_divisors(N):
    divisors = []
    for i in range(1, int(N**0.5) + 1):
        if N % i == 0:
            divisors.append(i)
            if i!= N // i:
                divisors.append(N // i)
    return sorted(divisors)

a = make_divisors(n)
max_len = 100
for i in a:
    if i > n // 2:
        break
    j = n // i
    max_len = min(max(len(str(i)), len(str(j))), max_len)

print(max_len)
```",minor,Meta-Llama-2-7b-chat,0.913
304,python_305,Python,"
n, k, c = map(int, input().split())
s = input()
l = [0] * k
r = [0] * k
p = 0
# for i in range(n):
i = 0
while i < n:
    if s[i] == ""o"":
        l[p] = i
        p += 1
        if (p >= k):
            break
        i += c
    i += 1
p = k-1
# for i in range(n - 1, -1, -1):
i = n - 1
while i >= 0:
    if s[i] == ""o"":
        r[p] = i
        p -= 1
        if (p < 0):
            break
        i -= c
    i -= 1
#print(l, r)
for i in range(k):
    if l[i] == r[i]:
        print(l[i]+1)
","```
n, k, c = map(int, input().split())
s = input()
l, r = [0] * k, [0] * k
p = 0

for i in range(n):
    if s[i] == ""o"":
        l[p] = i
        p += 1
        if p == k:
            break

p -= 1
for i in range(n - 1, -1, -1):
    if s[i] == ""o"":
        r[p] = i
        p -= 1
        if p < 0:
            break

for i in range(k):
    if l[i] == r[i]:
        print(l[i] + 1)
```",minor,Meta-Llama-2-7b-chat,0.8911
305,python_306,Python,"N=int(input())
A=list(map(int,input().split()))
plus=[a for a in A if a>0]
mainus=[a for a in A if a<=0]
plus.sort()
mainus.sort(reverse=True)
if len(mainus)==0:
    print(sum(plus)-2*plus[0])
    now=plus[0]
    for i in range(1,len(plus)-1):
        print(str(now)+"" ""+str(plus[i]))
        now-=plus[i]
    print(str(plus[-1])+"" ""+str(now))
elif len(plus)==0:
    print(-1*sum(mainus)+2*mainus[0])
    now=mainus[0]
    for i in range(1,len(mainus)):
        print(str(now)+"" ""+str(mainus[i]))
        now-=mainus[i]
else:
    print(sum(plus)-sum(mainus))
    now=mainus[0]
    for i in range(len(plus)-1):
        print(str(now)+"" ""+str(plus[i]))
        now-=plus[i]
    if len(plus)>0:
        print(str(plus[-1])+"" ""+str(now))
        now=plus[-1]-now
    for i in range(1,len(mainus)):
        print(str(now)+"" ""+str(mainus[i]))
        now-=mainus[i]","```
n = int(input())
a = list(map(int, input().split()))
pos = [x for x in a if x > 0]
neg = [x for x in a if x <= 0]
pos.sort()
neg.sort(reverse=True)
if not neg:
    print(sum(pos) - 2 * pos[0])
    now = pos[0]
    for i in range(1, len(pos) - 1):
        print(f""{now} {pos[i]}"")
        now -= pos[i]
    print(f""{pos[-1]} {now}"")
elif not pos:
    print(-1 * sum(neg) + 2 * neg[0])
    now = neg[0]
    for i in range(1, len(neg)):
        print(f""{now} {neg[i]}"")
        now -= neg[i]
else:
    print(sum(pos) - sum(neg))
    now = neg[0]
    for i in range(len(pos) - 1):
        print(f""{now} {pos[i]}"")
        now -= pos[i]
    if pos:
        print(f""{pos[-1]} {now}"")
        now = pos[-1] - now
    for i in range(1, len(neg)):
        print(f""{now} {neg[i]}"")
        now -= neg[i]
```",minor,Meta-Llama-2-7b-chat,0.8674
306,python_307,Python,"from itertools import accumulate
import sys
input = sys.stdin.readline

def main():
    n,c = map(int,input().split())
    x1,v1 = [0],[0]
    for _ in range(n):
        a,b = map(int, input().split())
        x1.append(a)
        v1.append(b)
    x2 = [0]
    v2 = [0]
    for i in range(n,0,-1):
        x2.append(c-x1[i])
        v2.append(v1[i])

    v1, v2 = list(accumulate(v1)), list(accumulate(v2))
    g1,g2 = [v2[0]-x2[0]],[v2[0]-2*x2[0]]
    for i in range(1,n+1):
        f = v2[i] - x2[i]
        f2 = v2[i] - 2*x2[i]
        g1.append(max(g1[i-1],f))
        g2.append(max(g2[i-1],f2))
    val = max(v1[n]-x1[n] + g2[0], v1[n]-2*x1[n] + g1[0])
    for i in range(1,n+1):
        val = max(val, v1[n-i]-x1[n-i] + g2[i], v1[n-i]-2*x1[n-i] + g1[i])

    print(val)

if __name__=='__main__': main()","```
from itertools import accumulate
import sys
input = sys.stdin.readline

def main():
    n, c = map(int, input().split())
    x1, v1 = [0], [0]
    for _ in range(n):
        a, b = map(int, input().split())
        x1.append(a)
        v1.append(b)
    x2 = [c - x for x in reversed(x1)]
    v2 = [v for v in reversed(v1)]

    v1, v2 = list(accumulate(v1)), list(accumulate(v2))
    g1, g2 = [v2[0] - x2[0]], [v2[0] - 2 * x2[0]]
    for i in range(1, n + 1):
        f = v2[i] - x2[i]
        f2 = v2[i] - 2 * x2[i]
        g1.append(max(g1[i - 1], f))
        g2.append(max(g2[i - 1], f2))
    val = max(v1[n] - x1[n] + g2[0], v1[n] - 2 * x1[n] + g1[0])
    for i in range(1, n + 1):
        val = max(val, v1[n - i] - x1[n - i] + g2[i], v1[n - i] - 2 * x1[n - i] + g1[i])

    print(val)

if __name__ == '__main__':
    main()
```",minor,Meta-Llama-2-7b-chat,0.8864
307,python_308,Python,"M=10**9+7
n,k,*l=map(int,open(0).read().split())
lp,lm=[],[]
for i in l:
  if i<0: lm+=[i]
  else: lp+=[i]
cp,cm=len(lp),len(lm)
ok=0
if cp:
  if n==k: ok=1-cm%2
  else: ok=1
else: ok=1-k%2
a=1
if ok<1:
  l.sort(key=lambda x:abs(x))
  for i in range(k): a=a*l[i]%M
else:
  lp.sort()
  lm.sort(reverse=1)
  if k%2: a=lp.pop()
  p=[]
  while len(lp)>1: p+=[lp.pop()*lp.pop()]
  while len(lm)>1: p+=[lm.pop()*lm.pop()]
  p.sort(reverse=1)
  for i in range(k//2): a=a*p[i]%M
print(a)","```
M = 10**9 + 7
n, k = map(int, open(0).read().split())
numbers = [int(x) for x in open(0).read().split()]
positive, negative = [], []
for num in numbers:
    if num < 0:
        negative.append(num)
    else:
        positive.append(num)
if positive:
    if n == k:
        result = 1 - (len(negative) % 2)
    else:
        result = 1
else:
    result = 1 - k % 2
if result == 0:
    numbers.sort(key=abs)
    for _ in range(k):
        result = (result * numbers[_]) % M
else:
    positive.sort()
    negative.sort(reverse=True)
    if k % 2:
        result = positive.pop()
    product = []
    while len(positive) > 1:
        product.append(positive.pop() * positive.pop())
    while len(negative) > 1:
        product.append(negative.pop() * negative.pop())
    product.sort(reverse=True)
    for _ in range(k // 2):
        result = (result * product[_]) % M
print(result)
```",minor,Meta-Llama-2-7b-chat,0.8444
308,python_309,Python,"n = int(input())
a = int(input())
print('Yes' if n % 500 <= a else 'No')","```
num = int(input())
amount = int(input())
print('Yes' if num % 500 <= amount else 'No')
```",minor,Meta-Llama-2-7b-chat,0.8326
309,python_310,Python,"from itertools import groupby

s = list(input())
ans = [0]*len(s)
ind = 0

for k,v in groupby(s):
  key,value = k,len(list(v))
  ind += value
  
  if k == 'R':
    if value%2 != 0:
      ans[ind-1] += (value//2)+1
      ans[ind] += value//2
    else:
      ans[ind-1] += value//2
      ans[ind] += value//2
  else:
    if value%2 != 0:
      ans[ind -value] += (value//2) + 1
      ans[ind-1- value] += (value//2) 
    else:
      ans[ind -value] += value//2
      ans[ind -1- value] += value//2
      
print(*ans)","```
from itertools import groupby

s = list(input())
ans = [0] * len(s)
ind = 0

for k, v in groupby(s):
    value = len(list(v))
    ind += value
    
    if k == 'R':
        ans[ind - 1] += value // 2 + (value % 2)
        ans[ind] += value // 2
    else:
        ans[ind - value] += value // 2
        ans[ind - 1 - value] += value // 2
        
print(*ans)
```",minor,Meta-Llama-2-7b-chat,0.8589
310,python_311,Python,"n,m = map(int,input().split())

ansl = []

start = n // 2
end = n // 2 + 1
for i in range(m):
    if n % 2 == 0 and end - start + 2 * i >= n // 2:
        ansl.append((start - i-1, end + i))
    else:
        ansl.append((start-i, end+i))

for a,b in sorted(ansl):
    print(a,b)
","```
n, m = map(int, input().split())

result = []

start = n // 2
end = n // 2 + (n % 2)
for i in range(m):
    result.append((start - i, end + i))

for a, b in sorted(result):
    print(a, b)
```",minor,Meta-Llama-2-7b-chat,0.8542
311,python_312,Python,"from operator import itemgetter
N,M = map(int,input().split())
S = [list(map(int,input().split()))+[i] for i in range(M)]

S.sort(key=itemgetter(1))
S.sort(key=itemgetter(0))
p = 0
m = 0
j = 1
while m < M:
    if S[m][0] == p:
        S[m][1] = j
        j += 1
        m += 1
    else:
        p += 1
        j = 1
        continue
S.sort(key=itemgetter(2))
for i in range(M):
    print(str(S[i][0]).zfill(6)+str(S[i][1]).zfill(6))

","```
from operator import itemgetter

N, M = map(int, input().split())
S = [[*map(int, input().split()), i] for i in range(M)]

S.sort(key=itemgetter(1))
S.sort(key=itemgetter(0, 2))
p, j = 0, 1
for i in range(M):
    if S[i][0] == p:
        S[i][1] = j
        j += 1
    else:
        p, j = S[i][0], 1

for row in S:
    print(f""{row[0]:06}{row[1]:06}"")
```",minor,Meta-Llama-2-7b-chat,0.8618
312,python_313,Python,"def main():
    N = int(input())
    A = [list(map(int, input().split())) for _ in range(N)]
    ans = 0
    for i in range(N):
        A[i][i] = float('INF')
    for i in range(N):
        for j in range(i):
            if i == j:
                A[i][j] = float('INF')
                continue
            b = min(map(sum, zip(A[i], A[j])))
            if A[i][j] > b:
                print(-1)
                return
            if b > A[i][j]:
                ans += A[i][j]
    print(ans)


main()
","```
def main():
    n = int(input())
    A = [[int(x) for x in input().split()] for _ in range(n)]
    ans = 0
    for i in range(n):
        A[i][i] = float('inf')
    for i in range(n):
        for j in range(i):
            if A[i][j] > min(sum(x) for x in zip(A[i], A[j])):
                print(-1)
                return
            ans += A[i][j]
    print(ans)


main()
```",minor,Meta-Llama-2-7b-chat,0.8595
313,python_314,Python,"#import sys
#import numpy as np
import math
#from fractions import Fraction
import itertools
from collections import deque
from collections import Counter
#import heapq
from fractions  import gcd
#input=sys.stdin.readline
import bisect
n,m=map(int,input().split())
a=list(map(int,input().split()))

s=[0]*n
a.sort()
s[0]=a[0]
for i in range(1,n):
    s[i]=s[i-1]+a[i]
res=0
l=0
r=2*a[-1]+1
while r>l+1:
    x=(l+r)//2
    res=0
    for ai in a:
        j=x-ai
        cnt=bisect.bisect_left(a,j)
        res+=(n-cnt)
    if res<m:
        r=x
    else:
        l=x
ans=0
c=0
for ai in a:
    cnt=bisect.bisect_left(a,l-ai)
    ans=ans+ai*(n-cnt)+(s[-1]-s[cnt-1]) if cnt!=0 else ans+ai*(n-cnt)+s[-1]
    c+=(n-cnt)
ans-=(c-m)*l
print(ans)
","```
import math
import bisect

n, m = map(int, input().split())
a = list(map(int, input().split()))
a.sort()

s = [0] * (n + 1)
s[0] = a[0]
for i in range(1, n + 1):
    s[i] = s[i - 1] + a[i - 1]

l, r = 0, 2 * a[-1] + 1
while r > l + 1:
    x = (l + r) // 2
    res = 0
    for ai in a:
        j = x - ai
        cnt = bisect.bisect_left(a, j)
        res += n - cnt
    if res < m:
        r = x
    else:
        l = x

ans = 0
c = 0
for ai in a:
    cnt = bisect.bisect_left(a, l - ai)
    ans += ai * (n - cnt) + (s[-1] - s[cnt - 1]) if cnt!= 0 else ans + ai * (n - cnt) + s[-1]
    c += n - cnt
ans -= (c - m) * l
print(ans)
```",minor,Meta-Llama-2-7b-chat,0.8691
314,python_315,Python,"
s = input()
while True:
    s = s[0:-1]
    c = s[0:len(s)//2]
    if s == c*2:
        print(len(s))
        exit()","```
s = input()
while True:
    s = s[:-1]
    if s == s[:len(s)//2]*2:
        print(len(s))
        break
```",minor,Meta-Llama-2-7b-chat,0.8682
315,python_316,Python,"import math
import itertools
row_length = int(input())
point = {}
for i in range(row_length):
    point[i] = list(map(int, input().split()))
point_list = [point[x] for x in range(len(point))]
pattern_list = list(itertools.permutations(point_list))



def calc_dist(pat_list): #旅程リストを入れた時に、その距離を計算する
    dist = 0
    for i in range(len(pat_list)-1):
        dist += math.sqrt(pow(pat_list[i][0] - pat_list[i+1][0], 2) + pow(pat_list[i][1] - pat_list[i+1][1], 2))
    return dist

ans_dist = 0
for j_list in pattern_list:
    ans_dist += calc_dist(j_list)

print(ans_dist/len(pattern_list))","```
import math
import itertools

row_length = int(input())
points = {}
for i in range(row_length):
    points[i] = list(map(int, input().split()))

points_list = [list(points.values())]

def calculate_distance(path):
    distance = 0
    for i in range(len(path) - 1):
        distance += math.sqrt((path[i][0] - path[i + 1][0]) ** 2 + (path[i][1] - path[i + 1][1]) ** 2)
    return distance

total_distance = 0
for path in itertools.permutations(points_list[0]):
    total_distance += calculate_distance(path)

print(total_distance / len(itertools.permutations(points_list[0])))
```",minor,Meta-Llama-2-7b-chat,0.8888
316,python_317,Python,"MOD=998244353
N,M,K=map(int,input().split())

inv_table = [0]+[1]
for i in range(2,K+2):
  inv_table.append(-(MOD//i)*inv_table[MOD%i]%MOD)

def powmod(a,p):
  if p==0:
    return 1
  else:
    pow2=powmod(a,p//2)
    if p%2==0:
      return (pow2**2)%MOD
    else:
      return (a*pow2**2)%MOD
def invmod(a):
  return powmod(a,MOD-2)

if M==1 and K<N-1:
  print(0)
elif K==N-1:
  print(powmod(M,N))
else:
  ans=0
  term1=powmod(M-1,N-1)
  term2=1
  inv_M1=invmod(M-1)
  for i in range(K+1):
    ans+=term1*term2
    ans%=MOD
    term1=term1*inv_M1%MOD
    term2=term2*(N-i-1)*inv_table[i+1]%MOD
    
  answer=M*ans%MOD
  print(answer)","```
MOD = 998244353
N, M, K = map(int, input().split())

inv_table = [0, 1]
for i in range(2, K + 1):
    inv_table.append(-(MOD // i) * inv_table[MOD % i] % MOD)

def powmod(a, p):
    if p == 0:
        return 1
    else:
        pow2 = powmod(a, p // 2)
        return (pow2 ** 2) % MOD if p % 2 == 0 else (a * pow2 ** 2) % MOD

def invmod(a):
    return powmod(a, MOD - 2)

if M == 1 and K < N - 1:
    print(0)
elif K == N - 1:
    print(powmod(M, N))
else:
    ans = 0
    term1 = powmod(M - 1, N - 1)
    term2 = 1
    inv_M1 = invmod(M - 1)
    for i in range(K + 1):
        ans += term1 * term2
        ans %= MOD
        term1 = (term1 * inv_M1) % MOD
        term2 = (term2 * (N - i - 1) * inv_table[i + 1]) % MOD
    
    print((M * ans) % MOD)
```",minor,Meta-Llama-2-7b-chat,0.7684
